{"version":3,"sources":["cookbooks-ui/_common/Section/Section.module.css","cookbooks-ui/_common/SectionHeader/SectionHeader.module.css","cookbooks-ui/_common/CopyButton/CopyButton.module.scss","tapis-hooks/context/TapisContext.tsx","tapis-hooks/context/useTapisConfig.ts","tapis-hooks/provider/TapisProvider.tsx","tapis-hooks/provider/index.ts","cookbooks-ui/_common/GenericModal/useModal.ts","cookbooks-ui/_common/LoadingSpinner/LoadingSpinner.js","cookbooks-ui/_common/LoadingSpinner/index.js","cookbooks-ui/_constants/welcomeMessages.js","cookbooks-ui/_common/Section/SectionMessages.js","cookbooks-ui/_common/SectionContent/SectionContent.js","cookbooks-ui/_common/Section/Section.js","cookbooks-ui/_common/SectionHeader/SectionHeader.js","cookbooks-ui/_common/InfiniteScrollTable/InfiniteScrollTable.js","cookbooks-ui/_common/Icon/Icon.js","cookbooks-ui/_common/Icon/index.js","cookbooks-ui/_common/Expand/Expand.js","cookbooks-ui/_common/Message/Message.js","cookbooks-ui/_common/Message/index.js","cookbooks-ui/_common/InlineMessage/InlineMessage.js","cookbooks-ui/_common/SectionMessage/SectionMessage.js","cookbooks-ui/_common/SectionMessage/index.js","cookbooks-ui/_common/DescriptionList/DescriptionList.js","cookbooks-ui/_common/DescriptionList/index.js","cookbooks-ui/_common/DropdownSelector/DropdownSelector.js","cookbooks-ui/_common/WelcomeMessage/WelcomeMessage.js","cookbooks-ui/_common/Pill/Pill.js","cookbooks-ui/_common/TextCopyField/TextCopyField.js","cookbooks-ui/_common/ReadMore/ReadMore.js","cookbooks-ui/_common/Paginator/Paginator.js","cookbooks-ui/_common/ProtectedRoute/ProtectedRoute.tsx","cookbooks-ui/_common/ProtectedRoute/index.ts","cookbooks-ui/_common/CopyButton/CopyButton.js","cookbooks-ui/_common/CopyButton/index.js","cookbooks-ui/_common/FieldWrapperFormik/FieldWrapperFormik.tsx","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikInput.tsx","cookbooks-ui/_common/FieldWrapperFormik/fields/formikPatch.ts","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikSelect.tsx","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikCheck.tsx","tapis-api/utils/apiGenerator.ts","tapis-api/utils/errorDecoder.ts","cookbooks-ui/_wrappers/QueryWrapper/QueryWrapper.tsx","cookbooks-ui/_wrappers/QueryWrapper/index.ts","cookbooks-ui/_wrappers/SubmitWrapper/SubmitWrapper.tsx","cookbooks-ui/_wrappers/SubmitWrapper/index.ts","cookbooks-ui/components/files/FileStat/FileStat.tsx","tapis-api/systems/list.ts","tapis-api/systems/details.ts","tapis-api/systems/schedulerProfiles.ts","tapis-hooks/systems/queryKeys.ts","tapis-hooks/systems/useList.ts","tapis-hooks/systems/useDetails.ts","tapis-hooks/systems/useSchedulerProfiles.ts","cookbooks-ui/components/systems/SystemDetail/SystemDetail.tsx","cookbooks-ui/_common/FieldWrapper/FieldWrapper.tsx","cookbooks-ui/_common/PageLayout/PageLayout.tsx","cookbooks-ui/_common/LayoutSections/LayoutSections.tsx","cookbooks-ui/_common/Collapse/Collapse.tsx","cookbooks-ui/_common/JSONDisplay/JSONDisplay.tsx","cookbooks-ui/_common/JSONDisplay/index.tsx","cookbooks-ui/_common/Tabs/Tabs.tsx","cookbooks-ui/_common/Tabs/index.ts","cookbooks-ui/_wrappers/Navbar/Navbar.tsx","tapis-app/_components/Sidebar/Sidebar.tsx","tapis-api/authenticator/login.ts","tapis-hooks/authenticator/queryKeys.ts","tapis-hooks/authenticator/useLogin.ts","tapis-api/apps/list.ts","tapis-api/apps/detail.ts","tapis-hooks/apps/queryKeys.ts","tapis-hooks/apps/useList.ts","tapis-hooks/apps/useDetail.ts","tapis-api/apps/create.ts","tapis-hooks/apps/useCreate.ts","tapis-app/Apps/_components/AppsNav/AppsNav.tsx","tapis-app/Apps/_components/AppsNav/index.ts","tapis-api/jobs/list.ts","tapis-api/jobs/details.ts","tapis-api/jobs/submit.ts","tapis-hooks/jobs/queryKeys.ts","tapis-hooks/jobs/useList.ts","tapis-hooks/jobs/useDetails.ts","tapis-hooks/jobs/useSubmit.ts","tapis-api/utils/jobFileInputs.ts","tapis-api/utils/jobFileInputArrays.ts","tapis-api/utils/jobArgs.ts","tapis-api/utils/jobDefaults.ts","stories-ui/components/jobs/JobLauncher/components/StepSummaryField.tsx","cookbooks-ui/utils/withBuilder.tsx","stories-ui/components/jobs/JobLauncher/components/useJobLauncher.tsx","stories-ui/components/jobs/JobLauncher/steps/JobStart.tsx","tapis-api/utils/jobExecSystem.ts","stories-ui/components/jobs/JobLauncher/steps/utils.ts","stories-ui/components/jobs/JobLauncher/steps/ExecOptions.tsx","stories-ui/components/jobs/JobLauncher/steps/AppArgs.tsx","stories-ui/components/jobs/JobLauncher/steps/SchedulerOptions.tsx","tapis-api/utils/jobRequiredFields.ts","stories-ui/components/jobs/JobLauncher/steps/JobSubmit.tsx","stories-ui/components/jobs/JobLauncher/steps/index.ts","tapis-app/Cookbook/Readme.tsx","stories-ui/components/jobs/JobLauncher/JupyterNotebookLauncher.tsx","stories-ui/components/jobs/JobLauncher/JobLauncherWizard.tsx","tapis-app/Apps/JobLauncher/_Layout/Layout.tsx","tapis-app/Apps/_Router/Router.tsx","tapis-app/Apps/_Layout/Layout.tsx","tapis-app/Login/_components/Login/Login.tsx","tapis-app/Login/_components/Login/index.ts","tapis-app/Login/_Layout/Layout.tsx","tapis-app/Apps/_components/AppsAdd/AppsAdd.tsx","tapis-app/Dashboard/_components/Dashboard/Dashboard.tsx","tapis-app/Jobs/_components/JobsNav/JobsNav.tsx","tapis-app/Jobs/_components/JobsNav/index.ts","cookbooks-ui/components/jobs/JobDetail/JobDetail.tsx","cookbooks-ui/components/jobs/JobLauncher/components/useJobLauncher.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/JobStart.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/ExecOptions.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/AppArgs.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/EnvVariables.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/SchedulerOptions.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/Archive.tsx","tapis-app/Jobs/JobDetail/_Layout/Layout.tsx","tapis-app/Jobs/_Router/Router.tsx","tapis-app/Jobs/_Layout/Layout.tsx","tapis-app/Systems/_components/SystemsNav/SystemsNav.tsx","tapis-app/Systems/_components/SystemsNav/index.ts","tapis-app/Systems/SystemDetail/_Layout/Layout.tsx","tapis-app/Systems/_Router/Router.tsx","tapis-app/Systems/_Layout/Layout.tsx","catalog/systems/index.ts","catalog/systems/ls6.ts","catalog/systems/frontera.ts","tapis-app/Cookbooks/Systems/_components/Dashboard/Dashboard.tsx","tapis-api/systems/create.ts","tapis-hooks/systems/useCreate.ts","tapis-hooks/credentials/queryKeys.ts","tapis-api/credentials/create.ts","tapis-hooks/credentials/useCreate.ts","tapis-app/Cookbooks/Systems/SystemCreate/_Layout/Layout.tsx","catalog/apps/llama-notebook.ts","tapis-app/Cookbooks/Apps/_components/AppsNav/CreateApp.tsx","catalog/apps/img-classify-mosorio.ts","catalog/apps/index.ts","tapis-app/Cookbooks/Apps/_components/AppsNav/AppsNav.tsx","tapis-app/Cookbooks/Apps/_components/AppsNav/index.ts","tapis-app/Cookbooks/Apps/AppDetail/_Layout/Layout.tsx","tapis-app/Cookbooks/Apps/_Router/Router.tsx","tapis-app/Cookbooks/Apps/_Layout/Layout.tsx","tapis-app/_Router/Router.tsx","tapis-app/_components/Notifications/NotificationToast.tsx","tapis-app/_components/Notifications/NotificationsContext.tsx","tapis-app/_components/Notifications/useNotifications.ts","tapis-app/_components/Notifications/NotificationsProvider.tsx","tapis-api/tenants/list.ts","tapis-hooks/tenants/queryKeys.ts","tapis-hooks/tenants/useList.ts","tapis-app/_Layout/Layout.tsx","tapis-app/_Layout/index.ts","reportWebVitals.ts","index.tsx","utils/resloveBasePath.ts","cookbooks-ui/_common/PageLayout/PageLayout.module.scss","cookbooks-ui/_common/Collapse/Collapse.module.scss","cookbooks-ui/_common/Expand/Expand.module.scss","cookbooks-ui/_wrappers/SubmitWrapper/SubmitWrapper.module.scss","cookbooks-ui/components/files/TransferListing/TransferListing.module.scss","cookbooks-ui/components/systems/SystemListing/SystemListing.module.scss","cookbooks-ui/_common/Tabs/Tabs.module.scss","cookbooks-ui/_common/SectionContent/SectionContent.module.css","cookbooks-ui/_common/ReadMore/ReadMore.module.scss","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikCheck.module.scss","cookbooks-ui/components/files/FileExplorer/FileExplorer.module.scss","cookbooks-ui/_common/JSONDisplay/JSONDisplay.module.scss","stories-ui/components/jobs/JobLauncher/steps/SchedulerOptions.module.scss","tapis-app/Apps/_components/AppsAdd/AppsAdd.module.scss","cookbooks-ui/components/jobs/JobLauncher/steps/SchedulerOptions.module.scss","tapis-app/_components/Sidebar/Sidebar.module.scss","cookbooks-ui/_common/Section/SectionMessages.module.css","cookbooks-ui/_common/SectionContent/SectionContent.layouts.module.css","cookbooks-ui/_common/DropdownSelector/DropdownSelector.module.css","cookbooks-ui/_common/Pill/Pill.module.scss","cookbooks-ui/components/jobs/JobLauncher/FieldArray.module.scss","stories-ui/components/jobs/JobLauncher/FieldArray.module.scss","cookbooks-ui/_wrappers/Wizard/Wizard.module.scss","cookbooks-ui/_common/Message/Message.module.scss","cookbooks-ui/_common/DescriptionList/DescriptionList.module.scss","cookbooks-ui/_common/Paginator/Paginator.module.scss","tapis-app/Dashboard/_components/Dashboard/Dashboard.module.scss","tapis-app/Cookbooks/Systems/_components/Dashboard/Dashboard.module.scss","tapis-app/_components/Notifications/NotificationToast.module.scss","cookbooks-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css","cookbooks-ui/_common/Breadcrumbs/Breadcrumbs.module.scss","cookbooks-ui/_common/TextCopyField/TextCopyField.module.scss","cookbooks-ui/components/files/FileListing/FileListing.module.scss","cookbooks-ui/_common/LayoutSections/LayoutSections.module.scss","cookbooks-ui/_wrappers/Navbar/Navbar.module.scss"],"names":["module","exports","authContext","basePath","TapisContext","React","createContext","useTapisConfig","useContext","getAccessToken","cookie","Cookies","get","JSON","parse","data","refetch","useQuery","initialData","accessToken","setAccessToken","async","_resp$expires_at","resp","remove","expires","Date","expires_at","set","stringify","claims","access_token","jwt_decode","TapisProvider","_ref","token","children","contextValue","queryClient","QueryClient","_jsx","Provider","value","QueryClientProvider","client","useModal","LoadingSpinner","placement","className","concat","Spinner","defaultProps","DASHBOARD","DATA","ALLOCATIONS","APPLICATIONS","HISTORY","ACCOUNT","TICKETS","UI","SectionMessages","routeName","welcomeText","welcomeMessageText","MESSAGES","welcomeMessageName","welcomeMessage","WelcomeMessage","messageName","hasMessage","useShouldShowWelcomeMessage","length","hasMessageClass","useEffect","document","body","classList","add","_jsxs","styles","root","LAYOUT_CLASS_MAP","oneRow","oneColumn","twoColumn","Object","keys","SectionContent","layoutName","shouldScroll","shouldDebugLayout","tagName","styleName","styleNameList","layoutClass","TagName","push","layoutStyles","join","Section","bodyClassName","content","contentClassName","contentLayoutName","contentShouldScroll","header","headerActions","headerClassName","manualContent","manualHeader","messages","messagesClassName","shouldBuildHeader","Error","_Fragment","SectionHeader","actions","undefined","isForForm","isForTable","HeadingTagName","heading","InfiniteScrollLoadingRow","isLoading","InfiniteScrollNoDataRow","_ref2","display","noDataText","InfiniteScrollTable","_ref3","tableColumns","tableData","onInfiniteScroll","getRowProps","columnMemoProps","columns","useMemo","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","onScroll","_ref4","target","scrollHeight","scrollTop","clientHeight","row","cells","cell","getCellProps","offset","Icon","name","iconClassName","fullClassName","label","role","Expand","detail","message","isOpen","setIsOpen","useState","toggleCallback","useCallback","Card","container","tag","CardHeader","summary","onClick","Collapse","CardBody","ERROR_TEXT","TYPE_MAP","info","iconName","iconText","success","warning","error","warn","SCOPE_MAP","inline","section","Message","onDismiss","canDismiss","isVisible","scope","type","typeMap","scopeMap","typeClassName","scopeClassName","hasDismissSupport","console","modifierClassNames","containerStyleNames","fadeProps","Fade","unmountOnExit","baseClass","timeout","in","text","icon","InlineMessage","props","messageProps","SectionMessage","setIsVisible","DIRECTION_CLASS_MAP","vertical","horizontal","DEFAULT_DIRECTION","DENSITY_CLASS_MAP","compact","default","DEFAULT_DENSITY","DescriptionListArray","val","index","key","DescriptionListValue","uuidv4","Array","isArray","Set","from","DescriptionList","density","direction","modifierClasses","entries","Fragment","DropdownSelector","onChange","canSelectMany","BootstrapInput","multiple","useShouldShowMessage","welcomeMessages","shouldShow","Alert","toggle","color","Pill","shouldTruncate","pillStyleName","TextCopyField","placeholder","isCopied","setIsCopied","onCopy","setTimeout","clearTimeout","stateTimeout","transitionDuration","isEmpty","CopyToClipboard","Button","style","disabled","event","preventDefault","input","readOnly","ReadMore","expanded","setExpanded","height","ref","useResizeDetector","hasOverflow","current","clamped","PaginatorPage","number","callback","page","Paginator","start","end","pages","spread","delta","Math","floor","middle","middlePages","fill","_","endcap","ProtectedRoute","rest","Route","location","Redirect","to","pathname","state","CopyButton","size","FieldWrapper","required","description","isHidden","as","Component","meta","useField","FormGroup","Label","alignItems","htmlFor","Badge","marginLeft","Field","id","FormText","FormikInput","formikProps","Input","bsSize","memo","setFieldValue","formikContext","field","shouldValidate","setValues","validateForm","validateOnChange","values","setInValues","obj","path","res","clone","resVal","i","pathArray","toPath","currentPath","currentObj","getIn","slice","isObject","nextPath","isInteger","Number","setIn","FormikSelect","useFormikContext","formikOnChange","otherFormikProps","FormikCheck","check","nospace","_props$bsSize","checked","apiGenerator","api","jwt","Configuration","errorDecoder","func","json","QueryWrapper","_message","SubmitWrapper","reverse","wrapper","FileStat","list","params","Systems","SystemsApi","getSystems","details","getSystem","listSchedulerProfiles","SchedulerProfilesApi","getSchedulerProfiles","QueryKeys","create","defaultParams","useList","arguments","options","enabled","useDetails","_accessToken$access_t","useSchedulerProfiles","SystemDetail","systemId","select","system","result","Tabs","tabs","Details","JSONDisplay","Layout","left","right","top","bottom","constrain","LayoutHeader","CommonSectionHeader","LayoutNavWrapper","nav","LayoutBody","title","note","open","requiredText","isCollapsable","marginBottom","controls","expand","BootstrapCollapse","simplifyObject","forEach","simplifiedValue","convertSets","simplified","setSimplified","jsonString","_tabNames$","tabNames","activeTab","setActiveTab","getTabClassname","tabName","tab","active","Nav","NavItem","NavLink","TabContent","TabPane","tabId","pane","activeClassName","exact","Navbar","Sidebar","Divider","login","username","password","request","reqCreateToken","grant_type","Authenticator","TokensApi","createToken","useLogin","mutate","isError","isSuccess","useMutation","onSuccess","response","_response$result","logout","Apps","ApplicationsApi","getApps","getApp","useDetail","log","createAppVersion","reqPostApp","useCreate","reset","submit","AppsNav","_data$result","refetchOnWindowFocus","url","useRouteMatch","appList","app","version","Jobs","JobsApi","getJobList","getJob","submitJob","reqSubmitJob","orderBy","jobUuid","useSubmit","appId","appVersion","getIncompleteAppInputs","_app$jobAttributes$fi","_app$jobAttributes","_app$jobAttributes$fi2","jobAttributes","fileInputs","filter","fileInput","sourceUrl","generateRequiredFileInputsFromApp","_app$jobAttributes$fi3","_app$jobAttributes2","_app$jobAttributes2$f","inputMode","FileInputModeEnum","Required","appFileInput","targetPath","autoMountLocal","fileInputsComplete","_fileInputs$filter","_app$jobAttributes$fi4","_app$jobAttributes3","_app$jobAttributes3$f","_fileInputs$filter2","incompleteRequiredInputs","getIncompleteAppInputsOfType","inputType","some","requiredInput","jobFileInput","find","optionalAppInputs","optionalJobInputs","optionalAppInput","jobInput","namedInputs","otherInput","getIncompleteAppInputArrays","fileInputArrays","sourceUrls","generateRequiredFileInputArraysFromApp","appFileInputArray","_input$sourceUrls","targetDir","generateFileInputArrayFromAppInput","fileInputArraysComplete","_fileInputArrays$filt","_fileInputArrays$filt2","getIncompleteAppInputArraysOfType","requiredInputArray","jobFileInputArray","optionalAppInputArrays","optionalJobInputArrays","optionalAppInputArray","jobInputArray","otherInputArray","getArgMode","argSpecs","spec","argSpec","generateJobArgsFromSpec","arg","include","ArgInputModeEnum","IncludeOnDemand","generateJobArg","generateJobDefaults","_app$jobAttributes$ar","_app$jobAttributes4","_app$jobAttributes5","_app$jobAttributes6","_app$jobAttributes7","_app$jobAttributes8","_app$jobAttributes9","_app$jobAttributes10","_app$jobAttributes$pa","_app$jobAttributes11","_app$jobAttributes11$","_app$jobAttributes$pa2","_app$jobAttributes12","_app$jobAttributes12$","_app$jobAttributes$pa3","_app$jobAttributes13","_app$jobAttributes13$","_app$jobAttributes14","_app$jobAttributes14$","_app$jobAttributes15","_app$jobAttributes15$","systems","archiveOnAppError","archiveSystemId","archiveSystemDir","nodeCount","coresPerNode","jobType","memoryMB","maxMinutes","isMpi","mpiCmd","cmdPrefix","parameterSet","appArgs","containerArgs","schedulerOptions","archiveFilter","envVariables","JobStartSummary","withBuilder","context","clear","useBuilderContext","dispatch","useReducer","reducer","payload","action","JobLauncherContext","schedulerProfiles","JobLauncherProvider","defaultValues","useJobLauncher","job","JobStart","StepSummaryField","validationSchema","Yup","min","max","step","generateInitialValues","computeDefaultSystem","execSystemId","source","computeDefaultQueue","execSystemLogicalQueue","queue","selectedSystem","batchDefaultLogicalQueue","appSystem","computeDefaultJobType","canRunBatch","JobTypeEnum","Batch","Fork","ValidateExecSystemResult","validateExecSystem","_computedSystem$batch","_selectedSystem$batch","defaultSystem","ErrorNoExecSystem","computedSystem","_job$execSystemId","ErrorExecSystemNotFound","computedJobType","Complete","batchLogicalQueues","ErrorExecSystemNoQueues","defaultQueue","ErrorNoQueue","_job$execSystemId2","_job$execSystemLogica","ErrorQueueNotFound","capitalize","str","charAt","toUpperCase","getLogicalQueues","_system$batchLogicalQ","SystemSelector","queues","setQueues","selectableSystems","setSelectableSystems","defaultSystemLabel","defaultQueueLabel","defaultJobTypeLabel","isBatch","systemSource","queueSource","jobTypeSource","validSystems","_system$batchLogicalQ2","fieldArrayStyles","item","ExecSystemQueueOptions","errors","queueErrors","hasErrors","ExecOptions","ExecOptionsSummary","computedQueue","_computeDefaultSystem","_computeDefaultQueue","_computeDefaultJobTyp","execSystemExecDir","execSystemInputDir","execSystemOutputDir","validateThunk","_computeDefaultJobTyp2","_selectedSystem$batch2","validation","computedExecSystem","computedLogicalQueue","maxNodeCount","minNodeCount","maxCoresPerNode","minCoresPerNode","maxMemoryMB","minMemoryMB","minMinutes","ArgField","argType","arrayHelpers","argName","Fixed","ArgsFieldArray","args","FieldArray","array","argsSchema","Args","appArgSpecs","containerArgSpecs","_app$jobAttributes2$p","assembleArgSpec","reduce","previous","ArgsSummary","_job$parameterSet$app","_job$parameterSet","_job$parameterSet$con","_job$parameterSet2","shape","scheduleOptions","_job$parameterSet3","_job$parameterSet4","_job$parameterSet5","findSchedulerProfile","_values$parameterSet$","_values$parameterSet","_values$parameterSet2","_values$parameterSet3","_values$parameterSet4","_values$parameterSet5","profile","_argSpec$arg","includes","_profile$arg","split","SchedulerProfiles","setSchedulerProfile","newProfile","_parameterSet$schedul","_parameterSet","existing","_existing$arg","currentProfile","hiddenOptions","owner","tenant","SchedulerOptionArray","schedulerOptionSpecs","SchedulerOptions","SchedulerOptionsSummary","_job$parameterSet$sch","_findSchedulerProfile","jobRequiredFieldsComplete","JobSubmit","_job$fileInputs","_job$fileInputArrays","_data$result$uuid","isComplete","onSubmit","uuid","arrayStyles","JobSubmitSummary","_job$fileInputs2","_job$fileInputArrays2","jobSteps","AppArgs","ReadmeViewer","notes","gitUrl","gitRef","rawReadmeUrl","fetch","maxWidth","ReactMarkdown","SignupSchema","JupyterNotebookLauncher","steps","formSubmit","sys","systemType","SystemTypeEnum","Linux","_job$parameterSet2$sc","_job$parameterSet3$sc","Formik","initialValues","touched","Form","JobLauncherWizardRender","jobStep","stepProps","validate","JobLauncherWizard","useAppDetail","systemsData","systemsIsLoading","systemsError","useSystemsList","schedulerProfilesData","schedulerProfilesIsLoading","schedulerProfilesError","_systemsData$result","_schedulerProfilesDat","flex","JobLauncher","PageLayout","Router","Switch","match","sidebar","Login","loginSchema","useLocation","TapisLogin","AppsAdd","file","setFile","setApp","contents","readerFile","inputFile","useRef","e","files","handleFileChange","handleFileClick","Dashboard","cards","CardTitle","CardFooter","Link","JobsNav","jobsList","status","JobDetail","excludes","includeLaunchFiles","SystemsNav","definitions","host","created","defaultAuthnMethod","effectiveUserId","port","rootDir","canExec","jobRuntimes","runtimeType","jobWorkingDir","batchScheduler","batchSchedulerProfile","hpcQueueName","maxJobs","maxJobsPerUser","DashboardCard","link","card","CardText","systemCookbooks","sort","a","b","_systems$result","s","createSystem","reqPostSystem","CredentialsApi","createUserCredential","userName","reqUpdateCredential","isLoadingCredentials","isSuccessCredentials","errorCredentials","submitCredentials","dataCredentials","useCreateCredentials","isLoadingSystems","cookbookSystem","cookbooksSystems","systemCreated","renderLoading","renderform","llamaNotebookApp","runtime","RuntimeEnum","Singularity","runtimeOptions","RuntimeOptionEnum","SingularityRun","containerImage","strictFileInputs","tags","helpUrl","hideNodeCountAndCoresPerNode","isInteractive","category","AppCreate","onCreate","now","window","reload","imgClassifyApp","apps","_apps$result","isLoadingApps","errorApps","cookbookApp","cookbookApps","existingApp","successText","useQueryClient","button","invalidateQueries","queryKeys","AppDetail","SystemCreate","SystemsCookbooks","CookbooksApps","ToastMessage","notification","NotificationToast","notifications","markread","useNotifications","setOpen","notificationRecord","setNotificationRecord","transition","setTransition","Slide","read","Snackbar","anchorOrigin","TransitionComponent","autoHideDuration","onClose","handleClose","_event","reason","TransitionProps","onExited","handleExited","classes","anchorOriginBottomLeft","ContentProps","notificationsContext","NotificationsContext","operation","findIndex","splice","NotificationsProvider","Tenants","TenantsApi","listTenants","App","tenants","history","useHistory","ButtonDropdown","DropdownToggle","caret","DropdownMenu","maxHeight","overflowY","DropdownItem","divider","href","base_url","tenant_id","workbenchContent","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","resolveBasePath","baseUrl","replace","test","getElementById"],"mappings":"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","file":"static/js/main.a5477eb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Section_root__3vFzI\",\"messages\":\"Section_messages__2jN5o\",\"header\":\"Section_header__2N29h\",\"content\":\"Section_content__1z0-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionHeader_root__1nA-L\",\"heading\":\"SectionHeader_heading__3LRjW\",\"for-form\":\"SectionHeader_for-form__3ExLj\",\"for-table\":\"SectionHeader_for-table__lGcJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CopyButton_input__3hCyN bootstrap_form_form-control__2cIvr\",\"copy-button\":\"CopyButton_copy-button__3bOX4 c-button_c-button--secondary__3AzmY\",\"is-copied\":\"CopyButton_is-copied__3aA5L\",\"button__icon\":\"CopyButton_button__icon__3erfG c-button_c-button__icon--before__HExum\"};","import React from \"react\";\n\nexport type TapisContextType = {\n  basePath: string;\n};\n\nexport const authContext: TapisContextType = {\n  basePath: \"\",\n};\n\nconst TapisContext: React.Context<TapisContextType> =\n  React.createContext<TapisContextType>(authContext);\n\nexport default TapisContext;\n","import { useContext } from 'react';\nimport { useQuery } from 'react-query';\nimport Cookies from 'js-cookie';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport jwt_decode from 'jwt-decode';\nimport TapisContext from './TapisContext';\n\nconst useTapisConfig = () => {\n  const { basePath } = useContext(TapisContext);\n\n  const getAccessToken = ():\n    | Authenticator.NewAccessTokenResponse\n    | undefined => {\n    const cookie = Cookies.get('tapis-token');\n    if (!!cookie) return JSON.parse(cookie);\n    return undefined;\n  };\n\n  const { data, refetch } = useQuery<\n    Authenticator.NewAccessTokenResponse | undefined\n  >('tapis-token', getAccessToken, {\n    initialData: () => getAccessToken(),\n  });\n\n  const setAccessToken = async (\n    resp: Authenticator.NewAccessTokenResponse | null | undefined\n  ): Promise<void> => {\n    if (!resp) {\n      Cookies.remove('tapis-token');\n      await refetch();\n      return;\n    }\n    const expires = new Date(resp.expires_at ?? 0);\n    Cookies.set('tapis-token', JSON.stringify(resp), { expires });\n    await refetch();\n  };\n\n  const claims: { [key: string]: any } = data?.access_token\n    ? jwt_decode(data?.access_token)\n    : {};\n\n  return {\n    basePath,\n    accessToken: data,\n    setAccessToken,\n    claims,\n  };\n};\n\nexport default useTapisConfig;\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Authenticator } from \"@tapis/tapis-typescript\";\nimport TapisContext, { TapisContextType } from \"../context/TapisContext\";\n\ninterface TapisProviderProps {\n  token?: Authenticator.NewAccessTokenResponse;\n  basePath: string;\n}\n\nconst TapisProvider: React.FC<React.PropsWithChildren<TapisProviderProps>> = ({\n  token,\n  basePath,\n  children,\n}) => {\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: TapisContextType = {\n    basePath,\n  };\n\n  // react-query client\n  const queryClient = new QueryClient();\n\n  return (\n    <TapisContext.Provider value={contextValue}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </TapisContext.Provider>\n  );\n};\n\nexport default TapisProvider;\n","import { default as TapisProvider } from './TapisProvider';\n\nexport default TapisProvider;\n","import { useState, useCallback } from 'react';\n\nconst useModal = () => {\n  const [modal, setModal] = useState(false);\n  const open = useCallback(() => {\n    setModal(true);\n  }, [setModal]);\n  const close = useCallback(() => {\n    setModal(false);\n  }, [setModal]);\n  return {\n    modal,\n    open,\n    close,\n  };\n};\n\nexport default useModal;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = ({ placement, className }) => {\n  return (\n    <div className={`loading-icon ${className}`} data-testid=\"loading-spinner\">\n      <Spinner className={placement} />\n    </div>\n  );\n};\nLoadingSpinner.propTypes = {\n  placement: PropTypes.string,\n  className: PropTypes.string,\n};\nLoadingSpinner.defaultProps = {\n  placement: 'section',\n  className: '',\n};\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner;\n","/**\n * Standard welcome message texts\n *\n * Notes:\n * - Each of these is expected-not-required to match a route from `./routes.js`.\n * - To customize message text (example: dynamic content) use `<Section>` props.\n */\nexport const DASHBOARD =\n  'This page allows you to monitor your job status, get help with tickets, and view the status of the High Performance Computing (HPC) systems.';\nexport const DATA = 'This page allows you to upload and manage your files.';\nexport const ALLOCATIONS =\n  'This page allows you to monitor the status of allocations on the HPC systems and view a breakdown of team usage.';\nexport const APPLICATIONS =\n  'This page allows you to submit jobs to the HPC systems or access Cloud services using a variety of applications.';\nexport const HISTORY =\n  'This page allows you to monitor a log of all previous job submissions.';\nexport const ACCOUNT =\n  'This page allows you to manage your account profile, change your password and view software licenses.';\nexport const TICKETS =\n  'This page allows you to submit a help request via an RT Ticket.';\nexport const UI =\n  'This hidden page allows developers to review UI components in isolation.';\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  WelcomeMessage,\n  useShouldShowMessage as useShouldShowWelcomeMessage,\n} from '..';\nimport * as MESSAGES from '../../_constants/welcomeMessages';\n\nimport styles from './SectionMessages.module.css';\nimport './SectionMessages.css';\n\n/**\n * A list for section messages that supports:\n *\n * - manual messages\n * - manual welcome message\n * - automatic welcome message\n * - automatic welcome message with custom text\n *\n * @example\n * // an automatic welcome message (if found), no additional messages\n * <SectionMessages routeName=\"DASHBOARD\" />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <SectionMessages\n *   routeName=\"DASHBOARD\"\n *   welcomeText={`We welcome you to the dashboard, ${givenName}`} />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <SectionMessages welcomeText={`We welcome you to this page, ${givenName}`} />\n * @example\n * // an automatic welcome message (if found), some additional messages\n * <SectionMessages routeName=\"DASHBOARD\">\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n * @example\n * // no automatic welcome message, some additional messages\n * <SectionMessages>\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n */\nfunction SectionMessages({ children, className, routeName, welcomeText }) {\n  const welcomeMessageText = welcomeText || MESSAGES[routeName];\n  /* FAQ: An alternate message name allows tracking custom message dismissal */\n  const welcomeMessageName = routeName || welcomeMessageText;\n  const welcomeMessage = welcomeMessageText && (\n    <WelcomeMessage messageName={welcomeMessageName}>\n      {welcomeMessageText}\n    </WelcomeMessage>\n  );\n  const hasMessage =\n    useShouldShowWelcomeMessage(routeName) || children.length > 0;\n  const hasMessageClass = 'has-message';\n\n  useEffect(() => {\n    if (hasMessage) {\n      document.body.classList.add(hasMessageClass);\n    } else {\n      document.body.classList.remove(hasMessageClass);\n    }\n  }, [hasMessage]);\n\n  return (\n    <aside className={`${styles.root} ${className}`}>\n      {welcomeMessage}\n      {children}\n    </aside>\n  );\n}\nSectionMessages.propTypes = {\n  /** Component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The name of the route section (to search for required welcome message) */\n  routeName: PropTypes.string,\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeText: PropTypes.string,\n};\nSectionMessages.defaultProps = {\n  children: '',\n  className: '',\n  routeName: '',\n  welcomeText: '',\n};\n\nexport default SectionMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* eslint-disable no-unused-vars */\nimport styles from './SectionContent.module.css';\nimport layoutStyles from './SectionContent.layouts.module.css';\n/* eslint-enable no-unused-vars */\n\n/**\n * Map of layout names to CSS classes\n * @enum {number}\n */\nexport const LAYOUT_CLASS_MAP = {\n  /** One full-height row of flexible blocks */\n  oneRow: 'one-row',\n  /** One full-width column of flexible blocks */\n  oneColumn: 'one-column',\n  /**\n   * Two left/right columns (wide/narrow) of flexible blocks\n   *\n   * (On narrow screens, this behaves like `oneColumn`)\n   */\n  twoColumn: 'two-column',\n};\nexport const DEFAULT_LAYOUT = 'oneRow';\nexport const LAYOUTS = [...Object.keys(LAYOUT_CLASS_MAP)];\n\n/**\n * A content panel wrapper that supports:\n *\n * - lay out panels (based on layout name and panel position)\n * - change element tag (like `section` instead of `div`)\n * - scroll root element (overflow of panel content is not managed)\n * - debug layout (via color-coded panels)\n *\n * @example\n * // features: lay out panels, change tag, allow content scroll, color-coded\n * <SectionContent\n *   layoutName=\"oneColumn\"\n *   tagName=\"main\",\n *   shouldScroll,\n *   shouldDebugLayout\n * >\n *   <div>Thing 1</div>\n *   <div>Thing 2</div>\n *   <div>Thing 3</div>\n * </SectionContent>\n */\nfunction SectionContent({\n  className,\n  children,\n  layoutName,\n  shouldScroll,\n  shouldDebugLayout,\n  tagName,\n}) {\n  let styleName = '';\n  const styleNameList = ['styles.root'];\n  const layoutClass = LAYOUT_CLASS_MAP[layoutName];\n  const TagName = tagName;\n\n  if (shouldScroll) styleNameList.push(styles['should-scroll']);\n  if (shouldDebugLayout) styleNameList.push(styles['should-debug-layout']);\n  if (layoutClass) styleNameList.push(layoutStyles[layoutClass]);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return <TagName className={`${className} ${styleName}`}>{children}</TagName>;\n}\nSectionContent.propTypes = {\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Content nodes where each node is a block to be laid out */\n  children: PropTypes.node.isRequired,\n  /** The name of the layout by which to arrange the nodes */\n  layoutName: PropTypes.oneOf(LAYOUTS).isRequired,\n  /** Whether to allow root element to scroll */\n  shouldScroll: PropTypes.bool,\n  /** Whether to allow panel debugging (highlight each panel with unique hue) */\n  shouldDebugLayout: PropTypes.bool,\n  /** Override tag of the root element */\n  tagName: PropTypes.string,\n};\nSectionContent.defaultProps = {\n  className: '',\n  shouldScroll: false,\n  shouldDebugLayout: false,\n  tagName: 'div',\n};\n\nexport default SectionContent;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { SectionHeader, SectionContent } from \"..\";\nimport SectionMessages from \"./SectionMessages\";\nimport { LAYOUTS, DEFAULT_LAYOUT } from \"../SectionContent\";\n\nimport styles from \"./Section.module.css\";\n\n/**\n * A section layout structure that supports:\n *\n * - messages (automatically loads welcome message)\n * - header (with actions, e.g. links, buttons, form)\n * - content (that will be arranged in the layout you choose)\n * - manual or automatic sub-components (i.e. header, content)\n *\n * @example\n * // manually build messages, automatically build welcome message\n * <Section\n *   routeName=\"DASHBOARD\"\n *   messages={<>…</>}\n * />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <Section\n *   routeName=\"DASHBOARD\"\n *   welcomeMessageText={`We welcome you to the dashboard, ${givenName}`}\n * />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <Section\n *   welcomeMessageText={`We welcome you to this page, ${givenName}`}\n * />\n * @example\n * // add class to <body>, automatically build sub-components\n * // FAQ: class on <body> + `Bob.global.css` + `body.global-bob-class`\n * //      = unlimited, explicit, isolated CSS side effects\n * <Section\n *   bodyClassName=\"has-loaded-some_section\"\n *   content={…}\n * />\n * @example\n * // automatically build sub-components, with some customization\n * <Section\n *   header=\"Dashboard\"\n *   headerStyleName=\"header\"\n *   headerActions={…}\n *   content={…}\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * />\n * @example\n * // alternate syntax to automatically build content\n * <Section\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * >\n *   {…} <!-- i.e. content -->\n * </Section>\n * @example\n * // manually build sub-components\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionHeader> offers auto-built header's layout styles\n * // FAQ: The <SectionContent> offers auto-built content's layout styles\n * <Section\n *   manualHeader={\n *     <SectionHeader {…} />\n *   }\n *   manualContent={\n *     <SectionContent {…} />\n *   }\n * />\n * @example\n * // manually build content (alternate method)\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionContent> offers auto-built content's layout options\n * <Section manualContent>\n *   <SectionContent {…} />\n * />\n */\nfunction Section({\n  bodyClassName,\n  children,\n  className,\n  content,\n  contentClassName,\n  contentLayoutName,\n  contentShouldScroll,\n  header,\n  headerActions,\n  headerClassName,\n  manualContent,\n  manualHeader,\n  // manualSidebar,\n  // sidebar,\n  // sidebarClassName,\n  messages,\n  messagesClassName,\n  routeName,\n  welcomeMessageText,\n}) {\n  const shouldBuildHeader = header || headerClassName || headerActions;\n\n  // Allowing ineffectual prop combinations would lead to confusion\n  if (\n    manualContent &&\n    (content || contentClassName || contentLayoutName || contentShouldScroll)\n  ) {\n    throw new Error(\n      \"When passing `manualContent`, the following props are ineffectual: `content`, `contentClassName`, `contentLayoutName`, `contentShouldScroll`\"\n    );\n  }\n  if (manualHeader && (header || headerClassName || headerActions)) {\n    throw new Error(\n      \"When passing `manualHeader`, the following props are ineffectual: `header`, `headerClassName`, `headerActions`\"\n    );\n  }\n  // if (manualSidebar && (sidebar || sidebarClassName)) {\n  //   throw new Error(\n  //     'When passing `manualSidebar`, the following props are ineffectual: `sidebar`, `sidebarClassName`'\n  //   );\n  // }\n\n  useEffect(() => {\n    if (bodyClassName) document.body.classList.add(bodyClassName);\n\n    return function cleanup() {\n      if (bodyClassName) document.body.classList.remove(bodyClassName);\n    };\n  }, [bodyClassName]);\n\n  return (\n    <section className={`${className} ${styles.root}`}>\n      {/* eslint-disable */}\n      <SectionMessages\n        className={styles.messages}\n        routeName={routeName}\n        className={messagesClassName}\n        welcomeText={welcomeMessageText}\n      >\n        {messages}\n      </SectionMessages>\n      {/* {manualSidebar ? (\n        <>{manualSidebar}</>\n      ) : (\n        <Sidebar styleName=\"sidebar\" className={sidebarClassName}>\n          {sidebar}\n        </Sidebar>\n      )} */}\n      {manualHeader ? (\n        <>{manualHeader}</>\n      ) : (\n        shouldBuildHeader && (\n          <SectionHeader\n            className={`${headerClassName} ${styles.header}`}\n            actions={headerActions}\n          >\n            {header}\n          </SectionHeader>\n        )\n      )}\n      {manualContent ? (\n        <>\n          {manualContent}\n          {children}\n        </>\n      ) : (\n        <SectionContent\n          tagName=\"main\"\n          className={`${contentClassName} ${styles.content}`}\n          layoutName={contentLayoutName || DEFAULT_LAYOUT}\n          shouldScroll={contentShouldScroll}\n        >\n          {content}\n          {children}\n        </SectionContent>\n      )}\n    </section>\n  );\n}\nSection.propTypes = {\n  /** Name of class to append to body when section is active */\n  bodyClassName: PropTypes.string,\n  /** Alternate way to pass `manualContent` and `content` */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The section content children (content element built automatically) */\n  content: PropTypes.node,\n  /** Any additional className(s) for the content element */\n  contentClassName: PropTypes.string,\n  /** The name of the layout by which to arrange the content children */\n  contentLayoutName: PropTypes.oneOf(LAYOUTS.concat(\"\")),\n  /** Whether to allow content to scroll */\n  contentShouldScroll: PropTypes.bool,\n  /** The section header text (header element built automatically) */\n  header: PropTypes.node,\n  /** Any section actions for the header element */\n  headerActions: PropTypes.node,\n  /** Any additional className(s) for the header element */\n  headerClassName: PropTypes.string,\n  /** The section content (built by user) flag or element */\n  /* RFE: Ideally, limit these to one relevant `Section[…]` component */\n  /* SEE: https://github.com/facebook/react/issues/2979 */\n  manualContent: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  /** The section header (built by user) element */\n  manualHeader: PropTypes.element,\n  // /** The page-specific sidebar */\n  // sidebar: PropTypes.node,\n  // /** Additional className for the sidebar element */\n  // sidebarClassName: PropTypes.string,\n  /** Any component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  messages: PropTypes.node,\n  /** Any additional className(s) for the message list */\n  messagesClassName: PropTypes.string,\n  /** The name of the route section (to search for a welcome message) */\n  routeName: PropTypes.string,\n  /** Any additional className(s) for the sidebar list */\n  // sidebarClassName: '',\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeMessageText: PropTypes.string,\n};\nSection.defaultProps = {\n  bodyClassName: \"\",\n  children: \"\",\n  className: \"\",\n  content: \"\",\n  contentClassName: \"\",\n  contentLayoutName: \"\",\n  contentShouldScroll: false,\n  header: \"\",\n  headerActions: \"\",\n  headerClassName: \"\",\n  manualContent: undefined,\n  manualHeader: undefined,\n  messages: \"\",\n  messagesClassName: \"\",\n  routeName: \"\",\n  // sidebarClassName: '',\n  welcomeMessageText: \"\",\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SectionHeader.module.css';\n\n/**\n * A header for a `Section[…]` component\n *\n * - heading text\n * - actions (e.g. links, buttons, form)\n * - automatic styles or markup for given context (ex: within a form or a table)\n *\n * @example\n * // a section header with heading text\n * <SectionHeader>\n *   <a href=\"…\">Hyperlinked Name of Section</a>\n * </SectionHeader>\n * @example\n * // a form header with actions and heading text\n * <SectionHeader\n *   actions={<button type=\"reset\">Reset</button>}\n *   isForForm\n * >\n *   Name of Form\n * </SectionHeader>\n * @example\n * // a table header with actions and heading text\n * <SectionHeader\n *   actions={<input type=\"search\" />}\n *   isForTable\n * >\n *   Name of Table\n * </SectionHeader>\n */\nfunction SectionHeader({\n  actions,\n  children,\n  className,\n  isForForm,\n  isForTable,\n}) {\n  let styleName = '';\n  const styleNameList = [styles['root']];\n  const HeadingTagName = isForForm || isForTable ? 'h3' : 'h2';\n\n  if (isForForm) styleNameList.push(styles['for-form']);\n  if (isForTable) styleNameList.push(styles['for-table']);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return (\n    <header className={`${styleName} ${className}`}>\n      {children && (\n        <HeadingTagName className={styles.heading}>{children}</HeadingTagName>\n      )}\n      {actions}\n    </header>\n  );\n}\nSectionHeader.propTypes = {\n  /** Any actions (buttons, links, forms, etc) */\n  actions: PropTypes.node,\n  /** The text a.k.a. title */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Whether this header is for a form */\n  isForForm: PropTypes.bool,\n  /** Whether this header is for a table */\n  isForTable: PropTypes.bool,\n};\nSectionHeader.defaultProps = {\n  actions: '',\n  className: '',\n  children: '',\n  isForForm: false,\n  isForTable: false,\n};\n\nexport default SectionHeader;\n","import React from 'react';\nimport { useTable } from 'react-table';\nimport PropTypes from 'prop-types';\nimport LoadingSpinner from '../LoadingSpinner';\nimport './InfiniteScrollTable.scss';\n\nconst rowContentPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.element,\n  PropTypes.oneOf([React.Fragment]),\n]);\n\nconst InfiniteScrollLoadingRow = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <LoadingSpinner placement=\"inline\" />\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollLoadingRow.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nconst InfiniteScrollNoDataRow = ({ display, noDataText }) => {\n  if (!display) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <span className=\"-status__message\">{noDataText}</span>\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollNoDataRow.propTypes = {\n  display: PropTypes.bool.isRequired,\n  noDataText: rowContentPropType.isRequired,\n};\n\nconst InfiniteScrollTable = ({\n  tableColumns,\n  tableData,\n  onInfiniteScroll,\n  isLoading,\n  className,\n  noDataText,\n  getRowProps,\n  columnMemoProps,\n}) => {\n  const columns = React.useMemo(\n    () => tableColumns,\n    /* eslint-disable-next-line */\n    [columnMemoProps, tableColumns]\n  );\n  const data = React.useMemo(() => tableData, [tableData]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n  const onScroll = ({ target }) => {\n    const bottom =\n      target.scrollHeight - target.scrollTop === target.clientHeight;\n    if (bottom && target.scrollTop > 0) {\n      onInfiniteScroll(tableData.length);\n    }\n  };\n\n  return (\n    <table {...getTableProps()} className={`${className} InfiniteScrollTable`}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()} onScroll={onScroll}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} {...getRowProps(row)}>\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    {...cell.getCellProps({ className: cell.column.className })}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n        <InfiniteScrollLoadingRow isLoading={isLoading} />\n        <InfiniteScrollNoDataRow\n          display={!isLoading && tableData.length === 0}\n          noDataText={noDataText}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nInfiniteScrollTable.propTypes = {\n  tableColumns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  tableData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onInfiniteScroll: PropTypes.func,\n  isLoading: PropTypes.bool,\n  className: PropTypes.string,\n  noDataText: rowContentPropType,\n  getRowProps: PropTypes.func,\n  columnMemoProps: PropTypes.arrayOf(PropTypes.any),\n};\nInfiniteScrollTable.defaultProps = {\n  onInfiniteScroll: (offset) => {},\n  isLoading: false,\n  className: '',\n  noDataText: '',\n  getRowProps: (row) => {},\n  columnMemoProps: [],\n};\n\nexport default InfiniteScrollTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.module.css';\n\nconst Icon = ({ children, className, name }) => {\n  const iconClassName = `icon icon-${name}`;\n  // FAQ: The conditional avoids an extra space in class attribute value\n  const fullClassName = className\n    ? [className, iconClassName].join(' ')\n    : iconClassName;\n  const label = children;\n\n  return <i className={fullClassName} role=\"img\" aria-label={label} />;\n};\nIcon.propTypes = {\n  /** A text alternative to the icon (for accessibility) */\n  children: PropTypes.string,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Name of icon from icon font (without the (`icon-` prefix) */\n  name: PropTypes.string.isRequired,\n};\nIcon.defaultProps = {\n  children: '',\n  className: '',\n};\n\nexport default Icon;\n","import Icon from './Icon';\n\nexport default Icon;\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardHeader, CardBody, Card, Collapse } from \"reactstrap\";\nimport Icon from \"../Icon\";\nimport \"./Expand.global.scss\";\nimport styles from \"./Expand.module.scss\";\n\nconst Expand = ({ className, detail, message }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleCallback = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  // TODO: Use `details/summary` tags, when `onToggle` support is \"last 2 versions\"\n  // SEE: https://github.com/facebook/react/issues/15486#issuecomment-669674869\n  return (\n    /* eslint-disable-next-line */\n    <Card className={styles.container} className={className} tag=\"div\">\n      <CardHeader className={styles.summary} onClick={toggleCallback} tag=\"div\">\n        <strong className={styles.header}>{detail}</strong>\n        <Icon name={isOpen ? \"collapse\" : \"expand\"} />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{message}</CardBody>\n      </Collapse>\n    </Card>\n  );\n};\n\nExpand.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n\n  detail: PropTypes.string.isRequired,\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\nExpand.defaultProps = {\n  className: \"\",\n};\n\nexport default Expand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'reactstrap';\nimport Icon from '../Icon';\n\nimport styles from './Message.module.scss';\n\nexport const ERROR_TEXT = {\n  mismatchCanDismissScope:\n    'For a <(Section)Message> to use `canDismiss`, `scope` must equal `section`.',\n  deprecatedType:\n    'In a <(Section|Inline)Message> `type=\"warn\"` is deprecated. Use `type=\"warning\"` instead.',\n  missingScope:\n    'A <Message> without a `scope` should become an <InlineMessage>. (If <Message> must be used, then explicitely set `scope=\"inline\"`.)',\n};\n\nexport const TYPE_MAP = {\n  info: {\n    iconName: 'conversation',\n    className: 'is-info',\n    iconText: 'Notice',\n  },\n  success: {\n    iconName: 'approved-reverse',\n    className: 'is-success',\n    iconText: 'Notice',\n  },\n  warning: {\n    iconName: 'alert',\n    className: 'is-warn',\n    iconText: 'Warning',\n  },\n  error: {\n    iconName: 'alert',\n    className: 'is-error',\n    iconText: 'Error',\n  },\n};\nTYPE_MAP.warn = TYPE_MAP.warning; // FAQ: Deprecated support for `type=\"warn\"`\nexport const TYPES = Object.keys(TYPE_MAP);\n\nexport const SCOPE_MAP = {\n  inline: {\n    className: 'is-scope-inline',\n    role: 'status',\n    tagName: 'span',\n  },\n  section: {\n    className: 'is-scope-section',\n    role: 'status',\n    tagName: 'p',\n  },\n  // app: { … } // FAQ: Do not use; instead, use a <NotificationToast>\n};\nexport const SCOPES = ['', ...Object.keys(SCOPE_MAP)];\nexport const DEFAULT_SCOPE = 'inline'; // FAQ: Historical support for default\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst Message = ({\n  children,\n  className,\n  onDismiss,\n  canDismiss,\n  isVisible,\n  scope,\n  type,\n}) => {\n  const typeMap = TYPE_MAP[type];\n  const scopeMap = SCOPE_MAP[scope || DEFAULT_SCOPE];\n  const { iconName, iconText, className: typeClassName } = typeMap;\n  const { role, tagName, className: scopeClassName } = scopeMap;\n\n  const hasDismissSupport = scope === 'section';\n\n  // Manage prop warnings\n  /* eslint-disable no-console */\n  if (canDismiss && !hasDismissSupport) {\n    // Component will work, except `canDismiss` is ineffectual\n    console.error(ERROR_TEXT.mismatchCanDismissScope);\n  }\n  if (type === 'warn') {\n    // Component will work, but `warn` is deprecated value\n    console.info(ERROR_TEXT.deprecatedType);\n  }\n  if (!scope) {\n    // Component will work, but `scope` should be defined\n    console.info(ERROR_TEXT.missingScope);\n  }\n  /* eslint-enable no-console */\n\n  // Manage class names\n  const modifierClassNames = [];\n  modifierClassNames.push(typeClassName);\n  modifierClassNames.push(scopeClassName);\n  const containerStyleNames = ['container', ...modifierClassNames]\n    .map((name) => styles[name])\n    .join(' ');\n\n  // Manage disappearance\n  // FAQ: Design does not want fade, but we still use <Fade> to manage dismissal\n  // TODO: Consider replacing <Fade> with a replication of `unmountOnExit: true`\n  const shouldFade = false;\n  const fadeProps = {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n    baseClass: shouldFade ? Fade.defaultProps.baseClass : '',\n    timeout: shouldFade ? Fade.defaultProps.timeout : 0,\n  };\n\n  return (\n    <Fade\n      // Avoid manually syncing Reactstrap <Fade>'s default props\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...fadeProps}\n      tag={tagName}\n      className={`${className} ${containerStyleNames}`}\n      role={role}\n      in={isVisible}\n    >\n      <Icon\n        className={`${styles['icon']} ${styles['type-icon']}`}\n        name={iconName}\n      >\n        {iconText}\n      </Icon>\n      <span className={styles.text} data-testid=\"text\">\n        {children}\n      </span>\n      {canDismiss && hasDismissSupport ? (\n        <button\n          type=\"button\"\n          className={styles['close-button']}\n          aria-label=\"Close\"\n          onClick={onDismiss}\n        >\n          <Icon\n            className={`${styles.icon} ${styles['close-icon']}`}\n            name=\"close\"\n          />\n        </button>\n      ) : null}\n    </Fade>\n  );\n};\nMessage.propTypes = {\n  /** Whether an action can be dismissed (requires scope equals `section`) */\n  canDismiss: PropTypes.bool,\n  /** Message text (as child node) */\n  /* FAQ: We can support any values, even a component */\n  children: PropTypes.node.isRequired, // This checks for any render-able value\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Whether message is visible (pair with `onDismiss`) */\n  isVisible: PropTypes.bool,\n  /** Action on message dismissal (pair with `isVisible`) */\n  onDismiss: PropTypes.func,\n  /** How to place the message within the layout */\n  scope: PropTypes.oneOf(SCOPES), // RFE: Require scope; change all instances\n  /** Message type or severity */\n  type: PropTypes.oneOf(TYPES).isRequired,\n};\nMessage.defaultProps = {\n  className: '',\n  canDismiss: false,\n  isVisible: true,\n  onDismiss: () => {},\n  scope: '', // RFE: Require scope; remove this line\n};\n\nexport default Message;\n","import Message from './Message';\n\nexport default Message;\n","import React from 'react';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst InlineMessage = (props) => {\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    canDismiss: false,\n    scope: 'inline',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nInlineMessage.propTypes = Message.propTypes;\nInlineMessage.defaultProps = Message.defaultProps;\n\nexport default InlineMessage;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst SectionMessage = (props) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  // Manage visibility\n  const onDismiss = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    isVisible,\n    onDismiss,\n    scope: 'section',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nSectionMessage.propTypes = {\n  ...Message.propTypes,\n  isVisible: PropTypes.bool,\n  onDismiss: PropTypes.func,\n};\nSectionMessage.defaultProps = Message.defaultProps;\n\nexport default SectionMessage;\n","import SectionMessage from './SectionMessage';\n\nexport default SectionMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './DescriptionList.module.scss';\n\nexport const DIRECTION_CLASS_MAP = {\n  vertical: 'is-vert',\n  horizontal: 'is-horz',\n};\nexport const DEFAULT_DIRECTION = 'vertical';\nexport const DIRECTIONS = ['', ...Object.keys(DIRECTION_CLASS_MAP)];\n\nexport const DENSITY_CLASS_MAP = {\n  compact: 'is-narrow',\n  default: 'is-wide',\n};\nexport const DEFAULT_DENSITY = 'default';\nexport const DENSITIES = ['', ...Object.keys(DENSITY_CLASS_MAP)];\n\nconst DescriptionListArray = ({ value }) => {\n  if (value.length === 0) {\n    return (\n      <dd className={styles.value}>\n        <i>None</i>\n      </dd>\n    );\n  }\n  return (\n    <dl>\n      {value.map((val, index) => (\n        <div key={uuidv4()} className={styles['array-entry']}>\n          <dt className={styles.key}>\n            <i>{index}</i>\n          </dt>\n          <dd className={styles.value} data-testid=\"value\">\n            <DescriptionListValue value={val} />\n          </dd>\n        </div>\n      ))}\n    </dl>\n  );\n};\n\nconst DescriptionListValue = ({ value }) => {\n  if (value === undefined) {\n    return <i>Undefined</i>;\n  }\n  if (Array.isArray(value)) {\n    return <DescriptionListArray value={value} />;\n  }\n  if (value instanceof Set) {\n    return <DescriptionListArray value={Array.from(value)} />;\n  }\n  if (typeof value === 'object') {\n    return <DescriptionList data={value} />;\n  }\n  if (typeof value === 'string') {\n    return <>{value}</>;\n  }\n  return <>{JSON.stringify(value)}</>;\n};\n\nconst DescriptionList = ({ className, data, density, direction }) => {\n  const modifierClasses = [];\n  modifierClasses.push(DENSITY_CLASS_MAP[density || DEFAULT_DENSITY]);\n  modifierClasses.push(DIRECTION_CLASS_MAP[direction || DEFAULT_DIRECTION]);\n  const containerStyleNames = ['container', ...modifierClasses]\n    .map((name) => styles[name])\n    .join(' ');\n  const entries = Object.entries(data);\n  if (entries.length === 0) {\n    return (\n      <div>\n        <i>Empty object</i>\n      </div>\n    );\n  }\n  return (\n    <dl className={`${className} ${containerStyleNames}`} data-testid=\"list\">\n      {entries.map(([key, value]) => (\n        <React.Fragment key={key}>\n          <dt className={styles.key} data-testid=\"key\">\n            {key}\n          </dt>\n          <dd className={styles.value} data-testid=\"value\">\n            <DescriptionListValue value={value} />\n          </dd>\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n};\nDescriptionList.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Selector type */\n  /* FAQ: We can support any values, even a component */\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n  /** Layout density */\n  density: PropTypes.oneOf(DENSITIES),\n  /** Layout direction */\n  direction: PropTypes.oneOf(DIRECTIONS),\n};\nDescriptionList.defaultProps = {\n  className: '',\n  density: DEFAULT_DENSITY,\n  direction: DEFAULT_DIRECTION,\n};\n\nexport default DescriptionList;\n","import DescriptionList from './DescriptionList';\n\nexport default DescriptionList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as BootstrapInput } from 'reactstrap';\n\nimport styles from './DropdownSelector.module.css';\n\nexport const TYPES = ['', 'single', 'multiple'];\nexport const DEFAULT_TYPE = 'single';\n\n// RFE: Support `options` object prop and require either `options` or `children` prop:\n//      - https://stackoverflow.com/a/49682510/11817077\n//      - https://stackoverflow.com/a/52661344/11817077\n//      - https://www.npmjs.com/package/react-either-property\n//      - \"customProp\" at https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes\n\nconst DropdownSelector = ({ type, onChange, ...props }) => {\n  const canSelectMany = type === 'multiple';\n\n  return (\n    <BootstrapInput\n      // FAQ: This is a one-off, so it does not belong in `.eslintrc`\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      onChange={onChange}\n      type=\"select\"\n      className={styles.container}\n      multiple={canSelectMany}\n      data-testid=\"selector\"\n      // The ARIA role for a `<select>` is implicit (and depends on `<select>` attributes)\n      // SEE: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Technical_summary\n    />\n  );\n};\nDropdownSelector.propTypes = {\n  /** Selector type */\n  type: PropTypes.oneOf(TYPES),\n  /** Selector type */\n  onChange: PropTypes.func,\n  /** Options (as children, like Reactstrap) */\n  // FAQ: Limiting and documenting this has become a rabbit hole; help welcome — Wes B\n  // children: PropTypes.any.isRequired\n};\nDropdownSelector.defaultProps = {\n  type: DEFAULT_TYPE,\n  onChange: () => {},\n};\n\nexport default DropdownSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\n\n/**\n * Whether to show a welcome message\n * @param {String} messageName - The name of the message to check\n */\nexport function useShouldShowMessage(messageName) {\n  const welcomeMessages = {};\n  return welcomeMessages && welcomeMessages[messageName];\n}\n\n/**\n * A message which, when dismissed, will not appear again unless browser storage is cleared\n *\n * _This message is designed for user introduction to sections, but can be abstracted further into a `<DismissableMessage>` or abstracted less such that a message need not be passed in._\n *\n * @example\n * // message with custom text, class, and identifier\n * <WelcomeMessage\n *   className=\"external-message-class\"\n *   messageName={identifierForMessageLikeRouteName}\n * >\n *   Introductory text (defined externally).\n * </WelcomeMessage>\n */\nfunction WelcomeMessage({ children, className, messageName }) {\n  const shouldShow = useShouldShowMessage(messageName);\n  const welcomeMessages = {};\n\n  function onDismiss(name) {\n    const newMessagesState = {\n      ...welcomeMessages,\n      [name]: false,\n    };\n    return newMessagesState;\n  }\n\n  return (\n    <Alert\n      isOpen={shouldShow}\n      toggle={() => onDismiss(messageName)}\n      color=\"secondary\"\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n}\nWelcomeMessage.propTypes = {\n  /** Message as text or element(s) */\n  children: PropTypes.node.isRequired,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** A unique identifier for the message */\n  messageName: PropTypes.string.isRequired,\n};\nWelcomeMessage.defaultProps = {\n  className: '',\n};\n\nexport default WelcomeMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Pill.module.scss';\n\nfunction Pill({ children, type, className, shouldTruncate }) {\n  let pillStyleName = `root is-${type}`;\n\n  if (shouldTruncate) pillStyleName += ' should-truncate';\n\n  return (\n    <span className={`${styles[pillStyleName]} ${className}`}>{children}</span>\n  );\n}\n\nPill.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  shouldTruncate: PropTypes.bool,\n};\n\nPill.defaultProps = {\n  type: 'normal',\n  className: '',\n  shouldTruncate: true,\n};\n\nexport default Pill;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './TextCopyField.module.scss';\n\nconst TextCopyField = ({ value, placeholder }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n  const onChange = (event) => {\n    // Swallow keyboard events on the Input control, but\n    // still allow selecting the text. readOnly property of\n    // Input is not adequate for this purpose because it\n    // prevents text selection\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <CopyToClipboard text={value}>\n          <Button\n            className={`${styles['copy-button']} ${\n              isCopied ? styles['is-copied'] : ''\n            }`}\n            // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n            //      - `data-attribute` and `attr()` (pending browser support)\n            //      - PostCSS and JSON variables (pending greater need for this)\n            style={{ '--transition-duration': `${transitionDuration}s` }}\n            onClick={onCopy}\n            disabled={isEmpty}\n            type=\"button\"\n          >\n            <Icon\n              name={isCopied ? 'approved-reverse' : 'link'}\n              className={styles['button__icon']}\n            />\n            <span className={styles['button__text']}>Copy</span>\n          </Button>\n        </CopyToClipboard>\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        value={value}\n        className={`form-control ${styles.input}`}\n        placeholder={placeholder}\n        data-testid=\"input\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nTextCopyField.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nTextCopyField.defaultProps = {\n  value: '',\n  placeholder: '',\n};\n\nexport default TextCopyField;\n","import React, { useState, useCallback } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport styles from './ReadMore.module.scss';\n\nconst ReadMore = ({ className, children }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleCallback = useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded, setExpanded]);\n\n  const { height, ref } = useResizeDetector();\n\n  const hasOverflow =\n    ref && ref.current ? ref.current.scrollHeight > height : false;\n\n  return (\n    <>\n      {\n        <div\n          className={`${\n            expanded ? styles.expanded : styles.clamped\n          } ${className}`}\n          ref={ref}\n        >\n          {children}\n        </div>\n      }\n      {(hasOverflow || expanded) && (\n        <Button color=\"link\" onClick={toggleCallback}>\n          {expanded ? 'Read Less' : 'Read More'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nReadMore.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nReadMore.defaultProps = {\n  className: '',\n};\n\nexport default ReadMore;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport styles from './Paginator.module.scss';\n\nconst PaginatorPage = ({ number, callback, current }) => {\n  return (\n    <div className={styles['page-root']}>\n      <Button\n        className={`${styles.page} ${number === current ? styles.current : ''}`}\n        onClick={() => callback(number)}\n      >\n        {number}\n      </Button>\n    </div>\n  );\n};\n\nPaginatorPage.propTypes = {\n  number: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};\n\nconst Paginator = ({ pages, current, callback, spread }) => {\n  let start, end;\n  if (pages === 1) {\n    end = 0;\n    start = 1;\n  } else if (pages > 2 && pages <= spread) {\n    start = 2;\n    end = pages - 1;\n  } else if (pages > spread && current <= 4) {\n    start = 2;\n    end = spread - 1;\n  } else if (pages > spread && current > pages - (spread - 2)) {\n    start = pages - (spread - 2);\n    end = pages - 1;\n  } else {\n    const delta = Math.floor((spread - 2) / 2);\n    start = current - delta;\n    end = current + delta;\n  }\n  const middle = end - start + 1;\n  const middlePages =\n    middle > 0\n      ? Array(middle)\n          .fill()\n          .map((_, index) => start + index)\n      : [];\n  return (\n    <div className={styles.root}>\n      <Button\n        color=\"link\"\n        className={styles.root}\n        onClick={() => callback(current - 1)} // eslint-disable-line\n        disabled={current === 1}\n      >\n        <span>&lt; Previous</span>\n      </Button>\n      <PaginatorPage number={1} callback={callback} current={current} />\n      {middlePages[0] > 2 && <span>...</span>}\n      {middlePages.map((number) => {\n        return (\n          <PaginatorPage\n            number={number}\n            key={number}\n            current={current}\n            callback={callback}\n          />\n        );\n      })}\n      {middlePages[middlePages.length - 1] < pages - 1 && <span>...</span>}\n      {pages > 1 && (\n        <PaginatorPage number={pages} callback={callback} current={current} />\n      )}\n      <Button\n        color=\"link\"\n        className={styles.endcap}\n        onClick={() => callback(current + 1)} // eslint-disable-line\n        disabled={current === pages}\n      >\n        <span>Next &gt;</span>\n      </Button>\n    </div>\n  );\n};\n\nPaginator.propTypes = {\n  pages: PropTypes.number.isRequired,\n  current: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  spread: PropTypes.number, // Number of page buttons to show\n};\n\nPaginator.defaultProps = {\n  spread: 11,\n};\n\nexport default Paginator;\n","import { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useTapisConfig } from \"tapis-hooks\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction ProtectedRoute({ children, ...rest }: RouteProps) {\n  const { accessToken } = useTapisConfig();\n  return (\n    <Route\n      {...rest}\n      render={({ location }: RouteProps) =>\n        accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import ProtectedRoute from './ProtectedRoute';\n\nexport default ProtectedRoute;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './CopyButton.module.scss';\n\nconst CopyButton = ({ value, className }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n\n  return (\n    <CopyToClipboard text={value}>\n      <Button\n        className={`${styles['copy-button']} ${\n          isCopied ? styles['is-copied'] : ''\n        } ${className}`}\n        // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n        //      - `data-attribute` and `attr()` (pending browser support)\n        //      - PostCSS and JSON variables (pending greater need for this)\n        style={{ '--transition-duration': `${transitionDuration}s` }}\n        onClick={onCopy}\n        disabled={isEmpty}\n        type=\"button\"\n        size=\"sm\"\n      >\n        <Icon\n          name={isCopied ? 'approved-reverse' : 'copy'}\n          className={styles['button__icon']}\n        />\n        <span className={styles['button__text']}>Copy</span>\n      </Button>\n    </CopyToClipboard>\n  );\n};\n\nCopyButton.propTypes = {\n  value: PropTypes.string,\n  className: PropTypes.string,\n};\n\nCopyButton.defaultProps = {\n  value: '',\n  className: '',\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\n\nexport default CopyButton;\n","import React from \"react\";\nimport { FormGroup, Label, FormText, Badge } from \"reactstrap\";\nimport styles from \"./FieldWrapperFormik.module.css\";\nimport { Field, useField } from \"formik\";\nexport type FieldWrapperProps = {\n  name: string;\n  label: string;\n  required: boolean;\n  description: string;\n  isHidden?: boolean;\n  as: React.ComponentType<any>;\n};\nconst FieldWrapper: React.FC<FieldWrapperProps> = ({\n  name,\n  label,\n  required,\n  description,\n  isHidden = false,\n  as: Component,\n}) => {\n  const [, meta] = useField(name);\n  return (\n    <FormGroup>\n      <span className={isHidden ? styles[\"hidden\"] : \"\"}>\n        <Label\n          className=\"form-field__label\"\n          size=\"sm\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          htmlFor={name}\n        >\n          {label}\n          {required && !isHidden ? (\n            <Badge color=\"danger\" style={{ marginLeft: \"10px\" }}>\n              Required\n            </Badge>\n          ) : null}\n        </Label>\n        <Field name={name} as={Component} id={name} />\n        {meta.error && (\n          <FormText className={styles[\"form-field__help\"]} color=\"danger\">\n            {meta.error}\n          </FormText>\n        )}\n        {description && !meta.error && (\n          <FormText className={styles[\"form-field__help\"]} color=\"muted\">\n            {description}\n          </FormText>\n        )}\n      </span>\n    </FormGroup>\n  );\n};\n\nexport default FieldWrapper;\n","import React from \"react\";\nimport FieldWrapper from \"../FieldWrapperFormik\";\nimport { Input } from \"reactstrap\";\nimport { FieldInputProps } from \"formik\";\nimport { FormikInputProps } from \".\";\n\nconst FormikInput: React.FC<FormikInputProps> = ({\n  name,\n  label,\n  required,\n  description,\n  ...props\n}: FormikInputProps) => (\n  <FieldWrapper\n    name={name}\n    label={label}\n    required={required}\n    description={description}\n    isHidden={props.type && props.type === \"hidden\"}\n    as={(formikProps: FieldInputProps<any>) => (\n      <Input bsSize=\"sm\" {...props} {...formikProps} />\n    )}\n  />\n);\n\nexport default React.memo(FormikInput);\n","import { FormikContextType, getIn, isObject, isInteger } from 'formik';\nimport _ from 'lodash';\n\n/**\n * Adaptation of setFieldValue wrapper from https://github.com/jaredpalmer/formik/issues/2332#issuecomment-819571154\n *\n * There is a bug in the setIn function of Formik that deletes form keys that have undefined values rather than\n * setting the field value to undefined. This is inconsistent with other types of Formik behavior, such as\n * empty text Inputs resulting in form keys with undefined values\n *\n * @param formikContext\n * @param field\n * @param value\n * @param shouldValidate\n */\nexport function setFieldValue(\n  formikContext: FormikContextType<unknown>,\n  field: string,\n  value: any,\n  shouldValidate?: boolean\n): void {\n  const { setValues, validateForm, validateOnChange, setFieldValue, values } =\n    formikContext;\n  // Override default behavior by forcing undefined to be set on the state\n  if (value === undefined) {\n    const setInValues = setIn(values, field, undefined);\n    setValues(setInValues);\n\n    const willValidate =\n      shouldValidate === undefined ? validateOnChange : shouldValidate;\n    if (willValidate) {\n      validateForm(setInValues);\n    }\n  } else {\n    // Use default behavior for normal values\n    setFieldValue(field, value, shouldValidate);\n  }\n}\n\n/**\n * A copy of Formik's setIn function, except it assigns undefined instead of deleting the property if the value\n * being set is undefined.\n * https://github.com/jaredpalmer/formik/issues/2332\n */\nfunction setIn(obj: any, path: string, value: any): any {\n  const res: any = _.clone(obj); // This keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  const pathArray = _.toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    const currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = _.clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    resVal[pathArray[i]] = undefined;\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    res[pathArray[i]] = undefined;\n  }\n\n  return res;\n}\n","import { ChangeEvent } from \"react\";\nimport FieldWrapper from \"../FieldWrapperFormik\";\nimport { Input } from \"reactstrap\";\nimport { FieldInputProps, useFormikContext } from \"formik\";\nimport { FormikInputProps } from \".\";\nimport { setFieldValue } from \"./formikPatch\";\n\nconst FormikSelect: React.FC<React.PropsWithChildren<FormikInputProps>> = ({\n  name,\n  label,\n  required,\n  description,\n  children,\n  ...props\n}: FormikInputProps) => {\n  const formikContext = useFormikContext();\n  return (\n    <FieldWrapper\n      name={name}\n      label={label}\n      required={required}\n      description={description}\n      as={(formikProps: FieldInputProps<any>) => {\n        const { onChange: formikOnChange, ...otherFormikProps } = formikProps;\n        const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n          // Use patched formik setFieldValue\n          // An option with no children and value set to undefined will preduce an empty string as the target value\n          // ex: <option value={undefined} label=\"Please select a value\" />\n          setFieldValue(\n            formikContext,\n            name,\n            event.target.value === \"\" ? undefined : event.target.value\n          );\n        };\n        return (\n          <Input\n            bsSize=\"sm\"\n            type=\"select\"\n            onChange={onChange}\n            {...props}\n            {...otherFormikProps}\n          >\n            {children}\n          </Input>\n        );\n      }}\n    />\n  );\n};\n\nexport default FormikSelect;\n","import { FieldInputProps, Field } from \"formik\";\nimport { FormikInputProps } from \".\";\nimport { Input, FormText, FormGroup, Label } from \"reactstrap\";\nimport styles from \"./FormikCheck.module.scss\";\n\nconst FormikCheck: React.FC<FormikInputProps> = ({\n  name,\n  label,\n  required,\n  description,\n  ...props\n}: FormikInputProps) => {\n  return (\n    <FormGroup check>\n      <Label check className={`form-field__label ${styles.nospace}`} size=\"sm\">\n        <Field\n          name={name}\n          as={(formikProps: FieldInputProps<any>) => (\n            <Input\n              bsSize={props[\"bsSize\"] ?? \"sm\"}\n              type=\"checkbox\"\n              {...props}\n              {...formikProps}\n              checked={formikProps.value}\n            />\n          )}\n        />\n        {label}\n      </Label>\n      <FormText className={`form-field__help ${styles.nospace}`} color=\"muted\">\n        {description}\n      </FormText>\n    </FormGroup>\n  );\n};\n\nexport default FormikCheck;\n","type BaseApiClass = {\n  new (...args: any[]): any;\n};\n\ntype ApiModule = {\n  Configuration: {\n    new (...args: any[]): any;\n  };\n};\n\nconst apiGenerator = <T extends unknown>(\n  module: ApiModule,\n  api: BaseApiClass,\n  basePath: string,\n  jwt: string | null\n): T => {\n  const headers: any = {};\n  if (jwt) {\n    headers['X-Tapis-Token'] = jwt;\n  }\n\n  // Generate a configuration object for the module with the\n  // API URL and the authorization header\n  const configuration = new module.Configuration({\n    basePath,\n    headers,\n  });\n\n  // Create an instance of the API\n  const result: T = new api(configuration);\n  return result;\n};\n\nexport default apiGenerator;\n","const errorDecoder = async <T>(func: () => Promise<T>) => {\n  try {\n    // Call the specified function name, and expect that specific return type\n    const result: T = await func();\n    return result;\n  } catch (error) {\n    // If an exception occurred, try to decode the json response from it and\n    // rethrow it\n    if ((error as any).json) {\n      const decoded = await (error as any).json();\n      throw decoded;\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport default errorDecoder;\n","import React from \"react\";\nimport { LoadingSpinner, Message } from \"cookbooks-ui/_common\";\n\ntype QueryWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  error: Error | null;\n  className?: string;\n}>;\n\nconst QueryWrapper: React.FC<QueryWrapperProps> = ({\n  isLoading,\n  error,\n  children,\n  className = \"\",\n}) => {\n  if (isLoading) {\n    return (\n      <div className={className}>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={className}>\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any).message ?? error}\n        </Message>\n      </div>\n    );\n  }\n  return <div className={className}>{children}</div>;\n};\n\nexport default QueryWrapper;\n","import { default as QueryWrapper } from './QueryWrapper';\n\nexport default QueryWrapper;\n","import React from \"react\";\nimport { LoadingSpinner, Message } from \"cookbooks-ui/_common\";\nimport styles from \"./SubmitWrapper.module.scss\";\n\ntype SubmitWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  success: string | undefined;\n  error: Error | null;\n  className?: string;\n  reverse?: boolean;\n}>;\n\nconst SubmitWrapper: React.FC<SubmitWrapperProps> = ({\n  isLoading,\n  error,\n  success,\n  children,\n  className = \"\",\n  reverse = false,\n}) => {\n  return (\n    <div\n      className={`${className} ${styles.wrapper} ${reverse && styles.reverse}`}\n    >\n      {children}\n      {isLoading && (\n        <LoadingSpinner\n          className={styles[\"loading-spinner\"]}\n          placement=\"inline\"\n        />\n      )}\n      {error ? (\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any)?.message ?? error}\n        </Message>\n      ) : (\n        success && (\n          <Message canDismiss={false} type=\"success\" scope=\"inline\">\n            {success}\n          </Message>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SubmitWrapper;\n","import SubmitWrapper from './SubmitWrapper';\n\nexport default SubmitWrapper;\n","import React from \"react\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\nimport { useStat } from \"tapis-hooks/files\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\n\ntype FileStatProps = {\n  systemId: string;\n  path: string;\n  className?: string;\n};\n\nconst FileStat: React.FC<FileStatProps> = ({\n  systemId,\n  path,\n  className = \"\",\n}) => {\n  const { data, isLoading, error } = useStat({ systemId, path });\n\n  const stat = data?.result;\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error} className={className}>\n      <h3>{systemId}</h3>\n      <h5>{path}</h5>\n      {stat && <DescriptionList data={stat} />}\n    </QueryWrapper>\n  );\n};\n\nexport default FileStat;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Systems.GetSystemsRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystems>(() => api.getSystems(params));\n};\n\nexport default list;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (\n  params: Systems.GetSystemRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystem>(() => api.getSystem(params));\n};\n\nexport default details;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst listSchedulerProfiles = (basePath: string, jwt: string) => {\n  const api: Systems.SchedulerProfilesApi =\n    apiGenerator<Systems.SchedulerProfilesApi>(\n      Systems,\n      Systems.SchedulerProfilesApi,\n      basePath,\n      jwt\n    );\n  return errorDecoder<Systems.RespSchedulerProfiles>(() =>\n    api.getSchedulerProfiles()\n  );\n};\n\nexport default listSchedulerProfiles;\n","const QueryKeys = {\n  create: \"systems/create\",\n  list: \"systems/list\",\n  details: \"systems/details\",\n  listSchedulerProfiles: \"systems/listScehdulerProfiles\",\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Systems.GetSystemsRequest = {};\n\nconst useList = (\n  params: Systems.GetSystemsRequest = defaultParams,\n  options: QueryObserverOptions<Systems.RespSystems, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystems, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { details } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (\n  params: Systems.GetSystemRequest,\n  options: QueryObserverOptions<Systems.RespSystem, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystem, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { listSchedulerProfiles } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSchedulerProfiles = (\n  options: QueryObserverOptions<Systems.RespSchedulerProfiles, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSchedulerProfiles, Error>(\n    [QueryKeys.listSchedulerProfiles, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => listSchedulerProfiles(basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useSchedulerProfiles;\n","import React from \"react\";\nimport { useDetails } from \"tapis-hooks/systems\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { DescriptionList, Tabs, JSONDisplay } from \"cookbooks-ui/_common\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst SystemDetail: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const { data, isLoading, error } = useDetails({\n    systemId,\n    select: \"allAttributes\",\n  });\n  const system: Systems.TapisSystem | undefined = data?.result;\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{system?.id}</h3>\n      {system && (\n        <Tabs\n          tabs={{\n            Details: <DescriptionList data={system} />,\n            JSON: <JSONDisplay json={system} />,\n          }}\n        />\n      )}\n    </QueryWrapper>\n  );\n};\n\nexport default SystemDetail;\n","import React from \"react\";\nimport { FormGroup, Label, FormText, Badge } from \"reactstrap\";\nimport \"./FieldWrapper.scss\";\n\nexport type FieldWrapperProps = {\n  label: string;\n  required: boolean;\n  description: string;\n  error?: string;\n  children?: React.ReactNode;\n};\nconst FieldWrapper: React.FC<FieldWrapperProps> = ({\n  label,\n  required,\n  description,\n  children,\n  error,\n}) => (\n  <FormGroup>\n    <Label\n      className=\"form-field__label\"\n      size=\"sm\"\n      style={{ display: \"flex\", alignItems: \"center\" }}\n    >\n      {label}{\" \"}\n      {required ? (\n        <Badge color=\"danger\" style={{ marginLeft: \"10px\" }}>\n          Required\n        </Badge>\n      ) : null}\n    </Label>\n    {children}\n    {error ? (\n      <div className=\"form-field__validation-error\">{error}</div>\n    ) : (\n      description && (\n        <FormText className=\"form-field__help\" color=\"muted\">\n          {description}\n        </FormText>\n      )\n    )}\n  </FormGroup>\n);\n\nexport default FieldWrapper;\n","import React from \"react\";\nimport styles from \"./PageLayout.module.scss\";\n\ninterface LayoutProps {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  constrain?: boolean;\n}\nconst Layout: React.FC<LayoutProps> = ({\n  left,\n  right,\n  top,\n  bottom,\n  constrain,\n}) => (\n  <div\n    className={`${styles[\"layout-root\"]} ${constrain ? styles.constrain : \"\"}`}\n  >\n    {top}\n    <div\n      className={`${styles[\"layout-row\"]} ${constrain ? styles.constrain : \"\"}`}\n    >\n      {left}\n      {right}\n    </div>\n    {bottom}\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { SectionHeader as CommonSectionHeader } from \"cookbooks-ui/_common\";\nimport styles from \"./LayoutSections.module.scss\";\nimport { ReactNodeLike } from \"prop-types\";\n\nexport const LayoutHeader: React.FC<\n  React.PropsWithChildren<{ type?: string; children: ReactNodeLike }>\n> = ({ children, type }) => {\n  return (\n    <div className={type && styles[type]}>\n      <CommonSectionHeader>{children}</CommonSectionHeader>\n    </div>\n  );\n};\n\nexport const LayoutNavWrapper: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return <div className={styles.nav}>{children}</div>;\n};\n\nexport const LayoutBody: React.FC<\n  React.PropsWithChildren<{ constrain?: boolean }>\n> = ({ children, constrain }) => {\n  return (\n    <div className={`${styles.body} ${constrain ? styles.constrain : \"\"}`}>\n      <div className={styles.detail}>{children}</div>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Button, Badge } from \"reactstrap\";\nimport { Collapse as BootstrapCollapse } from \"reactstrap\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./Collapse.module.scss\";\n\ntype CollapseProperties = React.PropsWithChildren<{\n  title: string;\n  note?: string;\n  open?: boolean;\n  requiredText?: string;\n  isCollapsable?: boolean;\n  className?: string;\n}>;\n\nconst Collapse: React.FC<CollapseProperties> = ({\n  title,\n  note,\n  open,\n  requiredText,\n  className,\n  children,\n  isCollapsable = true,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>(open ?? false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <div className={className}>\n      <div className={styles.header}>\n        <div className={styles.title}>\n          {title}\n          {requiredText && (\n            <Badge\n              color=\"danger\"\n              style={{ marginLeft: \"10px\", marginBottom: \"10px\" }}\n            >\n              {requiredText}\n            </Badge>\n          )}\n        </div>\n        <div className={styles.controls}>\n          <div>{note ?? \"\"}</div>\n          {isCollapsable && (\n            <Button\n              color=\"link\"\n              className={styles.expand}\n              size=\"sm\"\n              onClick={toggle}\n            >\n              <Icon name={isOpen ? \"collapse\" : \"expand\"} />\n            </Button>\n          )}\n        </div>\n      </div>\n      <BootstrapCollapse isOpen={isOpen || !isCollapsable}>\n        {children}\n      </BootstrapCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","import { useMemo, useState, useCallback } from \"react\";\nimport { Input, FormGroup, Label } from \"reactstrap\";\nimport { CopyButton } from \"cookbooks-ui/_common\";\nimport styles from \"./JSONDisplay.module.scss\";\n\nconst simplifyObject = (obj: any) => {\n  const result = JSON.parse(JSON.stringify(obj));\n  Object.entries(result).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      if ((value as Array<any>).length === 0) {\n        delete result[key];\n      }\n      return;\n    }\n    if (typeof value === \"object\") {\n      const simplifiedValue = simplifyObject(value);\n      if (Object.entries(simplifiedValue).length === 0) {\n        delete result[key];\n      } else {\n        result[key] = simplifiedValue;\n      }\n      return;\n    }\n    if (value === undefined) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nconst convertSets = (obj: any): any => {\n  if (obj === undefined) {\n    return undefined;\n  }\n  if (Array.isArray(obj)) {\n    return (obj as Array<any>).map((value) => convertSets(value));\n  }\n  if (obj instanceof Set) {\n    return Array.from(obj).map((value) => convertSets(value));\n  }\n  if (typeof obj === \"object\") {\n    const result: any = {};\n    Object.entries(obj).forEach(([key, value]) => {\n      if (value === null) {\n        result[key] = null;\n      } else {\n        result[key] = convertSets(value);\n      }\n    });\n    return result;\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n\ntype JSONDisplayProps = {\n  json: any;\n  className?: string;\n};\n\nconst JSONDisplay: React.FC<JSONDisplayProps> = ({ json, className }) => {\n  const [simplified, setSimplified] = useState(false);\n  const onChange = useCallback(() => {\n    setSimplified(!simplified);\n  }, [setSimplified, simplified]);\n  const jsonString = useMemo(\n    () =>\n      JSON.stringify(\n        simplified ? simplifyObject(convertSets(json)) : convertSets(json),\n        null,\n        2\n      ),\n    [json, simplified]\n  );\n  return (\n    <div className={className}>\n      <div className={styles.controls}>\n        <FormGroup check>\n          <Label check size=\"sm\" className={`form-field__label`}>\n            <Input type=\"checkbox\" onChange={onChange} />\n            Simplified\n          </Label>\n        </FormGroup>\n        <CopyButton value={jsonString} />\n      </div>\n      <Input\n        type=\"textarea\"\n        value={jsonString}\n        className={styles.json}\n        rows=\"20\"\n        disabled={true}\n      />\n    </div>\n  );\n};\n\nexport default JSONDisplay;\n","import JSONDisplay from \"./JSONDisplay\";\n\nexport default JSONDisplay;\n","import React, { useState } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport styles from \"./Tabs.module.scss\";\n\ntype TabsProps = {\n  tabs: { [name: string]: React.ReactNode };\n  className?: string;\n};\n\nconst Tabs: React.FC<TabsProps> = ({ tabs, className = \"\" }) => {\n  const tabNames = Object.keys(tabs);\n  const [activeTab, setActiveTab] = useState(tabNames[0] ?? \"\");\n\n  const getTabClassname = (tabName: string) => {\n    return `${styles.tab} ${activeTab === tabName ? styles.active : \"\"}`;\n  };\n\n  return (\n    <div className={className}>\n      <Nav tabs>\n        {tabNames.map((tabName) => (\n          <NavItem className={getTabClassname(tabName)} key={`tab-${tabName}`}>\n            <NavLink\n              onClick={() => setActiveTab(tabName)}\n              data-testid={`tab-${tabName}`}\n            >\n              {tabName}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        {tabNames.map((tabName) => (\n          <TabPane\n            tabId={tabName}\n            key={`tabcontent-${tabName}`}\n            className={styles.pane}\n          >\n            {tabs[tabName]}\n          </TabPane>\n        ))}\n      </TabContent>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import Tabs from './Tabs';\n\nexport default Tabs;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./Navbar.module.scss\";\n\nexport const NavItem: React.FC<{ to: string; icon?: string }> = ({\n  to,\n  icon,\n  children,\n}) => (\n  <NavLink\n    to={to}\n    className={styles[\"nav-link\"]}\n    activeClassName={styles[\"active\"]}\n    exact={to === \"/\"}\n  >\n    <div className={styles[\"nav-content\"]}>\n      {icon && <Icon name={icon} />}\n      {/* we'll want to set name based on the app */}\n      <span className={styles[\"nav-text\"]}>{children}</span>\n    </div>\n  </NavLink>\n);\n\nconst Navbar: React.FC = ({ children }) => {\n  return <div className={`${styles[\"nav-list\"]}`}>{children}</div>;\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport styles from \"./Sidebar.module.scss\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { Divider } from \"@material-ui/core\";\n\nconst Sidebar: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  return (\n    <div className={styles.root}>\n      <Navbar>\n        <NavItem to=\"/\" icon=\"dashboard\">\n          Dashboard\n        </NavItem>\n        {!accessToken && (\n          <NavItem to=\"/login\" icon=\"user\">\n            Login\n          </NavItem>\n        )}\n        {accessToken && (\n          <>\n            <NavItem to=\"/systems\" icon=\"data-files\">\n              Systems\n            </NavItem>\n            <NavItem to=\"/apps\" icon=\"applications\">\n              Apps\n            </NavItem>\n            <NavItem to=\"/jobs\" icon=\"jobs\">\n              Jobs\n            </NavItem>\n            <Divider />\n          </>\n        )}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { Authenticator } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\n// This helper takes the username and password and assembles an API call\nconst login = (\n  username: string,\n  password: string,\n  basePath: string\n): Promise<Authenticator.RespCreateToken> => {\n  const reqCreateToken: Authenticator.ReqCreateToken = {\n    username,\n    password,\n    grant_type: 'password',\n  };\n  const request: Authenticator.CreateTokenRequest = {\n    reqCreateToken,\n  };\n\n  const api: Authenticator.TokensApi = apiGenerator<Authenticator.TokensApi>(\n    Authenticator,\n    Authenticator.TokensApi,\n    basePath,\n    null\n  );\n\n  return errorDecoder(() => api.createToken(request));\n};\n\nexport default login;\n","const QueryKeys = {\n  login: 'authenticator/login',\n};\n\nexport default QueryKeys;\n","import { useMutation } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport { login } from 'tapis-api/authenticator';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\ntype LoginHookParams = {\n  username: string;\n  password: string;\n};\n\nconst useLogin = () => {\n  const { setAccessToken, basePath } = useTapisConfig();\n\n  // On successful login, save the token to the TapisContext state\n  const onSuccess = (response: Authenticator.RespCreateToken) => {\n    setAccessToken(response?.result?.access_token);\n  };\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, loginHelper is called to perform the operation, with an onSuccess callback\n  // passed as an option\n  const { mutate, isLoading, isError, isSuccess, error } = useMutation<\n    Authenticator.RespCreateToken,\n    Error,\n    LoginHookParams\n  >(\n    [QueryKeys.login, basePath],\n    ({ username, password }) => login(username, password, basePath),\n    { onSuccess }\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    error,\n    login: (username: string, password: string) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ username, password });\n    },\n    logout: () => setAccessToken(null),\n  };\n};\n\nexport default useLogin;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (params: Apps.GetAppsRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApps>(() => api.getApps(params));\n};\n\nexport default list;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst detail = (params: Apps.GetAppRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApp>(() => api.getApp(params));\n};\n\nexport default detail;\n","const QueryKeys = {\n  list: \"apps/list\",\n  create: \"apps/create\",\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Apps.GetAppsRequest = {\n  select: 'jobAttributes,version',\n};\n\nconst useList = (\n  params: Apps.GetAppsRequest = defaultParams,\n  options: QueryObserverOptions<Apps.RespApps, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApps, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { detail } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetail = (\n  params: Apps.GetAppRequest,\n  options: QueryObserverOptions<Apps.RespApp, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApp, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => detail({ ...params }, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetail;\n","import { Apps } from \"@tapis/tapis-typescript\";\nimport { apiGenerator, errorDecoder } from \"tapis-api/utils\";\n\nconst create = (request: Apps.ReqPostApp, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespResourceUrl>(() => {\n    console.log(\"Creating app version v2\", request);\n    return api.createAppVersion({ reqPostApp: request });\n  });\n};\n\nexport default create;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { submit } from \"tapis-api/jobs\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport QueryKeys from \"./queryKeys\";\nimport create from \"tapis-api/apps/create\";\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || \"\";\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Apps.RespResourceUrl, Error, Apps.ReqPostApp>(\n      [QueryKeys, basePath, jwt],\n      (request: Apps.ReqPostApp) => create(request, basePath, jwt)\n    );\n  //   useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n  //   [QueryKeys.submit, appId, appVersion, basePath, jwt],\n  //   (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n  // );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Apps.ReqPostApp) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useCreate;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/apps\";\nimport { Apps } from \"@tapis/tapis-typescript\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Button } from \"reactstrap\";\nimport { AppCreate } from \"./CreateApp\";\n\nconst AppsNav: React.FC = () => {\n  const { data, isLoading, error } = useList(\n    {},\n    { refetchOnWindowFocus: false }\n  );\n  const { url } = useRouteMatch();\n  const appList: Array<Apps.TapisApp> = data?.result ?? [];\n  console.log(url);\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {appList.length ? (\n          appList.map((app) => (\n            <NavItem\n              to={`/apps/${app.id}/${app.version}`}\n              icon=\"applications\"\n              key={app.id}\n            >\n              {`${app.id} v${app.version}`}\n            </NavItem>\n          ))\n        ) : (\n          <>\n            <i>No templates found</i>\n          </>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default AppsNav;\n","import AppsNav from './AppsNav';\nexport default AppsNav;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Jobs.GetJobListRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJobList>(() => api.getJobList(params));\n};\n\nexport default list;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (params: Jobs.GetJobRequest, basePath: string, jwt: string) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJob>(() => api.getJob(params));\n};\n\nexport default details;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst submit = (\n  request: Jobs.ReqSubmitJob,\n  basePath: string,\n  jwt: string\n): Promise<Jobs.RespSubmitJob> => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespSubmitJob>(() =>\n    api.submitJob({ reqSubmitJob: request })\n  );\n};\n\nexport default submit;\n","const QueryKeys = {\n  list: 'jobs/list',\n  details: 'jobs/details',\n  submit: 'jobs/submit',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Jobs.GetJobListRequest = {\n  orderBy: 'created(desc)',\n};\n\nconst useList = (\n  params: Jobs.GetJobListRequest = defaultParams,\n  options: QueryObserverOptions<Jobs.RespGetJobList, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Jobs.RespGetJobList, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { details } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (\n  jobUuid: string,\n  options: QueryObserverOptions<Jobs.RespGetJob, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const params: Jobs.GetJobRequest = { jobUuid };\n  const result = useQuery<Jobs.RespGetJob, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { submit } from 'tapis-api/jobs';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSubmit = (appId: string, appVersion: string) => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n      [QueryKeys.submit, appId, appVersion, basePath, jwt],\n      (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n    );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset, appId, appVersion]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Jobs.ReqSubmitJob) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useSubmit;\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const getIncompleteAppInputs = (\n  app: Apps.TapisApp\n): Array<Apps.AppFileInput> => {\n  return (\n    app.jobAttributes?.fileInputs?.filter(\n      (fileInput) => !fileInput.sourceUrl\n    ) ?? []\n  );\n};\n\nexport const getIncompleteAppInputsOfType = (\n  app: Apps.TapisApp,\n  inputType: Apps.FileInputModeEnum\n): Array<Apps.AppFileInput> => {\n  return getIncompleteAppInputs(app).filter(\n    (fileInput) => fileInput.inputMode === inputType\n  );\n};\n\nexport const generateFileInputFromAppInput = (\n  input: Apps.AppFileInput\n): Jobs.JobFileInput => ({\n  name: input.name,\n  sourceUrl: input.sourceUrl,\n  targetPath: input.targetPath,\n  description: input.description,\n  autoMountLocal: input.autoMountLocal,\n});\n\nexport const generateRequiredFileInputsFromApp = (\n  app: Apps.TapisApp\n): Array<Jobs.JobFileInput> => {\n  const requiredInputs: Array<Apps.AppFileInput> =\n    app.jobAttributes?.fileInputs?.filter(\n      (fileInput) => fileInput.inputMode === Apps.FileInputModeEnum.Required\n    ) ?? [];\n  const fileInputs: Array<Jobs.JobFileInput> = requiredInputs.map(\n    (appFileInput) => {\n      return generateFileInputFromAppInput(appFileInput);\n    }\n  );\n  return fileInputs;\n};\n\nexport const getAppInputsIncludedByDefault = (\n  appFileInputs: Array<Apps.AppFileInput>,\n  jobFileInputs: Array<Jobs.JobFileInput>\n) => {\n  return appFileInputs.filter((appFileInput) => {\n    const includedInJob = jobFileInputs.some(\n      (jobFileInput) => jobFileInput.name === appFileInput.name\n    );\n    return (\n      appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n      !!appFileInput.sourceUrl &&\n      !includedInJob\n    );\n  });\n};\n\n/**\n * @param appFileInputs\n * @param jobFileInputs\n * @returns An array of jobFileInputs that are underspecified\n */\nexport const getIncompleteJobInputs = (\n  appFileInputs: Array<Apps.AppFileInput>,\n  jobFileInputs: Array<Jobs.JobFileInput>\n) => {\n  // Get job inputs that are REQUIRED in the app but do not specify sourceUrl\n  const incompleteRequiredAppInputs: Array<Apps.AppFileInput> =\n    appFileInputs.filter(\n      (appFileInput) =>\n        appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n        !appFileInput.sourceUrl\n    );\n  const incompleteRequiredJobInputs: Array<Jobs.JobFileInput> =\n    jobFileInputs.filter((jobFileInput) => {\n      // Is this jobFileInput part of required app inputs?\n      const requiredInApp = incompleteRequiredAppInputs.some(\n        (appInput) => appInput.name === jobFileInput.name\n      );\n      if (requiredInApp) {\n        return !jobFileInput.sourceUrl;\n      } else {\n        return false;\n      }\n    });\n\n  // Get job inputs that are OPTIONAL in the app but do not specify sourceUrl\n  const incompleteOptionalAppInputs: Array<Apps.AppFileInput> =\n    appFileInputs.filter(\n      (appFileInput) =>\n        appFileInput.inputMode === Apps.FileInputModeEnum.Optional &&\n        !appFileInput.sourceUrl\n    );\n  const incompleteOptionalJobInputs: Array<Jobs.JobFileInput> =\n    jobFileInputs.filter((jobFileInput) => {\n      // Is this jobFileInput part of optional app inputs?\n      const optionalInApp = incompleteOptionalAppInputs.some(\n        (appInput) => appInput.name === jobFileInput.name\n      );\n      if (optionalInApp) {\n        return !jobFileInput.sourceUrl;\n      } else {\n        return false;\n      }\n    });\n\n  // Get job inputs that are neither OPTIONAL or REQUIRED, but are incomplete\n  const incompleteUserInputs: Array<Jobs.JobFileInput> = jobFileInputs.filter(\n    (jobFileInput) => {\n      // Is this jobFileInput neither OPTIONAL or REQUIRED?\n      const userInput =\n        !incompleteRequiredAppInputs.some(\n          (appInput) => appInput.name === jobFileInput.name\n        ) &&\n        !incompleteOptionalAppInputs.some(\n          (appInput) => appInput.name === jobFileInput.name\n        );\n      if (userInput) {\n        return !jobFileInput.sourceUrl || !jobFileInput.targetPath;\n      } else {\n        return false;\n      }\n    }\n  );\n\n  return incompleteRequiredJobInputs\n    .concat(incompleteOptionalJobInputs)\n    .concat(incompleteUserInputs);\n};\n\nexport const fileInputsComplete = (\n  app: Apps.TapisApp,\n  fileInputs: Array<Jobs.JobFileInput>\n) => {\n  // Check to make sure job has filled in all REQUIRED app inputs that are missing sourceUrl\n  const incompleteRequiredInputs: Array<Apps.AppFileInput> =\n    getIncompleteAppInputsOfType(app, Apps.FileInputModeEnum.Required);\n  const hasIncompleteRequiredInput: boolean = incompleteRequiredInputs.some(\n    (requiredInput) => {\n      // Find JobFileInput with name matching the required input\n      const jobFileInput: Jobs.JobFileInput | undefined = fileInputs.find(\n        (jobFileInput) => jobFileInput.name === requiredInput.name\n      );\n      if (!jobFileInput) {\n        // Matching jobFileInput not found, therefore there is an incomplete required input\n        return true;\n      } else {\n        // Verify that this input has a sourceUrl specified\n        return !jobFileInput.sourceUrl;\n      }\n    }\n  );\n  if (hasIncompleteRequiredInput) {\n    return false;\n  }\n\n  // Check to see if an OPTIONAL input was included but not fully specified\n  const optionalAppInputs: Array<Apps.AppFileInput> = getIncompleteAppInputs(\n    app\n  ).filter((appFileInput) => !appFileInput.sourceUrl);\n  // get any optional app file input that was included in the job.\n  const optionalJobInputs: Array<Jobs.JobFileInput> =\n    fileInputs.filter((jobFileInput) =>\n      optionalAppInputs.some(\n        (optionalAppInput) => jobFileInput.name === optionalAppInput.name\n      )\n    ) ?? [];\n  const hasIncompleteOptionalInput: boolean =\n    !!optionalJobInputs.length &&\n    optionalJobInputs.some((jobInput) => !jobInput.sourceUrl);\n  if (hasIncompleteOptionalInput) {\n    return false;\n  }\n\n  // Check to see if any app inputs that did not exist\n  const namedInputs =\n    app.jobAttributes?.fileInputs?.map((input) => input.name) ?? [];\n  const otherInputs: Array<Jobs.JobFileInput> =\n    fileInputs.filter(\n      (jobInput) => !namedInputs.some((name) => name === jobInput.name)\n    ) ?? [];\n  if (\n    otherInputs.some(\n      (otherInput) => !otherInput.sourceUrl || !otherInput.targetPath\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const getIncompleteAppInputArrays = (\n  app: Apps.TapisApp\n): Array<Apps.AppFileInputArray> => {\n  return (\n    app.jobAttributes?.fileInputArrays?.filter(\n      (fileInput) => !fileInput.sourceUrls\n    ) ?? []\n  );\n};\n\nexport const getIncompleteAppInputArraysOfType = (\n  app: Apps.TapisApp,\n  inputType: Apps.FileInputModeEnum\n): Array<Apps.AppFileInputArray> => {\n  return getIncompleteAppInputArrays(app).filter(\n    (fileInput) => fileInput.inputMode === inputType\n  );\n};\n\nexport const generateFileInputArrayFromAppInput = (\n  input: Apps.AppFileInputArray\n): Jobs.JobFileInputArray => ({\n  name: input.name,\n  sourceUrls: input.sourceUrls ?? [],\n  targetDir: input.targetDir,\n  description: input.description,\n});\n\nexport const generateRequiredFileInputArraysFromApp = (\n  app: Apps.TapisApp\n): Array<Jobs.JobFileInput> => {\n  const requiredInputArrays: Array<Apps.AppFileInputArray> =\n    app.jobAttributes?.fileInputArrays?.filter(\n      (fileInput) => fileInput.inputMode === Apps.FileInputModeEnum.Required\n    ) ?? [];\n  const fileInputs: Array<Jobs.JobFileInput> = requiredInputArrays.map(\n    (appFileInputArray) => {\n      return generateFileInputArrayFromAppInput(appFileInputArray);\n    }\n  );\n  return fileInputs;\n};\n\nexport const getAppInputArraysIncludedByDefault = (\n  appFileInputArrays: Array<Apps.AppFileInputArray>,\n  jobFileInputArrays: Array<Jobs.JobFileInputArray>\n) => {\n  return appFileInputArrays.filter((appFileInputArray) => {\n    const includedInJob = jobFileInputArrays.some(\n      (jobFileInputArray) => jobFileInputArray.name === appFileInputArray.name\n    );\n    return (\n      appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n      !!appFileInputArray.sourceUrls &&\n      !includedInJob\n    );\n  });\n};\n\n/**\n * @param appFileInputsArrays\n * @param jobFileInputsArrays\n * @returns An array of JobFileInputArrays that are underspecified\n */\nexport const getIncompleteJobInputArrays = (\n  appFileInputArrays: Array<Apps.AppFileInputArray>,\n  jobFileInputArrays: Array<Jobs.JobFileInputArray>\n): Array<Jobs.JobFileInputArray> => {\n  // Get job input arrays that are REQUIRED in the app but do not specify sourceUrl\n  const incompleteRequiredAppInputArrays: Array<Apps.AppFileInputArray> =\n    appFileInputArrays.filter(\n      (appFileInputArray) =>\n        appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n        !appFileInputArray.sourceUrls\n    );\n  const incompleteRequiredJobInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray part of required app input arrays?\n      const requiredInApp = incompleteRequiredAppInputArrays.some(\n        (appInputArray) => appInputArray.name === jobFileInputArray.name\n      );\n      if (requiredInApp) {\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      } else {\n        return false;\n      }\n    });\n\n  // Get job input arrays that are OPTIONAL in the app but do not specify sourceUrl\n  const incompleteOptionalAppInputArrays: Array<Apps.AppFileInputArray> =\n    appFileInputArrays.filter(\n      (appFileInputArray) =>\n        appFileInputArray.inputMode === Apps.FileInputModeEnum.Optional &&\n        !appFileInputArray.sourceUrls\n    );\n  const incompleteOptionalJobInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray part of optional app input arrays?\n      const optionalInApp = incompleteOptionalAppInputArrays.some(\n        (appInputArray) => appInputArray.name === jobFileInputArray.name\n      );\n      if (optionalInApp) {\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      } else {\n        return false;\n      }\n    });\n\n  // Get job input arrays that are neither OPTIONAL or REQUIRED, but are incomplete\n  const incompleteUserInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray neither OPTIONAL or REQUIRED?\n      const userInput =\n        !incompleteRequiredAppInputArrays.some(\n          (appInputArray) => appInputArray.name === jobFileInputArray.name\n        ) &&\n        !incompleteOptionalAppInputArrays.some(\n          (appInputArray) => appInputArray.name === jobFileInputArray.name\n        );\n      if (userInput) {\n        return (\n          !jobFileInputArray.sourceUrls ||\n          !jobFileInputArray.sourceUrls.length ||\n          !jobFileInputArray.targetDir\n        );\n      } else {\n        return false;\n      }\n    });\n\n  return incompleteRequiredJobInputArrays\n    .concat(incompleteOptionalJobInputArrays)\n    .concat(incompleteUserInputArrays);\n};\n\nexport const fileInputArraysComplete = (\n  app: Apps.TapisApp,\n  fileInputArrays: Array<Jobs.JobFileInputArray>\n): boolean => {\n  // Check to make sure job has filled in all REQUIRED app inputs that are missing sourceUrl\n  const incompleteRequiredInputs: Array<Apps.AppFileInputArray> =\n    getIncompleteAppInputArraysOfType(app, Apps.FileInputModeEnum.Required);\n  const hasIncompleteRequiredInput: boolean = incompleteRequiredInputs.some(\n    (requiredInputArray) => {\n      // Find JobFileInputArray with name matching the required input\n      const jobFileInputArray: Jobs.JobFileInputArray | undefined =\n        fileInputArrays.find(\n          (jobFileInputArray) =>\n            jobFileInputArray.name === requiredInputArray.name\n        );\n      if (!jobFileInputArray) {\n        // Matching jobFileInput not found, therefore there is an incomplete required input\n        return true;\n      } else {\n        // Verify that this input has a sourceUrl specified\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      }\n    }\n  );\n  if (hasIncompleteRequiredInput) {\n    return false;\n  }\n\n  // Check to see if an OPTIONAL input was included but not fully specified\n  const optionalAppInputArrays: Array<Apps.AppFileInputArray> =\n    getIncompleteAppInputArrays(app).filter(\n      (appFileInput) => !appFileInput.sourceUrls\n    );\n  // get any optional app file input that was included in the job.\n  const optionalJobInputArrays: Array<Jobs.JobFileInputArray> =\n    fileInputArrays.filter((jobFileInputArray) =>\n      optionalAppInputArrays.some(\n        (optionalAppInputArray) =>\n          jobFileInputArray.name === optionalAppInputArray.name\n      )\n    ) ?? [];\n  const hasIncompleteOptionalInputArray: boolean =\n    !!optionalJobInputArrays.length &&\n    optionalJobInputArrays.some((jobInput) => !jobInput.sourceUrls);\n  if (hasIncompleteOptionalInputArray) {\n    return false;\n  }\n\n  // Check to see if any app inputs that did not exist\n  const namedInputs =\n    app.jobAttributes?.fileInputArrays?.map((input) => input.name) ?? [];\n  const otherInputArrays: Array<Jobs.JobFileInputArray> =\n    fileInputArrays.filter(\n      (jobInputArray) =>\n        !namedInputs.some((name) => name === jobInputArray.name)\n    ) ?? [];\n  if (\n    otherInputArrays.some(\n      (otherInputArray) =>\n        !otherInputArray.sourceUrls || !otherInputArray.targetDir\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const generateJobArg = (argSpec: Apps.AppArgSpec): Jobs.JobArgSpec => {\n  return {\n    arg: argSpec.arg,\n    description: argSpec.description,\n    include: argSpec.inputMode !== Apps.ArgInputModeEnum.IncludeOnDemand,\n    name: argSpec.name,\n  };\n};\n\nexport const getArgMode = (\n  name: string,\n  argSpecs: Array<Apps.AppArgSpec>\n): Apps.ArgInputModeEnum | undefined => {\n  const spec: Apps.AppArgSpec | undefined = argSpecs.find(\n    (argSpec) => argSpec.name === name\n  );\n  if (!spec) {\n    return undefined;\n  }\n  return spec.inputMode;\n};\n\nexport const generateJobArgsFromSpec = (\n  argSpecs: Array<Apps.AppArgSpec>\n): Array<Jobs.JobArgSpec> => {\n  return argSpecs.map((argSpec) => generateJobArg(argSpec));\n};\n","import { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\nimport { generateRequiredFileInputsFromApp } from 'tapis-api/utils/jobFileInputs';\nimport { generateRequiredFileInputArraysFromApp } from 'tapis-api/utils/jobFileInputArrays';\nimport { generateJobArgsFromSpec } from 'tapis-api/utils/jobArgs';\n\nconst generateJobDefaults = ({\n  app,\n  systems,\n}: {\n  app?: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n}): Partial<Jobs.ReqSubmitJob> => {\n  if (!app) {\n    return {};\n  }\n\n  const defaultValues: Partial<Jobs.ReqSubmitJob> = {\n    name: `${app.id}-${app.version}`,\n    description: app.description,\n    appId: app.id,\n    appVersion: app.version,\n    archiveOnAppError: app.jobAttributes?.archiveOnAppError ?? true,\n    archiveSystemId: app.jobAttributes?.archiveSystemId,\n    archiveSystemDir: app.jobAttributes?.archiveSystemDir,\n    nodeCount: app.jobAttributes?.nodeCount,\n    coresPerNode: app.jobAttributes?.coresPerNode,\n    jobType: app.jobType,\n    memoryMB: app.jobAttributes?.memoryMB,\n    maxMinutes: app.jobAttributes?.maxMinutes,\n    isMpi: app.jobAttributes?.isMpi,\n    mpiCmd: app.jobAttributes?.mpiCmd,\n    cmdPrefix: app.jobAttributes?.cmdPrefix,\n    fileInputs: generateRequiredFileInputsFromApp(app),\n    fileInputArrays: generateRequiredFileInputArraysFromApp(app),\n    parameterSet: {\n      appArgs: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.appArgs ?? []\n      ),\n      containerArgs: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.containerArgs ?? []\n      ),\n      schedulerOptions: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.schedulerOptions ?? []\n      ),\n      archiveFilter: app.jobAttributes?.parameterSet?.archiveFilter,\n      envVariables: app.jobAttributes?.parameterSet?.envVariables,\n    },\n  };\n  return defaultValues;\n};\n\nexport default generateJobDefaults;\n","import { Message } from \"cookbooks-ui/_common\";\n\ntype JobStartSummaryProps = {\n  field?: string;\n  error?: string;\n};\n\nconst JobStartSummary: React.FC<JobStartSummaryProps> = ({ field, error }) => {\n  return (\n    <div>\n      {field ? (\n        <div>{field}</div>\n      ) : (\n        <Message type=\"error\" canDismiss={false} scope=\"inline\">\n          {error ?? \"\"}\n        </Message>\n      )}\n    </div>\n  );\n};\n\nexport default JobStartSummary;\n","import React, { useReducer, useContext, useEffect } from \"react\";\n\nexport type BuilderContextType<T> = {\n  data: Partial<T>;\n  add: (slice: Partial<T>) => void;\n  set: (slice: Partial<T>) => void;\n  clear: () => void;\n};\n\n/**\n * Creates a Provider and context hook for a given data type\n * that builds a structure from slices of the provided data type\n *\n * @returns A Provider and a context hook\n */\nconst withBuilder = <T extends unknown>() => {\n  const context = React.createContext<BuilderContextType<T>>({\n    data: {},\n    add: (slice: Partial<T>) => {},\n    set: (slice: Partial<T>) => {},\n    clear: () => {},\n  });\n\n  const useBuilderContext = () => useContext(context);\n  const Provider: React.FC<React.PropsWithChildren<{ value?: Partial<T> }>> = ({\n    children,\n    value,\n  }) => {\n    const reducer = (\n      state: Partial<T>,\n      payload: {\n        action: \"add\" | \"set\" | \"clear\";\n        slice?: Partial<T>;\n      }\n    ) => {\n      const { action, slice } = payload;\n      switch (action) {\n        case \"add\":\n          return { ...state, ...slice };\n        case \"set\":\n          return { ...slice };\n        case \"clear\":\n          return {};\n        default:\n          return { ...state };\n      }\n    };\n    const [data, dispatch] = useReducer(reducer, { ...value });\n\n    useEffect(() => {\n      dispatch({ action: \"set\", slice: value });\n    }, [dispatch, value]);\n\n    const contextValue: BuilderContextType<T> = {\n      data,\n      add: (slice) => dispatch({ action: \"add\", slice }),\n      set: (slice) => dispatch({ action: \"set\", slice }),\n      clear: () => dispatch({ action: \"clear\" }),\n    };\n    return <context.Provider value={contextValue}>{children}</context.Provider>;\n  };\n\n  return {\n    useBuilderContext,\n    Provider,\n  };\n};\n\nexport default withBuilder;\n","import React, { useContext } from \"react\";\nimport { Jobs, Apps, Systems } from \"@tapis/tapis-typescript\";\nimport withBuilder from \"cookbooks-ui/utils/withBuilder\";\n\ntype JobLauncherContextType = {\n  app: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n  schedulerProfiles: Array<Systems.SchedulerProfile>;\n};\n\nconst JobLauncherContext = React.createContext<JobLauncherContextType>({\n  app: {},\n  systems: [],\n  schedulerProfiles: [],\n});\n\nconst { useBuilderContext, Provider } = withBuilder<Jobs.ReqSubmitJob>();\n\nexport const useJobLauncher = () => {\n  const { data, add, set, clear } = useBuilderContext();\n  const { app, systems, schedulerProfiles } = useContext(JobLauncherContext);\n  return {\n    job: data,\n    add,\n    set,\n    clear,\n    app,\n    systems,\n    schedulerProfiles,\n  };\n};\n\ntype JobLauncherProviderProps = {\n  value: {\n    defaultValues: Partial<Jobs.ReqSubmitJob>;\n    app: Apps.TapisApp;\n    systems: Array<Systems.TapisSystem>;\n    schedulerProfiles: Array<Systems.SchedulerProfile>;\n  };\n};\n\nexport const JobLauncherProvider: React.FC<\n  React.PropsWithChildren<JobLauncherProviderProps>\n> = ({ value, children }) => {\n  const { app, systems, defaultValues, schedulerProfiles } = value;\n  return (\n    <JobLauncherContext.Provider value={{ app, systems, schedulerProfiles }}>\n      {Provider({ value: defaultValues, children })}\n    </JobLauncherContext.Provider>\n  );\n};\n\nexport default useJobLauncher;\n","import { StepSummaryField, useJobLauncher } from \"../components\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport { JobStep, JobLauncherProviderParams } from \"../\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\n\nexport const JobStart: React.FC = () => {\n  const { app } = useJobLauncher();\n  return (\n    <div>\n      <h2>\n        Launching {app.id} v{app.version}\n      </h2>\n      <FormikInput\n        name=\"name\"\n        required={true}\n        label=\"Name\"\n        description=\"A name for this job\"\n      />\n      <FormikInput\n        name=\"description\"\n        required={false}\n        label=\"Description\"\n        description=\"A description of this job\"\n      />\n    </div>\n  );\n};\n\nexport const JobStartSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const { name, description, appId, appVersion } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={name}\n        error=\"A job name is required\"\n        key=\"job-start-name-summary\"\n      />\n      <StepSummaryField\n        field={description}\n        key=\"job-start-description-summary\"\n      />\n      <div>\n        <i>\n          Application: {appId} v{appVersion}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst generateInitialValues = ({\n  job,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  name: job.name,\n  description: job.description,\n});\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required().min(1).max(64),\n  description: Yup.string(),\n});\n\nconst step: JobStep = {\n  id: \"start\",\n  name: \"Job Name\",\n  render: <JobStart />,\n  summary: <JobStartSummary />,\n  generateInitialValues,\n  validationSchema,\n};\n\nexport default step;\n","import { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\n\ntype DefaultSystem = {\n  source?: 'app';\n  systemId?: string;\n};\n\n/**\n * Computes the default execution system ID that will be used\n *\n * @param app\n * @returns\n */\nexport const computeDefaultSystem = (app: Apps.TapisApp): DefaultSystem => {\n  if (app.jobAttributes?.execSystemId) {\n    return {\n      source: 'app',\n      systemId: app.jobAttributes?.execSystemId,\n    };\n  }\n  return {\n    source: undefined,\n    systemId: undefined,\n  };\n};\n\ntype DefaultQueue = {\n  source?: 'app' | 'system' | 'app system';\n  queue?: string;\n};\n\n/**\n * Computes the logical queue that will be used, if the job does not\n * specify one\n *\n * @param job\n * @param app\n * @param systems\n * @returns\n */\nexport const computeDefaultQueue = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): DefaultQueue => {\n  // If the app specifies the logical queue, use that\n  if (app.jobAttributes?.execSystemLogicalQueue) {\n    return {\n      source: 'app',\n      queue: app.jobAttributes?.execSystemLogicalQueue,\n    };\n  }\n\n  // If the job specifies a system, look for its default logical queue\n  if (job.execSystemId) {\n    const selectedSystem = systems.find(\n      (system) => system.id === job.execSystemId\n    );\n    if (selectedSystem?.batchDefaultLogicalQueue) {\n      return {\n        source: 'system',\n        queue: selectedSystem.batchDefaultLogicalQueue,\n      };\n    }\n  }\n\n  // If the app specifies a system, look for its default logical queue\n  if (app.jobAttributes?.execSystemId) {\n    const appSystem = systems.find(\n      (system) => system.id === app.jobAttributes?.execSystemId\n    );\n    if (appSystem?.batchDefaultLogicalQueue) {\n      return {\n        source: 'app system',\n        queue: appSystem.batchDefaultLogicalQueue,\n      };\n    }\n  }\n\n  // Return a result that has no computed default logical queue\n  return {\n    source: undefined,\n    queue: undefined,\n  };\n};\n\ntype DefaultJobType = {\n  source: 'app' | 'app system' | 'system' | 'tapis';\n  jobType: Apps.JobTypeEnum;\n};\n\n/**\n * Determines the default jobType if one is not specified in the jobType field in a job\n * using the algorithm specified at:\n *\n * https://tapis.readthedocs.io/en/latest/technical/jobs.html#job-type\n *\n * @param job\n * @param app\n * @param systems\n * @returns\n */\nexport const computeDefaultJobType = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): DefaultJobType => {\n  if (app.jobType) {\n    return {\n      source: 'app',\n      jobType: app.jobType!,\n    };\n  }\n  if (job?.execSystemId) {\n    const selectedSystem = systems.find(\n      (system) => system.id === job.execSystemId\n    );\n    if (selectedSystem?.canRunBatch) {\n      return {\n        source: 'system',\n        jobType: Apps.JobTypeEnum.Batch,\n      };\n    }\n  }\n  if (app.jobAttributes?.execSystemId) {\n    const appSystem = systems.find(\n      (system) => system.id === app.jobAttributes?.execSystemId\n    );\n    if (appSystem?.canRunBatch) {\n      return {\n        source: 'app system',\n        jobType: Apps.JobTypeEnum.Batch,\n      };\n    }\n  }\n  return {\n    source: 'tapis',\n    jobType: Apps.JobTypeEnum.Fork,\n  };\n};\n\nexport enum ValidateExecSystemResult {\n  Complete = 'COMPLETE',\n  ErrorNoExecSystem = 'ERROR_NO_EXEC_SYSTEM',\n  ErrorExecSystemNotFound = 'ERROR_EXEC_SYSTEM_NOT_FOUND',\n  ErrorExecSystemNoQueues = 'ERROR_EXEC_SYSTEM_NO_QUEUES',\n  ErrorNoQueue = 'ERROR_NO_QUEUE',\n  ErrorQueueNotFound = 'ERROR_QUEUE_NOT_FOUND',\n}\n\nexport const validateExecSystem = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): ValidateExecSystemResult => {\n  const defaultSystem = computeDefaultSystem(app);\n\n  // Check that an exec system can be computed\n  if (!job.execSystemId && !defaultSystem?.systemId) {\n    return ValidateExecSystemResult.ErrorNoExecSystem;\n  }\n\n  const computedSystem = systems.find(\n    (system) => system.id === (job.execSystemId ?? defaultSystem?.systemId)\n  );\n  if (!computedSystem) {\n    return ValidateExecSystemResult.ErrorExecSystemNotFound;\n  }\n\n  // If the job will be a FORK job, skip queue validation\n  const computedJobType = computeDefaultJobType(job, app, systems);\n  if (\n    job.jobType !== Apps.JobTypeEnum.Batch &&\n    computedJobType.jobType === Apps.JobTypeEnum.Fork\n  ) {\n    return ValidateExecSystemResult.Complete;\n  }\n\n  // If the job will be a BATCH job, make sure that the selected execution system\n  // has queues\n  if (!computedSystem.batchLogicalQueues?.length) {\n    return ValidateExecSystemResult.ErrorExecSystemNoQueues;\n  }\n\n  const defaultQueue = computeDefaultQueue(job, app, systems);\n\n  // If the job type will be a BATCH job, ensure that a queue is specified\n  // If no queue exists, there must be a fallback to the app or system default\n  if (!job.execSystemLogicalQueue && !defaultQueue.queue) {\n    return ValidateExecSystemResult.ErrorNoQueue;\n  }\n\n  // Check to see that the logical queue selected exists on the selected system\n  const selectedSystem = systems.find(\n    (system) => system.id === (job.execSystemId ?? defaultSystem?.systemId)\n  );\n  if (\n    !selectedSystem?.batchLogicalQueues?.some(\n      (queue) =>\n        queue.name === (job.execSystemLogicalQueue ?? defaultQueue.queue)\n    )\n  ) {\n    return ValidateExecSystemResult.ErrorQueueNotFound;\n  }\n\n  return ValidateExecSystemResult.Complete;\n};\n","export const upperCaseFirstLetter = (str: string) => {\n  const lower = str.toLowerCase();\n  return `${lower.slice(0, 1).toUpperCase()}${lower.slice(1)}`;\n};\n\nexport const capitalize = (str: string) => {\n  return str!.charAt(0).toUpperCase() + str!.slice(1);\n};\n\nexport const reduceRecord = (record: Record<'id', string>) => {\n  const { id, ...contents } = record;\n  return Object.values(contents).reduce(\n    (prev, current) => ((prev as string) + current) as string,\n    ''\n  );\n};\n","import { useMemo, useEffect, useState } from \"react\";\nimport { Apps, Jobs, Systems } from \"@tapis/tapis-typescript\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport {\n  FormikInput,\n  FormikSelect,\n} from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { useFormikContext } from \"formik\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  computeDefaultQueue,\n  computeDefaultSystem,\n  computeDefaultJobType,\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from \"tapis-api/utils/jobExecSystem\";\nimport { capitalize } from \"./utils\";\nimport * as Yup from \"yup\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { JobStep, JobLauncherProviderParams } from \"../\";\n\nconst getLogicalQueues = (system?: Systems.TapisSystem) =>\n  system?.batchLogicalQueues ?? [];\n\nconst getSystem = (systems: Array<Systems.TapisSystem>, systemId?: string) =>\n  !!systemId ? systems.find((system) => system.id === systemId) : undefined;\n\nconst SystemSelector: React.FC = () => {\n  const { setFieldValue, values } = useFormikContext();\n  const { job, app, systems } = useJobLauncher();\n\n  const [queues, setQueues] = useState<Array<Systems.LogicalQueue>>(\n    getLogicalQueues(getSystem(systems, job.execSystemId))\n  );\n\n  const [selectableSystems, setSelectableSystems] =\n    useState<Array<Systems.TapisSystem>>(systems);\n\n  const {\n    defaultSystemLabel,\n    defaultQueueLabel,\n    defaultJobTypeLabel,\n    isBatch,\n    selectedSystem,\n  } = useMemo(() => {\n    // Compute labels for when undefined values are selected for systems, queues or jobType\n    const { source: systemSource, systemId } = computeDefaultSystem(app);\n    const defaultSystemLabel = systemSource\n      ? `App default (${systemId})`\n      : \"Please select a system\";\n    const { source: queueSource, queue } = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultQueueLabel = queueSource\n      ? `${capitalize(queueSource)} default (${queue})`\n      : \"Please select a queue\";\n    const { source: jobTypeSource, jobType } = computeDefaultJobType(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultJobTypeLabel = `${capitalize(\n      jobTypeSource\n    )} default (${jobType})`;\n    const isBatch =\n      (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch ||\n      jobType === Apps.JobTypeEnum.Batch;\n    const selectedSystem = (values as Jobs.ReqSubmitJob)?.execSystemId;\n    return {\n      defaultSystemLabel,\n      defaultQueueLabel,\n      defaultJobTypeLabel,\n      isBatch,\n      selectedSystem,\n    };\n  }, [values, app, systems]);\n\n  useEffect(() => {\n    // Handle changes to selectable execSystems and execSystemLogicalQueues\n    const validSystems = isBatch\n      ? systems.filter((system) => !!system.batchLogicalQueues?.length)\n      : systems;\n    setSelectableSystems(validSystems);\n    if (!validSystems.some((system) => system.id === selectedSystem)) {\n      // If current system is invalid (like a system with no logical queues for a batch job)\n      // then use the application default\n      setFieldValue(\"execSystemId\", undefined);\n    }\n    if (!isBatch) {\n      setFieldValue(\"execSystemLogicalQueue\", undefined);\n    }\n    const system = getSystem(\n      validSystems,\n      selectedSystem ?? app.jobAttributes?.execSystemId\n    );\n    const queues = getLogicalQueues(system);\n    setQueues(queues);\n    setFieldValue(\"execSystemLogicalQueue\", undefined);\n  }, [\n    systems,\n    isBatch,\n    app,\n    selectedSystem,\n    setFieldValue,\n    setSelectableSystems,\n    setQueues,\n  ]);\n\n  return (\n    <div className={fieldArrayStyles.item}>\n      <FormikSelect\n        name=\"execSystemId\"\n        description=\"The execution system for this job\"\n        label=\"Execution System\"\n        required={true}\n        data-testid=\"execSystemId\"\n      >\n        <option value={undefined} label={defaultSystemLabel} />\n        {selectableSystems.map((system) => (\n          <option\n            value={system.id}\n            key={`execsystem-select-${system.id}`}\n            label={system.id}\n            data-testid={`execSystemId-${system.id}`}\n          />\n        ))}\n      </FormikSelect>\n      <FormikSelect\n        name=\"jobType\"\n        label=\"Job Type\"\n        description=\"Jobs can either be Batch or Fork\"\n        required={true}\n        data-testid=\"jobType\"\n      >\n        <option value={undefined} label={defaultJobTypeLabel} />\n        <option value={Apps.JobTypeEnum.Batch} label=\"Batch\" />\n        <option value={Apps.JobTypeEnum.Fork} label=\"Fork\" />\n      </FormikSelect>\n      {isBatch && (\n        <FormikSelect\n          name=\"execSystemLogicalQueue\"\n          description=\"The batch queue on this execution system\"\n          label=\"Batch Logical Queue\"\n          required={false}\n          disabled={queues.length === 0}\n          data-testid=\"execSystemLogicalQueue\"\n        >\n          <option value={undefined} label={defaultQueueLabel} />\n          {queues.map((queue) => (\n            <option\n              value={queue.name}\n              key={`queue-select-${queue.name}`}\n              label={queue.name}\n            />\n          ))}\n        </FormikSelect>\n      )}\n    </div>\n  );\n};\n\nconst ExecSystemQueueOptions: React.FC = () => {\n  const { errors } = useFormikContext();\n  const queueErrors = errors as QueueErrors;\n  const hasErrors =\n    queueErrors.coresPerNode ||\n    queueErrors.maxMinutes ||\n    queueErrors.memoryMB ||\n    queueErrors.nodeCount;\n  return (\n    <Collapse title=\"Queue Parameters\" isCollapsable={!hasErrors}>\n      <FormikInput\n        name=\"nodeCount\"\n        label=\"Node Count\"\n        description=\"The number of nodes to use for this job\"\n        required={false}\n      />\n      <FormikInput\n        name=\"coresPerNode\"\n        label=\"Cores Per Node\"\n        description=\"The number of cores to use per node\"\n        required={false}\n      />\n      <FormikInput\n        name=\"memoryMB\"\n        label=\"Memory, in Megabytes\"\n        description=\"The amount of memory to use per node in megabytes\"\n        required={false}\n      />\n      <FormikInput\n        name=\"maxMinutes\"\n        label=\"Maximum Minutes\"\n        description=\"The maximum amount of time in minutes for this job\"\n        required={false}\n      />\n    </Collapse>\n  );\n};\n\nexport const ExecOptions: React.FC = () => {\n  const { values } = useFormikContext();\n\n  const isBatch = useMemo(\n    () => (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch,\n    [values]\n  );\n\n  return (\n    <div>\n      <h2>Execution Options</h2>\n      <SystemSelector />\n      {isBatch && <ExecSystemQueueOptions />}\n      {/* <MPIOptions /> */}\n      {/* <ExecSystemDirs /> */}\n    </div>\n  );\n};\n\nexport const ExecOptionsSummary: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const { isMpi, mpiCmd, cmdPrefix } = job;\n\n  const { computedSystem, computedQueue, computedJobType } = useMemo(() => {\n    const { execSystemLogicalQueue, execSystemId, jobType } = job;\n    const computedSystem = execSystemId ?? computeDefaultSystem(app)?.systemId;\n    const computedQueue =\n      execSystemLogicalQueue ?? computeDefaultQueue(job, app, systems)?.queue;\n    const computedJobType =\n      jobType ?? computeDefaultJobType(job, app, systems)?.jobType;\n    return {\n      computedSystem,\n      computedQueue,\n      computedJobType,\n    };\n  }, [job, app, systems]);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={computedSystem}\n        error=\"An execution system is required\"\n        key=\"execution-system-id-summary\"\n      />\n      {computedJobType === Apps.JobTypeEnum.Batch && (\n        <StepSummaryField\n          field={computedQueue}\n          error=\"A logical queue is required\"\n          key=\"execution-system-queue-summary\"\n        />\n      )}\n      <StepSummaryField\n        field={`${\n          isMpi\n            ? `MPI Command: ${mpiCmd ?? \"system default\"}`\n            : `Command Prefix: ${cmdPrefix ?? \"system default\"}`\n        }`}\n        key=\"execution-mpi-summary\"\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object({\n  execSystemId: Yup.string(),\n  execSystemLogicalQueue: Yup.string(),\n  execSystemExecDir: Yup.string(),\n  execSystemInputDir: Yup.string(),\n  execSystemOutputDir: Yup.string(),\n  jobType: Yup.string(),\n  nodeCount: Yup.number(),\n  coresPerNode: Yup.number(),\n  memoryMB: Yup.number(),\n  maxMinutes: Yup.number(),\n  isMpi: Yup.boolean(),\n  mpiCmd: Yup.string(),\n  cmdPrefix: Yup.string(),\n});\n\ntype QueueErrors = {\n  nodeCount?: string;\n  coresPerNode?: string;\n  memoryMB?: string;\n  maxMinutes?: string;\n  execSystemId?: string;\n  execSystemLogicalQueue?: string;\n};\n\nconst validateThunk = ({ app, systems }: JobLauncherProviderParams) => {\n  return (values: Partial<Jobs.ReqSubmitJob>) => {\n    const {\n      execSystemId,\n      execSystemLogicalQueue,\n      nodeCount,\n      coresPerNode,\n      memoryMB,\n      maxMinutes,\n      jobType,\n    } = values;\n    const errors: QueueErrors = {};\n\n    const validation = validateExecSystem(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    if (validation === ValidateExecSystemResult.ErrorNoExecSystem) {\n      errors.execSystemId = `This app does not have a default execution system. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNotFound) {\n      errors.execSystemId = `The specified exec system cannot be found`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNoQueues) {\n      errors.execSystemId = `The specified exec system is not capable of batch jobs`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorNoQueue) {\n      errors.execSystemLogicalQueue = `Neither the application nor the selected system specifies a default queue. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorQueueNotFound) {\n      errors.execSystemLogicalQueue = `The specified queue cannot be found on the selected system`;\n    }\n\n    // Skip queue validation if the job is a FORK job\n    if (\n      jobType === Apps.JobTypeEnum.Fork ||\n      computeDefaultJobType(values as Partial<Jobs.ReqSubmitJob>, app, systems)\n        ?.jobType === Apps.JobTypeEnum.Fork\n    ) {\n      return errors;\n    }\n\n    const computedExecSystem = computeDefaultSystem(app);\n    const computedLogicalQueue = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const selectedSystem = systems.find(\n      (system) => system.id === (execSystemId ?? computedExecSystem.systemId)\n    );\n\n    if (!selectedSystem?.batchLogicalQueues?.length) {\n      errors.execSystemLogicalQueue = `The selected system does not have any batch logical queues`;\n      return errors;\n    }\n\n    const queue = selectedSystem?.batchLogicalQueues?.find(\n      (queue) =>\n        queue.name === (execSystemLogicalQueue ?? computedLogicalQueue?.queue)\n    );\n    if (!queue) {\n      errors.execSystemLogicalQueue = `The specified queue does not exist on the selected execution system`;\n      return errors;\n    }\n\n    if (!!nodeCount) {\n      if (queue?.maxNodeCount && nodeCount > queue?.maxNodeCount) {\n        errors.nodeCount = `The maximum number of nodes for this queue is ${queue?.maxNodeCount}`;\n      }\n      if (queue?.minNodeCount && nodeCount < queue?.minNodeCount) {\n        errors.nodeCount = `The minimum number of nodes for this queue is ${queue?.minNodeCount}`;\n      }\n    }\n    if (!!coresPerNode) {\n      if (queue?.maxCoresPerNode && coresPerNode > queue?.maxCoresPerNode) {\n        errors.coresPerNode = `The maximum number of cores per node for this queue is ${queue?.maxCoresPerNode}`;\n      }\n      if (queue?.minCoresPerNode && coresPerNode < queue?.minCoresPerNode) {\n        errors.coresPerNode = `The minimum number of cores per node for this queue is ${queue?.minCoresPerNode}`;\n      }\n    }\n    if (!!memoryMB) {\n      if (queue?.maxMemoryMB && memoryMB > queue?.maxMemoryMB) {\n        errors.memoryMB = `The maximum amount of memory for this queue is ${queue?.maxMemoryMB} megabytes`;\n      }\n      if (queue?.minMemoryMB && memoryMB < queue?.minMemoryMB) {\n        errors.memoryMB = `The minimum amount of memory for this queue is ${queue?.minMemoryMB} megabytes`;\n      }\n    }\n    if (!!maxMinutes) {\n      if (queue?.maxMinutes && maxMinutes > queue?.maxMinutes) {\n        errors.maxMinutes = `The maximum number of minutes for a job on this queue is ${queue?.maxMinutes}`;\n      }\n      if (queue?.minMinutes && maxMinutes < queue?.minMinutes) {\n        errors.maxMinutes = `The minimum number of minutes for a job on this queue is ${queue?.minMinutes}`;\n      }\n    }\n    return errors;\n  };\n};\n\nconst generateInitialValues = ({\n  job,\n  app,\n  systems,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  execSystemId: job.execSystemId,\n  execSystemLogicalQueue: job.execSystemLogicalQueue,\n  jobType: job.jobType,\n  execSystemExecDir: job.execSystemExecDir,\n  execSystemInputDir: job.execSystemInputDir,\n  execSystemOutputDir: job.execSystemOutputDir,\n  nodeCount: job.nodeCount,\n  coresPerNode: job.coresPerNode,\n  memoryMB: job.memoryMB,\n  maxMinutes: job.maxMinutes,\n  isMpi: job.isMpi,\n  mpiCmd: job.mpiCmd,\n  cmdPrefix: job.cmdPrefix,\n});\n\nconst step: JobStep = {\n  id: \"execution\",\n  name: \"Execution Options\",\n  render: <ExecOptions />,\n  summary: <ExecOptionsSummary />,\n  generateInitialValues,\n  validateThunk,\n  validationSchema,\n};\n\nexport default step;\n","import React, { useMemo } from \"react\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, FieldArrayRenderProps } from \"formik\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { FormikCheck } from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { JobStep } from \"..\";\nimport * as Yup from \"yup\";\n\ntype ArgFieldProps = {\n  index: number;\n  name: string;\n  argType: string;\n  arrayHelpers: FieldArrayRenderProps;\n  inputMode?: Apps.ArgInputModeEnum;\n};\n\nexport const ArgField: React.FC<ArgFieldProps> = ({\n  index,\n  name,\n  argType,\n  arrayHelpers,\n  inputMode,\n}) => {\n  const [field] = useField(`${name}.name`);\n  const argName = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`${argType}.${index}`}\n      title={!!argName && argName.length ? argName : argType}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`${name}.name`}\n        required={true}\n        label=\"Name\"\n        disabled={!!inputMode}\n        description={`The name for this ${argType} ${\n          !!inputMode\n            ? \"is defined in the application and cannot be changed\"\n            : \"\"\n        }`}\n      />\n      <FormikInput\n        name={`${name}.arg`}\n        required={true}\n        label=\"Value\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A value for this ${argType}`}\n      />\n      <FormikInput\n        name={`${name}.description`}\n        required={false}\n        label=\"Description\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A description for this ${argType}`}\n      />\n      <FormikCheck\n        name={`${name}.include`}\n        required={false}\n        label=\"Include\"\n        disabled={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n        }\n        description={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n            ? `This ${argType} must be included`\n            : `If checked, this ${argType} will be included`\n        }\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\ntype ArgsFieldArrayProps = {\n  argSpecs: Array<Apps.AppArgSpec>;\n  name: string;\n  argType: string;\n};\n\nexport const ArgsFieldArray: React.FC<ArgsFieldArrayProps> = ({\n  argSpecs,\n  name,\n  argType,\n}) => {\n  const [field] = useField(name);\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className={fieldArrayStyles.array}>\n          <h3>{`${argType}s`}</h3>\n          <div className={fieldArrayStyles[\"array-group\"]}>\n            {args.map((arg, index) => {\n              const inputMode = arg.name\n                ? getArgMode(arg.name, argSpecs)\n                : undefined;\n              return (\n                <ArgField\n                  index={index}\n                  arrayHelpers={arrayHelpers}\n                  name={`${name}.${index}`}\n                  argType={argType}\n                  inputMode={inputMode}\n                />\n              );\n            })}\n          </div>\n          <Button\n            onClick={() =>\n              arrayHelpers.push({\n                include: true,\n              })\n            }\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const argsSchema = Yup.array(\n  Yup.object({\n    name: Yup.string(),\n    description: Yup.string(),\n    include: Yup.boolean(),\n    arg: Yup.string().min(1).required(\"The argument cannot be blank\"),\n  })\n);\n\nexport const Args: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const appArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.appArgs ?? [],\n    [app]\n  );\n  const containerArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.containerArgs ?? [],\n    [app]\n  );\n\n  return (\n    <div>\n      <h2>Arguments</h2>\n      <ArgsFieldArray\n        name=\"parameterSet.appArgs\"\n        argType=\"App Argument\"\n        argSpecs={appArgSpecs}\n      />\n      <ArgsFieldArray\n        name=\"parameterSet.containerArgs\"\n        argType=\"Container Argument\"\n        argSpecs={containerArgSpecs}\n      />\n    </div>\n  );\n};\n\nexport const assembleArgSpec = (argSpecs: Array<Jobs.JobArgSpec>) =>\n  argSpecs.reduce(\n    (previous, current) =>\n      `${previous}${current.include ? ` ${current.arg}` : ``}`,\n    \"\"\n  );\n\nexport const ArgsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const appArgs = job.parameterSet?.appArgs ?? [];\n  // if (!job.parameterSet?.appArgs?.find((arg) => arg.name === \"arg2\")) {\n  //   job.parameterSet?.appArgs?.push({\n  //     name: \"arg2\",\n  //     arg: \"arg2\",\n  //     include: true,\n  //   });\n  // }\n\n  const containerArgs = job.parameterSet?.containerArgs ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`App: ${assembleArgSpec(appArgs)}`}\n        key={`app-args-summary`}\n      />\n      <StepSummaryField\n        field={`Container: ${assembleArgSpec(containerArgs)}`}\n        key={`container-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    appArgs: argsSchema,\n    containerArgs: argsSchema,\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"args\",\n  name: \"Arguments\",\n  render: <Args />,\n  summary: <ArgsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      appArgs: job.parameterSet?.appArgs,\n      containerArgs: job.parameterSet?.containerArgs,\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useCallback, useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, useFormikContext } from \"formik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { ArgField, argsSchema, assembleArgSpec } from \"./AppArgs\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport styles from \"./SchedulerOptions.module.scss\";\nimport { JobStep } from \"..\";\n\nconst findSchedulerProfile = (values: Partial<Jobs.ReqSubmitJob>) => {\n  // Look at current schedulerOptions\n  const argSpecs = values.parameterSet?.schedulerOptions ?? [];\n  // Add chargeProject\n  if (!argSpecs.find((argSpec) => argSpec.name === \"chargeProject\")) {\n    values.parameterSet?.schedulerOptions?.push({\n      name: \"chargeProject\",\n      description: \"Charge project\",\n      include: true,\n      arg: `-A BCS23003`,\n    });\n  }\n  // Find any scheduler option that has --tapis-profile set\n  if (!argSpecs.find((argSpec) => argSpec.name === \"profile\")) {\n    values.parameterSet?.schedulerOptions?.push({\n      name: \"profile\",\n      description: \"Tapis profile\",\n      include: true,\n      arg: `--tapis-profile tacc`,\n    });\n  }\n\n  // Find any scheduler option that has --tapis-profile set\n  const profile = argSpecs.find((argSpec) =>\n    argSpec.arg?.includes(\"--tapis-profile\")\n  );\n  if (profile) {\n    // Return the name of the profile after --tapis-profile\n    const args = profile.arg?.split(\" \");\n    if (args && args.length >= 2) {\n      return args[1];\n    }\n  }\n  return undefined;\n};\n\nconst SchedulerProfiles: React.FC = () => {\n  const { schedulerProfiles } = useJobLauncher();\n  const { values, setValues } = useFormikContext();\n  const setSchedulerProfile = useCallback(\n    (newProfile: Jobs.JobArgSpec) => {\n      const argSpecs =\n        (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.schedulerOptions ??\n        [];\n      setValues({\n        parameterSet: {\n          schedulerOptions: [\n            newProfile,\n            ...argSpecs.filter(\n              (existing) => !existing.arg?.includes(\"--tapis-profile\")\n            ),\n          ],\n        },\n      });\n    },\n    [values, setValues]\n  );\n  const currentProfile = useMemo(\n    () => findSchedulerProfile(values as Partial<Jobs.ReqSubmitJob>),\n    [values]\n  );\n\n  return (\n    <div className={fieldArrayStyles.array}>\n      <h3>Scheduler Profiles</h3>\n      {schedulerProfiles.map(\n        ({ name, description, hiddenOptions, owner, tenant }) => (\n          <Collapse\n            key={`scheduler-profiles-${name}`}\n            className={fieldArrayStyles[\"array-group\"]}\n            title={`${name} ${name === currentProfile ? \"(selected)\" : \"\"}`}\n          >\n            <div className={styles[\"scheduler-option\"]}>\n              <div>{description}</div>\n              <DescriptionList\n                data={{\n                  hiddenOptions,\n                  owner,\n                  tenant,\n                }}\n                className={styles[\"scheduler-option-list\"]}\n              />\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() =>\n                setSchedulerProfile({\n                  name: `${name} Scheduler Profile`,\n                  description,\n                  include: true,\n                  arg: `--tapis-profile ${name}`,\n                })\n              }\n              disabled={name === currentProfile}\n            >\n              Use This Profile\n            </Button>\n          </Collapse>\n        )\n      )}\n    </div>\n  );\n};\n\nconst SchedulerOptionArray: React.FC = () => {\n  const { app } = useJobLauncher();\n  const [field] = useField(\"parameterSet.schedulerOptions\");\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n\n  const schedulerOptionSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.schedulerOptions ?? [],\n    [app]\n  );\n  return (\n    <FieldArray\n      name=\"parameterSet.schedulerOptions\"\n      render={(arrayHelpers) => (\n        <>\n          <div className={fieldArrayStyles.array}>\n            <h3>{`Scheduler Arguments`}</h3>\n            <div className={fieldArrayStyles[\"array-group\"]}>\n              {args.map((arg, index) => {\n                const inputMode = arg.name\n                  ? getArgMode(arg.name, schedulerOptionSpecs)\n                  : undefined;\n                return (\n                  <ArgField\n                    index={index}\n                    arrayHelpers={arrayHelpers}\n                    name={`parameterSet.schedulerOptions.${index}`}\n                    argType={\"scheduler option\"}\n                    inputMode={inputMode}\n                  />\n                );\n              })}\n            </div>\n            <Button\n              onClick={() =>\n                arrayHelpers.push({\n                  name: \"\",\n                  description: \"\",\n                  include: true,\n                  arg: \"\",\n                })\n              }\n              size=\"sm\"\n            >\n              + Add\n            </Button>\n          </div>\n          <SchedulerProfiles />\n        </>\n      )}\n    />\n  );\n};\n\nexport const SchedulerOptions: React.FC = () => {\n  return (\n    <div>\n      <h2>Scheduler Options</h2>\n      <SchedulerOptionArray />\n    </div>\n  );\n};\n\nexport const SchedulerOptionsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const schedulerOptions = job.parameterSet?.schedulerOptions ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`Scheduler Profile: ${\n          findSchedulerProfile(job) ?? \"none selected\"\n        }`}\n        key={`scheduler-profile-summary`}\n      />\n      <StepSummaryField\n        field={`Scheduler Args: ${assembleArgSpec(schedulerOptions)}`}\n        key={`scheduler-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"schedulerOptions\",\n  name: \"Scheduler Options\",\n  render: <SchedulerOptions />,\n  summary: <SchedulerOptionsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import { Jobs } from '@tapis/tapis-typescript';\n\nexport const jobRequiredFieldsComplete = (job: Partial<Jobs.ReqSubmitJob>) => {\n  return !!job.name && !!job.appId && !!job.appVersion;\n};\n","import { useCallback } from \"react\";\nimport { useJobLauncher } from \"../components\";\nimport { JSONDisplay } from \"cookbooks-ui/_common\";\nimport { fileInputsComplete } from \"tapis-api/utils/jobFileInputs\";\nimport { fileInputArraysComplete } from \"tapis-api/utils/jobFileInputArrays\";\nimport { jobRequiredFieldsComplete } from \"tapis-api/utils/jobRequiredFields\";\nimport {\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from \"tapis-api/utils/jobExecSystem\";\nimport { StepSummaryField } from \"../components\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { useSubmit } from \"tapis-hooks/jobs\";\nimport { JobStep } from \"..\";\nimport { Button } from \"reactstrap\";\nimport arrayStyles from \"../FieldArray.module.scss\";\n\nexport const JobSubmit: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const isComplete =\n    validateExecSystem(job, app, systems) ===\n      ValidateExecSystemResult.Complete &&\n    jobRequiredFieldsComplete(job) &&\n    fileInputsComplete(app, job.fileInputs ?? []) &&\n    fileInputArraysComplete(app, job.fileInputArrays ?? []);\n\n  const { isLoading, error, isSuccess, submit, data } = useSubmit(\n    app.id!,\n    app.version!\n  );\n  const onSubmit = useCallback(() => {\n    submit(job as Jobs.ReqSubmitJob);\n  }, [submit, job]);\n  const summary = isComplete\n    ? isSuccess\n      ? `Successfully submitted job ${data?.result?.uuid ?? \"\"}`\n      : `The job is ready for submission`\n    : undefined;\n  return (\n    <div>\n      <h2>Job Submission</h2>\n      <div className={arrayStyles.array}>\n        <StepSummaryField\n          field={summary}\n          error=\"All required fields must be completed before the job can be submitted\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? ` ` : \"\"}\n          reverse={true}\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || !isComplete || isSuccess}\n            onClick={onSubmit}\n          >\n            Submit Job\n          </Button>\n        </SubmitWrapper>\n      </div>\n      <div>\n        This is a preview of the json job submission data. You may copy it for\n        future reference.\n      </div>\n      <JSONDisplay json={job} />\n    </div>\n  );\n};\n\nexport const JobSubmitSummary: React.FC = () => {\n  const { app, job, systems } = useJobLauncher();\n  const isComplete =\n    validateExecSystem(job, app, systems) &&\n    jobRequiredFieldsComplete(job) &&\n    fileInputsComplete(app, job.fileInputs ?? []) &&\n    fileInputArraysComplete(app, job.fileInputArrays ?? []);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={isComplete ? \"The job is ready for submission\" : undefined}\n        error=\"All required fields must be completed before the job can be submitted\"\n        key=\"job-submit-summary\"\n      />\n    </div>\n  );\n};\n\nconst step: JobStep = {\n  id: \"jobSubmit\",\n  name: \"Job Submission\",\n  render: <JobSubmit />,\n  summary: <JobSubmitSummary />,\n  validationSchema: {},\n  generateInitialValues: () => ({}),\n};\n\nexport default step;\n","import JobStart from \"./JobStart\";\nimport ExecOptions from \"./ExecOptions\";\nimport AppArgs from \"./AppArgs\";\nimport SchedulerOptions from \"./SchedulerOptions\";\nimport JobSubmit from \"./JobSubmit\";\n\nconst jobSteps = [\n  JobStart,\n  ExecOptions,\n  // FileInputs,\n  // FileInputArrays,\n  AppArgs,\n  // EnvVariables,\n  SchedulerOptions,\n  // Archive,\n  JobSubmit,\n];\n\nexport default jobSteps;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useQuery } from \"react-query\";\n\ntype ReadmeLink = {\n  gitUrl: string;\n  gitRef: string;\n  rawReadmeUrl: string;\n};\n\ntype ReadmeViewerProps = {\n  id: string | undefined;\n  version: string | undefined;\n  notes: object | undefined;\n};\n\nconst ReadmeViewer = ({ id, version, notes }: ReadmeViewerProps) => {\n  const { gitUrl, gitRef, rawReadmeUrl } = notes as ReadmeLink;\n  const { data, isLoading, error } = useQuery(\n    [\"readme\", gitUrl, gitRef, rawReadmeUrl],\n    async () => {\n      const response = await fetch(rawReadmeUrl);\n      return response.text();\n    }\n  );\n  if (isLoading) return <div>Loading...</div>;\n  if (!data) return <div>No readme found</div>;\n\n  return (\n    <div style={{ maxWidth: \"800px\" }}>\n      <ReactMarkdown>{data}</ReactMarkdown>;\n    </div>\n  );\n};\n\nexport default ReadmeViewer;\n","import React, { useCallback } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { WizardStep } from \"cookbooks-ui/_wrappers/Wizard\";\nimport { Jobs, Systems } from \"@tapis/tapis-typescript\";\nimport { useJobLauncher } from \"./components\";\nimport { useSubmit } from \"tapis-hooks/jobs\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport arrayStyles from \"./FieldArray.module.scss\";\nimport { Button } from \"reactstrap\";\nimport ReadmeViewer from \"tapis-app/Cookbook/Readme\";\nimport { LayoutHeader } from \"cookbooks-ui/_common\";\n\nconst SignupSchema = Yup.object().shape({});\n\ntype WizardProps<T> = {\n  steps: Array<WizardStep<T>>;\n  memo?: any;\n  formSubmit: (values: Partial<T>) => void;\n};\n\nexport function JupyterNotebookLauncher<T>({\n  steps,\n  memo,\n  formSubmit,\n}: WizardProps<T>) {\n  const { job, app, systems } = useJobLauncher();\n  const { isLoading, error, isSuccess, submit } = useSubmit(\n    app.id!,\n    app.version!\n  );\n\n  const system = systems.find(\n    (sys) => sys.systemType === Systems.SystemTypeEnum.Linux\n  );\n  job.execSystemId = system?.id;\n  if (job.parameterSet?.schedulerOptions?.length === 0) {\n    job.parameterSet?.schedulerOptions?.push({\n      arg: \"-A BCS23003\",\n      name: \"chargeProject\",\n      include: true,\n      description: \"Project to charge\",\n    });\n    job.parameterSet?.schedulerOptions?.push({\n      arg: \"--tapis-profile tacc\",\n      name: \"profile\",\n      include: true,\n      description: \"The tapis-profile value set in execution system.\",\n    });\n  }\n\n  const onSubmit = useCallback(\n    (values) => {\n      submit(job as Jobs.ReqSubmitJob);\n    },\n    [submit, job]\n  );\n\n  return system ? (\n    <div>\n      <LayoutHeader type={\"sub-header\"}>\n        {app.id} v{app.version}\n      </LayoutHeader>\n      <LayoutHeader type={\"sub-header\"}>\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? ` ` : \"\"}\n        >\n          <Formik\n            initialValues={\n              {\n                // url: \"\",\n              }\n            }\n            validationSchema={SignupSchema}\n            onSubmit={(values) => {\n              onSubmit(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                {/* <Field name=\"url\" fullWidth label=\"Photo URL\" style={mystyle} />\n                {errors.url && touched.url ? <div>{errors.url}</div> : null} */}\n                <Button color=\"primary\" type=\"submit\">\n                  Run\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </SubmitWrapper>\n      </LayoutHeader>\n      <ReadmeViewer id={app.id} version={app.version} notes={app.notes} />\n    </div>\n  ) : (\n    <>\n      <p> No Linux system found. Please add a Linux System</p>\n    </>\n  );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { WizardStep } from \"cookbooks-ui/_wrappers/Wizard\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { useDetail as useAppDetail } from \"tapis-hooks/apps\";\nimport generateJobDefaults from \"tapis-api/utils/jobDefaults\";\nimport {\n  useList as useSystemsList,\n  useSchedulerProfiles,\n} from \"tapis-hooks/systems\";\nimport { useJobLauncher, JobLauncherProvider } from \"./components\";\nimport { JobStep } from \".\";\nimport jobSteps from \"./steps\";\nimport { JupyterNotebookLauncher } from \"./JupyterNotebookLauncher\";\n\ntype JobLauncherWizardProps = {\n  appId: string;\n  appVersion: string;\n};\n\nexport const JobLauncherWizardRender: React.FC<{ jobSteps: Array<JobStep> }> =\n  ({ jobSteps }) => {\n    const { add, job, app, systems } = useJobLauncher();\n\n    const formSubmit = useCallback(\n      (value: Partial<Jobs.ReqSubmitJob>) => {\n        if (value.jobType === Apps.JobTypeEnum.Fork) {\n          value.execSystemLogicalQueue = undefined;\n        }\n        if (value.isMpi) {\n          value.cmdPrefix = undefined;\n        } else {\n          value.mpiCmd = undefined;\n        }\n        if (value.parameterSet) {\n          value.parameterSet = {\n            ...job.parameterSet,\n            ...value.parameterSet,\n          };\n        }\n        add(value);\n      },\n      [add, job]\n    );\n\n    // Map Array of JobSteps into an array of WizardSteps\n    const steps: Array<WizardStep<Jobs.ReqSubmitJob>> = useMemo(() => {\n      return jobSteps.map((jobStep) => {\n        const { generateInitialValues, validateThunk, ...stepProps } = jobStep;\n        return {\n          initialValues: generateInitialValues({ job, app, systems }),\n          // generate a validation function from the JobStep's validateThunk, given the current hook values\n          validate: validateThunk\n            ? validateThunk({ job, app, systems })\n            : undefined,\n          ...stepProps,\n        };\n      });\n    }, [app, job, systems, jobSteps]);\n\n    return (\n      <JupyterNotebookLauncher\n        steps={steps}\n        memo={`${app.id}${app.version}`}\n        formSubmit={formSubmit}\n      />\n    );\n  };\n\nconst JobLauncherWizard: React.FC<JobLauncherWizardProps> = ({\n  appId,\n  appVersion,\n}) => {\n  const { data, isLoading, error } = useAppDetail(\n    { appId, appVersion },\n    { refetchOnWindowFocus: false }\n  );\n  const {\n    data: systemsData,\n    isLoading: systemsIsLoading,\n    error: systemsError,\n  } = useSystemsList(\n    { select: \"allAttributes\" },\n    { refetchOnWindowFocus: false }\n  );\n  const {\n    data: schedulerProfilesData,\n    isLoading: schedulerProfilesIsLoading,\n    error: schedulerProfilesError,\n  } = useSchedulerProfiles({ refetchOnWindowFocus: false });\n  const app = data?.result;\n  const systems = useMemo(() => systemsData?.result ?? [], [systemsData]);\n  const schedulerProfiles = useMemo(\n    () => schedulerProfilesData?.result ?? [],\n    [schedulerProfilesData]\n  );\n  const defaultValues = useMemo(\n    () => generateJobDefaults({ app, systems }),\n    [app, systems]\n  );\n\n  return (\n    <QueryWrapper\n      isLoading={isLoading || systemsIsLoading || schedulerProfilesIsLoading}\n      error={error || systemsError || schedulerProfilesError}\n    >\n      {app && (\n        <JobLauncherProvider\n          value={{ app, systems, defaultValues, schedulerProfiles }}\n        >\n          <JobLauncherWizardRender jobSteps={jobSteps} />\n        </JobLauncherProvider>\n      )}\n    </QueryWrapper>\n  );\n};\n\nexport default JobLauncherWizard;\n","import React from \"react\";\nimport { JobLauncher } from \"stories-ui/components/jobs\";\nimport { PageLayout, LayoutHeader } from \"cookbooks-ui/_common\";\n\nconst Layout: React.FC<{ appId: string; appVersion: string }> = ({\n  appId,\n  appVersion,\n}) => {\n  const body = (\n    <div style={{ flex: 1 }}>\n      <JobLauncher appId={appId} appVersion={appVersion} />\n    </div>\n  );\n\n  return <PageLayout right={body} />;\n};\n\nexport default React.memo(Layout);\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport JobLauncher from \"../JobLauncher\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select an cookbook template from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:appId/:appVersion`}\n        render={({\n          match: {\n            params: { appVersion, appId },\n          },\n        }: RouteComponentProps<{\n          appId: string;\n          appVersion: string;\n        }>) => <JobLauncher appId={appId} appVersion={appVersion} />}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { AppsNav } from \"../_components\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\n\nimport { Router } from \"../_Router\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Apps</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <AppsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { useLogin } from \"tapis-hooks/authenticator\";\nimport { useTapisConfig } from \"tapis-hooks/context\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst Login: React.FC = () => {\n  const { login, isLoading, error } = useLogin();\n  const { accessToken } = useTapisConfig();\n\n  const onSubmit = ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => login(username, password);\n\n  const loginSchema = Yup.object({\n    username: Yup.string().required(),\n    password: Yup.string().required(),\n  });\n\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormikInput\n          name=\"username\"\n          label=\"Username\"\n          required={true}\n          description=\"Your TAPIS username\"\n        />\n        <FormikInput\n          name=\"password\"\n          label=\"Password\"\n          required={true}\n          description=\"Your TAPIS password\"\n          type=\"password\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={accessToken && \"Successfully logged in\"}\n        >\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading || accessToken != null}\n          >\n            Log In\n          </Button>\n        </SubmitWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default Login;\n","import Login from './Login';\n\nexport default Login;\n","import React from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport { Login as TapisLogin } from \"../_components\";\nimport { SectionHeader } from \"cookbooks-ui/_common\";\nimport { useTapisConfig } from \"tapis-hooks\";\n\nconst Layout: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  let location = useLocation<{ from: Location }>();\n  let { from } = location.state || { from: { pathname: \"/\" } };\n\n  if (accessToken?.access_token) {\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <>\n      <SectionHeader>Login</SectionHeader>\n      <div className=\"container\">\n        <TapisLogin />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * A form for adding a new app:\n *\n *  It has one Input field for the app link.\n *\n */\nimport { Apps } from \"@tapis/tapis-typescript\";\nimport { JSONDisplay } from \"cookbooks-ui/_common\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport styles from \"./AppsAdd.module.scss\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { useCreate } from \"tapis-hooks/apps\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { set } from \"js-cookie\";\n\nexport const AppsAdd: React.FC = () => {\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n\n  const [file, setFile] = useState<File | null>(null);\n  const [app, setApp] = useState<Apps.ReqPostApp | null>(null);\n\n  useEffect(() => {\n    const readerFile = async () => {\n      if (file) {\n        const contents = await file.text();\n        const data = JSON.parse(contents) as Apps.ReqPostApp;\n        setApp(data);\n      }\n    };\n    readerFile();\n  }, [file]);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"file changed\");\n    if (e.target.files) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const handleFileClick = (\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>\n  ) => {\n    const element = e.target as HTMLInputElement;\n    element.value = \"\";\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (app !== null) {\n      submit(app);\n    }\n  };\n  const inputFile = useRef(null);\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <h2> Create new application </h2>\n        <h3> Upload a JSON file with the application specification </h3>\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Input\n              type=\"file\"\n              name=\"file\"\n              id=\"file\"\n              ref={inputFile}\n              onChange={(e) => handleFileChange(e)}\n              onClick={(e) => handleFileClick(e)}\n            />\n          </FormGroup>\n\n          <SubmitWrapper\n            isLoading={isLoading}\n            error={error}\n            success={isSuccess ? `Application created` : \"\"}\n          >\n            <Button\n              className={styles.submit}\n              color=\"primary\"\n              disabled={isLoading || isSuccess || !file}\n            >\n              Submit\n            </Button>\n          </SubmitWrapper>\n        </Form>\n      </div>\n      <div>\n        {app !== null && app !== undefined ? (\n          <JSONDisplay json={app} />\n        ) : (\n          <p>Load the file to see the app specification </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { SectionHeader, LoadingSpinner, Icon } from \"cookbooks-ui/_common\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardText,\n} from \"reactstrap\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useList as useSystemsList } from \"tapis-hooks/systems\";\nimport { useList as useJobsList } from \"tapis-hooks/jobs\";\nimport { useList as useAppsList } from \"tapis-hooks/apps\";\nimport styles from \"./Dashboard.module.scss\";\nimport \"./Dashboard.scss\";\nimport CookbookCreator from \"tapis-app/Cookbook/Creator\";\nimport Apps from \"tapis-app/Apps\";\nimport { AppsAdd } from \"tapis-app/Apps/_components/AppsAdd/AppsAdd\";\n\ntype DashboardCardProps = {\n  icon: string;\n  link: string;\n  counter: string;\n  name: string;\n  text: string;\n  loading: boolean;\n};\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  icon,\n  link,\n  counter,\n  name,\n  text,\n  loading,\n}) => {\n  return (\n    <Card className={styles.card}>\n      <CardHeader>\n        <div className={styles[\"card-header\"]}>\n          <div>\n            <Icon name={icon} className=\"dashboard__card-icon\" />\n          </div>\n          <div>{name}</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          {loading ? (\n            <LoadingSpinner placement=\"inline\" />\n          ) : (\n            <div>{counter}</div>\n          )}\n        </CardTitle>\n        <CardText>{text}</CardText>\n      </CardBody>\n      <CardFooter className={styles[\"card-footer\"]}>\n        <Link to={link}>Go to {name}</Link>\n        <Icon name=\"push-right\" />\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const { accessToken, claims } = useTapisConfig();\n\n  return (\n    <div>\n      <div className={styles.cards}>\n        {accessToken ? (\n          <>\n            <AppsAdd />\n          </>\n        ) : (\n          <Card>\n            <CardHeader>\n              <div className={styles[\"card-header\"]}>\n                <div>\n                  <Icon name=\"user\" className=\"dashboard__card-icon\" />\n                </div>\n                <div>You are not logged in</div>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle>Please log in to use TAPIS</CardTitle>\n            </CardBody>\n            <CardFooter className={styles[\"card-footer\"]}>\n              <Link to=\"/login\">Proceed to login</Link>\n              <Icon name=\"push-right\" />\n            </CardFooter>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/jobs\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst JobsNav: React.FC = () => {\n  const { data, isLoading, error } = useList();\n  const { url } = useRouteMatch();\n  const jobsList: Array<Jobs.JobListDTO> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {jobsList.length ? (\n          jobsList.map((job: Jobs.JobListDTO) => (\n            <NavItem to={`${url}/${job.uuid}`} icon=\"jobs\" key={job.uuid}>\n              {`${job.name} - (${job.status})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No jobs found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default JobsNav;\n","import JobsNav from './JobsNav';\n\nexport default JobsNav;\n","import React from \"react\";\nimport { useDetails } from \"tapis-hooks/jobs\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst JobDetail: React.FC<{ jobUuid: string }> = ({ jobUuid }) => {\n  const { data, isLoading, error } = useDetails(jobUuid);\n  const job: Jobs.Job | undefined = data?.result;\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{job?.name}</h3>\n      <h5>{job?.uuid}</h5>\n      {job && <DescriptionList data={job} />}\n    </QueryWrapper>\n  );\n};\n\nexport default JobDetail;\n","import React, { useContext } from \"react\";\nimport { Jobs, Apps, Systems } from \"@tapis/tapis-typescript\";\nimport withBuilder from \"cookbooks-ui/utils/withBuilder\";\n\ntype JobLauncherContextType = {\n  app: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n  schedulerProfiles: Array<Systems.SchedulerProfile>;\n};\n\nconst JobLauncherContext = React.createContext<JobLauncherContextType>({\n  app: {},\n  systems: [],\n  schedulerProfiles: [],\n});\n\nconst { useBuilderContext, Provider } = withBuilder<Jobs.ReqSubmitJob>();\n\nexport const useJobLauncher = () => {\n  const { data, add, set, clear } = useBuilderContext();\n  const { app, systems, schedulerProfiles } = useContext(JobLauncherContext);\n  return {\n    job: data,\n    add,\n    set,\n    clear,\n    app,\n    systems,\n    schedulerProfiles,\n  };\n};\n\ntype JobLauncherProviderProps = {\n  value: {\n    defaultValues: Partial<Jobs.ReqSubmitJob>;\n    app: Apps.TapisApp;\n    systems: Array<Systems.TapisSystem>;\n    schedulerProfiles: Array<Systems.SchedulerProfile>;\n  };\n};\n\nexport const JobLauncherProvider: React.FC<\n  React.PropsWithChildren<JobLauncherProviderProps>\n> = ({ value, children }) => {\n  const { app, systems, defaultValues, schedulerProfiles } = value;\n  return (\n    <JobLauncherContext.Provider value={{ app, systems, schedulerProfiles }}>\n      {Provider({ value: defaultValues, children })}\n    </JobLauncherContext.Provider>\n  );\n};\n\nexport default useJobLauncher;\n","import { StepSummaryField, useJobLauncher } from \"../components\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport { JobStep, JobLauncherProviderParams } from \"..\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\n\nexport const JobStart: React.FC = () => {\n  const { app } = useJobLauncher();\n  return (\n    <div>\n      <h2>\n        Launching {app.id} v{app.version}\n      </h2>\n      <FormikInput\n        name=\"name\"\n        required={true}\n        label=\"Name\"\n        description=\"A name for this job\"\n      />\n      <FormikInput\n        name=\"description\"\n        required={false}\n        label=\"Description\"\n        description=\"A description of this job\"\n      />\n    </div>\n  );\n};\n\nexport const JobStartSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const { name, description, appId, appVersion } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={name}\n        error=\"A job name is required\"\n        key=\"job-start-name-summary\"\n      />\n      <StepSummaryField\n        field={description}\n        key=\"job-start-description-summary\"\n      />\n      <div>\n        <i>\n          Application: {appId} v{appVersion}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst generateInitialValues = ({\n  job,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  name: job.name,\n  description: job.description,\n});\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required().min(1).max(64),\n  description: Yup.string(),\n});\n\nconst step: JobStep = {\n  id: \"start\",\n  name: \"Job Name\",\n  render: <JobStart />,\n  summary: <JobStartSummary />,\n  generateInitialValues,\n  validationSchema,\n};\n\nexport default step;\n","import { useMemo, useEffect, useState } from \"react\";\nimport { Apps, Jobs, Systems } from \"@tapis/tapis-typescript\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport {\n  FormikInput,\n  // FormikCheck,\n  FormikSelect,\n  // FormikTapisFile,\n} from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { useFormikContext } from \"formik\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  computeDefaultQueue,\n  computeDefaultSystem,\n  computeDefaultJobType,\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from \"tapis-api/utils/jobExecSystem\";\nimport { capitalize } from \"./utils\";\nimport * as Yup from \"yup\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { JobStep, JobLauncherProviderParams } from \"..\";\n\nconst getLogicalQueues = (system?: Systems.TapisSystem) =>\n  system?.batchLogicalQueues ?? [];\n\nconst getSystem = (systems: Array<Systems.TapisSystem>, systemId?: string) =>\n  !!systemId ? systems.find((system) => system.id === systemId) : undefined;\n\nconst SystemSelector: React.FC = () => {\n  const { setFieldValue, values } = useFormikContext();\n  const { job, app, systems } = useJobLauncher();\n\n  const [queues, setQueues] = useState<Array<Systems.LogicalQueue>>(\n    getLogicalQueues(getSystem(systems, job.execSystemId))\n  );\n\n  const [selectableSystems, setSelectableSystems] =\n    useState<Array<Systems.TapisSystem>>(systems);\n\n  const {\n    defaultSystemLabel,\n    defaultQueueLabel,\n    defaultJobTypeLabel,\n    isBatch,\n    selectedSystem,\n  } = useMemo(() => {\n    // Compute labels for when undefined values are selected for systems, queues or jobType\n    const { source: systemSource, systemId } = computeDefaultSystem(app);\n    const defaultSystemLabel = systemSource\n      ? `App default (${systemId})`\n      : \"Please select a system\";\n    const { source: queueSource, queue } = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultQueueLabel = queueSource\n      ? `${capitalize(queueSource)} default (${queue})`\n      : \"Please select a queue\";\n    const { source: jobTypeSource, jobType } = computeDefaultJobType(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultJobTypeLabel = `${capitalize(\n      jobTypeSource\n    )} default (${jobType})`;\n    const isBatch =\n      (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch ||\n      jobType === Apps.JobTypeEnum.Batch;\n    const selectedSystem = (values as Jobs.ReqSubmitJob)?.execSystemId;\n    return {\n      defaultSystemLabel,\n      defaultQueueLabel,\n      defaultJobTypeLabel,\n      isBatch,\n      selectedSystem,\n    };\n  }, [values, app, systems]);\n\n  useEffect(() => {\n    // Handle changes to selectable execSystems and execSystemLogicalQueues\n    const validSystems = isBatch\n      ? systems.filter((system) => !!system.batchLogicalQueues?.length)\n      : systems;\n    setSelectableSystems(validSystems);\n    if (!validSystems.some((system) => system.id === selectedSystem)) {\n      // If current system is invalid (like a system with no logical queues for a batch job)\n      // then use the application default\n      setFieldValue(\"execSystemId\", undefined);\n    }\n    if (!isBatch) {\n      setFieldValue(\"execSystemLogicalQueue\", undefined);\n    }\n    const system = getSystem(\n      validSystems,\n      selectedSystem ?? app.jobAttributes?.execSystemId\n    );\n    const queues = getLogicalQueues(system);\n    setQueues(queues);\n    setFieldValue(\"execSystemLogicalQueue\", undefined);\n  }, [\n    systems,\n    isBatch,\n    app,\n    selectedSystem,\n    setFieldValue,\n    setSelectableSystems,\n    setQueues,\n  ]);\n\n  return (\n    <div className={fieldArrayStyles.item}>\n      <FormikSelect\n        name=\"execSystemId\"\n        description=\"The execution system for this job\"\n        label=\"Execution System\"\n        required={true}\n        data-testid=\"execSystemId\"\n      >\n        <option value={undefined} label={defaultSystemLabel} />\n        {selectableSystems.map((system) => (\n          <option\n            value={system.id}\n            key={`execsystem-select-${system.id}`}\n            label={system.id}\n            data-testid={`execSystemId-${system.id}`}\n          />\n        ))}\n      </FormikSelect>\n      <FormikSelect\n        name=\"jobType\"\n        label=\"Job Type\"\n        description=\"Jobs can either be Batch or Fork\"\n        required={true}\n        data-testid=\"jobType\"\n      >\n        <option value={undefined} label={defaultJobTypeLabel} />\n        <option value={Apps.JobTypeEnum.Batch} label=\"Batch\" />\n        <option value={Apps.JobTypeEnum.Fork} label=\"Fork\" />\n      </FormikSelect>\n      {isBatch && (\n        <FormikSelect\n          name=\"execSystemLogicalQueue\"\n          description=\"The batch queue on this execution system\"\n          label=\"Batch Logical Queue\"\n          required={false}\n          disabled={queues.length === 0}\n          data-testid=\"execSystemLogicalQueue\"\n        >\n          <option value={undefined} label={defaultQueueLabel} />\n          {queues.map((queue) => (\n            <option\n              value={queue.name}\n              key={`queue-select-${queue.name}`}\n              label={queue.name}\n            />\n          ))}\n        </FormikSelect>\n      )}\n    </div>\n  );\n};\n\n// const ExecSystemDirs: React.FC = () => {\n//   const { values } = useFormikContext();\n//   const execSystemId = useMemo(\n//     () => (values as Partial<Jobs.ReqSubmitJob>).execSystemId,\n//     [values]\n//   );\n//   return (\n//     <Collapse title=\"Execution System Directories\">\n//       <FormikTapisFile\n//         allowSystemChange={false}\n//         systemId={execSystemId}\n//         disabled={!execSystemId}\n//         name=\"execSystemExecDir\"\n//         label=\"Execution System Execution Directory\"\n//         description=\"The directory on the selected selection system for execution files\"\n//         required={false}\n//         files={false}\n//         dirs={true}\n//       />\n//       <FormikTapisFile\n//         allowSystemChange={false}\n//         systemId={execSystemId}\n//         disabled={!execSystemId}\n//         name=\"execSystemInputDir\"\n//         label=\"Execution System Input Directory\"\n//         description=\"The directory on the selected selection system for input files\"\n//         required={false}\n//         files={false}\n//         dirs={true}\n//       />\n//       <FormikTapisFile\n//         allowSystemChange={false}\n//         systemId={execSystemId}\n//         disabled={!execSystemId}\n//         name=\"execSystemOutputDir\"\n//         label=\"Execution System Output Directory\"\n//         description=\"The directory on the selected selection system for output files\"\n//         required={false}\n//         files={false}\n//         dirs={true}\n//       />\n//     </Collapse>\n//   );\n// };\n\nconst ExecSystemQueueOptions: React.FC = () => {\n  const { errors } = useFormikContext();\n  const queueErrors = errors as QueueErrors;\n  const hasErrors =\n    queueErrors.coresPerNode ||\n    queueErrors.maxMinutes ||\n    queueErrors.memoryMB ||\n    queueErrors.nodeCount;\n  return (\n    <Collapse title=\"Queue Parameters\" isCollapsable={!hasErrors}>\n      <FormikInput\n        name=\"nodeCount\"\n        label=\"Node Count\"\n        description=\"The number of nodes to use for this job\"\n        required={false}\n      />\n      <FormikInput\n        name=\"coresPerNode\"\n        label=\"Cores Per Node\"\n        description=\"The number of cores to use per node\"\n        required={false}\n      />\n      <FormikInput\n        name=\"memoryMB\"\n        label=\"Memory, in Megabytes\"\n        description=\"The amount of memory to use per node in megabytes\"\n        required={false}\n      />\n      <FormikInput\n        name=\"maxMinutes\"\n        label=\"Maximum Minutes\"\n        description=\"The maximum amount of time in minutes for this job\"\n        required={false}\n      />\n    </Collapse>\n  );\n};\n\n// const MPIOptions: React.FC = () => {\n//   const { values } = useFormikContext();\n//   const isMpi = useMemo(\n//     () => (values as Partial<Jobs.ReqSubmitJob>).isMpi,\n//     [values]\n//   );\n//   return (\n//     <Collapse title=\"MPI Options\">\n//       <FormikCheck\n//         name=\"isMpi\"\n//         label=\"Is MPI?\"\n//         description=\"If checked, this job will be run as an MPI job\"\n//         required={false}\n//       />\n//       <FormikInput\n//         name=\"mpiCmd\"\n//         label=\"MPI Command\"\n//         description=\"If this is an MPI job, you may specify the MPI command\"\n//         required={false}\n//         disabled={!isMpi}\n//       />\n//       <FormikInput\n//         name=\"cmdPrefix\"\n//         label=\"Command Prefix\"\n//         description=\"If this is not an MPI job, you may specify a command prefix\"\n//         required={false}\n//         disabled={!!isMpi}\n//       />\n//     </Collapse>\n//   );\n// };\n\nexport const ExecOptions: React.FC = () => {\n  const { values } = useFormikContext();\n\n  const isBatch = useMemo(\n    () => (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch,\n    [values]\n  );\n\n  return (\n    <div>\n      <h2>Execution Options</h2>\n      <SystemSelector />\n      {isBatch && <ExecSystemQueueOptions />}\n      {/* <MPIOptions /> */}\n      {/* <ExecSystemDirs /> */}\n    </div>\n  );\n};\n\nexport const ExecOptionsSummary: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const { isMpi, mpiCmd, cmdPrefix } = job;\n\n  const { computedSystem, computedQueue, computedJobType } = useMemo(() => {\n    const { execSystemLogicalQueue, execSystemId, jobType } = job;\n    const computedSystem = execSystemId ?? computeDefaultSystem(app)?.systemId;\n    const computedQueue =\n      execSystemLogicalQueue ?? computeDefaultQueue(job, app, systems)?.queue;\n    const computedJobType =\n      jobType ?? computeDefaultJobType(job, app, systems)?.jobType;\n    return {\n      computedSystem,\n      computedQueue,\n      computedJobType,\n    };\n  }, [job, app, systems]);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={computedSystem}\n        error=\"An execution system is required\"\n        key=\"execution-system-id-summary\"\n      />\n      {computedJobType === Apps.JobTypeEnum.Batch && (\n        <StepSummaryField\n          field={computedQueue}\n          error=\"A logical queue is required\"\n          key=\"execution-system-queue-summary\"\n        />\n      )}\n      <StepSummaryField\n        field={`${\n          isMpi\n            ? `MPI Command: ${mpiCmd ?? \"system default\"}`\n            : `Command Prefix: ${cmdPrefix ?? \"system default\"}`\n        }`}\n        key=\"execution-mpi-summary\"\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object({\n  execSystemId: Yup.string(),\n  execSystemLogicalQueue: Yup.string(),\n  execSystemExecDir: Yup.string(),\n  execSystemInputDir: Yup.string(),\n  execSystemOutputDir: Yup.string(),\n  jobType: Yup.string(),\n  nodeCount: Yup.number(),\n  coresPerNode: Yup.number(),\n  memoryMB: Yup.number(),\n  maxMinutes: Yup.number(),\n  isMpi: Yup.boolean(),\n  mpiCmd: Yup.string(),\n  cmdPrefix: Yup.string(),\n});\n\ntype QueueErrors = {\n  nodeCount?: string;\n  coresPerNode?: string;\n  memoryMB?: string;\n  maxMinutes?: string;\n  execSystemId?: string;\n  execSystemLogicalQueue?: string;\n};\n\nconst validateThunk = ({ app, systems }: JobLauncherProviderParams) => {\n  return (values: Partial<Jobs.ReqSubmitJob>) => {\n    const {\n      execSystemId,\n      execSystemLogicalQueue,\n      nodeCount,\n      coresPerNode,\n      memoryMB,\n      maxMinutes,\n      jobType,\n    } = values;\n    const errors: QueueErrors = {};\n\n    const validation = validateExecSystem(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    if (validation === ValidateExecSystemResult.ErrorNoExecSystem) {\n      errors.execSystemId = `This app does not have a default execution system. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNotFound) {\n      errors.execSystemId = `The specified exec system cannot be found`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNoQueues) {\n      errors.execSystemId = `The specified exec system is not capable of batch jobs`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorNoQueue) {\n      errors.execSystemLogicalQueue = `Neither the application nor the selected system specifies a default queue. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorQueueNotFound) {\n      errors.execSystemLogicalQueue = `The specified queue cannot be found on the selected system`;\n    }\n\n    // Skip queue validation if the job is a FORK job\n    if (\n      jobType === Apps.JobTypeEnum.Fork ||\n      computeDefaultJobType(values as Partial<Jobs.ReqSubmitJob>, app, systems)\n        ?.jobType === Apps.JobTypeEnum.Fork\n    ) {\n      return errors;\n    }\n\n    const computedExecSystem = computeDefaultSystem(app);\n    const computedLogicalQueue = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const selectedSystem = systems.find(\n      (system) => system.id === (execSystemId ?? computedExecSystem.systemId)\n    );\n\n    if (!selectedSystem?.batchLogicalQueues?.length) {\n      errors.execSystemLogicalQueue = `The selected system does not have any batch logical queues`;\n      return errors;\n    }\n\n    const queue = selectedSystem?.batchLogicalQueues?.find(\n      (queue) =>\n        queue.name === (execSystemLogicalQueue ?? computedLogicalQueue?.queue)\n    );\n    if (!queue) {\n      errors.execSystemLogicalQueue = `The specified queue does not exist on the selected execution system`;\n      return errors;\n    }\n\n    if (!!nodeCount) {\n      if (queue?.maxNodeCount && nodeCount > queue?.maxNodeCount) {\n        errors.nodeCount = `The maximum number of nodes for this queue is ${queue?.maxNodeCount}`;\n      }\n      if (queue?.minNodeCount && nodeCount < queue?.minNodeCount) {\n        errors.nodeCount = `The minimum number of nodes for this queue is ${queue?.minNodeCount}`;\n      }\n    }\n    if (!!coresPerNode) {\n      if (queue?.maxCoresPerNode && coresPerNode > queue?.maxCoresPerNode) {\n        errors.coresPerNode = `The maximum number of cores per node for this queue is ${queue?.maxCoresPerNode}`;\n      }\n      if (queue?.minCoresPerNode && coresPerNode < queue?.minCoresPerNode) {\n        errors.coresPerNode = `The minimum number of cores per node for this queue is ${queue?.minCoresPerNode}`;\n      }\n    }\n    if (!!memoryMB) {\n      if (queue?.maxMemoryMB && memoryMB > queue?.maxMemoryMB) {\n        errors.memoryMB = `The maximum amount of memory for this queue is ${queue?.maxMemoryMB} megabytes`;\n      }\n      if (queue?.minMemoryMB && memoryMB < queue?.minMemoryMB) {\n        errors.memoryMB = `The minimum amount of memory for this queue is ${queue?.minMemoryMB} megabytes`;\n      }\n    }\n    if (!!maxMinutes) {\n      if (queue?.maxMinutes && maxMinutes > queue?.maxMinutes) {\n        errors.maxMinutes = `The maximum number of minutes for a job on this queue is ${queue?.maxMinutes}`;\n      }\n      if (queue?.minMinutes && maxMinutes < queue?.minMinutes) {\n        errors.maxMinutes = `The minimum number of minutes for a job on this queue is ${queue?.minMinutes}`;\n      }\n    }\n    return errors;\n  };\n};\n\nconst generateInitialValues = ({\n  job,\n  app,\n  systems,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  execSystemId: job.execSystemId,\n  execSystemLogicalQueue: job.execSystemLogicalQueue,\n  jobType: job.jobType,\n  execSystemExecDir: job.execSystemExecDir,\n  execSystemInputDir: job.execSystemInputDir,\n  execSystemOutputDir: job.execSystemOutputDir,\n  nodeCount: job.nodeCount,\n  coresPerNode: job.coresPerNode,\n  memoryMB: job.memoryMB,\n  maxMinutes: job.maxMinutes,\n  isMpi: job.isMpi,\n  mpiCmd: job.mpiCmd,\n  cmdPrefix: job.cmdPrefix,\n});\n\nconst step: JobStep = {\n  id: \"execution\",\n  name: \"Execution Options\",\n  render: <ExecOptions />,\n  summary: <ExecOptionsSummary />,\n  generateInitialValues,\n  validateThunk,\n  validationSchema,\n};\n\nexport default step;\n","import React, { useMemo } from \"react\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, FieldArrayRenderProps } from \"formik\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { FormikCheck } from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { JobStep } from \"..\";\nimport * as Yup from \"yup\";\n\ntype ArgFieldProps = {\n  index: number;\n  name: string;\n  argType: string;\n  arrayHelpers: FieldArrayRenderProps;\n  inputMode?: Apps.ArgInputModeEnum;\n};\n\nexport const ArgField: React.FC<ArgFieldProps> = ({\n  index,\n  name,\n  argType,\n  arrayHelpers,\n  inputMode,\n}) => {\n  const [field] = useField(`${name}.name`);\n  const argName = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`${argType}.${index}`}\n      title={!!argName && argName.length ? argName : argType}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`${name}.name`}\n        required={true}\n        label=\"Name\"\n        disabled={!!inputMode}\n        description={`The name for this ${argType} ${\n          !!inputMode\n            ? \"is defined in the application and cannot be changed\"\n            : \"\"\n        }`}\n      />\n      <FormikInput\n        name={`${name}.arg`}\n        required={true}\n        label=\"Value\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A value for this ${argType}`}\n      />\n      <FormikInput\n        name={`${name}.description`}\n        required={false}\n        label=\"Description\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A description for this ${argType}`}\n      />\n      <FormikCheck\n        name={`${name}.include`}\n        required={false}\n        label=\"Include\"\n        disabled={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n        }\n        description={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n            ? `This ${argType} must be included`\n            : `If checked, this ${argType} will be included`\n        }\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\ntype ArgsFieldArrayProps = {\n  argSpecs: Array<Apps.AppArgSpec>;\n  name: string;\n  argType: string;\n};\n\nexport const ArgsFieldArray: React.FC<ArgsFieldArrayProps> = ({\n  argSpecs,\n  name,\n  argType,\n}) => {\n  const [field] = useField(name);\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className={fieldArrayStyles.array}>\n          <h3>{`${argType}s`}</h3>\n          <div className={fieldArrayStyles[\"array-group\"]}>\n            {args.map((arg, index) => {\n              const inputMode = arg.name\n                ? getArgMode(arg.name, argSpecs)\n                : undefined;\n              return (\n                <ArgField\n                  index={index}\n                  arrayHelpers={arrayHelpers}\n                  name={`${name}.${index}`}\n                  argType={argType}\n                  inputMode={inputMode}\n                />\n              );\n            })}\n          </div>\n          <Button\n            onClick={() =>\n              arrayHelpers.push({\n                include: true,\n              })\n            }\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const argsSchema = Yup.array(\n  Yup.object({\n    name: Yup.string(),\n    description: Yup.string(),\n    include: Yup.boolean(),\n    arg: Yup.string().min(1).required(\"The argument cannot be blank\"),\n  })\n);\n\nexport const Args: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const appArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.appArgs ?? [],\n    [app]\n  );\n  const containerArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.containerArgs ?? [],\n    [app]\n  );\n\n  return (\n    <div>\n      <h2>Arguments</h2>\n      <ArgsFieldArray\n        name=\"parameterSet.appArgs\"\n        argType=\"App Argument\"\n        argSpecs={appArgSpecs}\n      />\n      <ArgsFieldArray\n        name=\"parameterSet.containerArgs\"\n        argType=\"Container Argument\"\n        argSpecs={containerArgSpecs}\n      />\n    </div>\n  );\n};\n\nexport const assembleArgSpec = (argSpecs: Array<Jobs.JobArgSpec>) =>\n  argSpecs.reduce(\n    (previous, current) =>\n      `${previous}${current.include ? ` ${current.arg}` : ``}`,\n    \"\"\n  );\n\nexport const ArgsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const appArgs = job.parameterSet?.appArgs ?? [];\n  const containerArgs = job.parameterSet?.containerArgs ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`App: ${assembleArgSpec(appArgs)}`}\n        key={`app-args-summary`}\n      />\n      <StepSummaryField\n        field={`Container: ${assembleArgSpec(containerArgs)}`}\n        key={`container-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    appArgs: argsSchema,\n    containerArgs: argsSchema,\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"args\",\n  name: \"Arguments\",\n  render: <Args />,\n  summary: <ArgsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      appArgs: job.parameterSet?.appArgs,\n      containerArgs: job.parameterSet?.containerArgs,\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  FieldArray,\n  useFormikContext,\n  useField,\n  FieldArrayRenderProps,\n} from \"formik\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { JobStep } from \"..\";\nimport * as Yup from \"yup\";\n\ntype EnvVariableFieldProps = {\n  index: number;\n  arrayHelpers: FieldArrayRenderProps;\n};\n\nconst EnvVariableField: React.FC<EnvVariableFieldProps> = ({\n  index,\n  arrayHelpers,\n}) => {\n  const [field] = useField(`parameterSet.envVariables.${index}.key`);\n  const key = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`envVariables.${index}`}\n      title={!!key && key.length ? key : \"Environment Variable\"}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`parameterSet.envVariables.${index}.key`}\n        required={true}\n        label=\"Key\"\n        description=\"The key name for this environment variable\"\n      />\n      <FormikInput\n        name={`parameterSet.envVariables.${index}.value`}\n        required={true}\n        label=\"Value\"\n        description=\"A value for this environment variable\"\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\nconst EnvVariablesRender: React.FC = () => {\n  const { values } = useFormikContext();\n  const envVariables =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.envVariables ?? [];\n  return (\n    <FieldArray\n      name={\"parameterSet.envVariables\"}\n      render={(arrayHelpers) => (\n        <div>\n          <div className={fieldArrayStyles[\"array-group\"]}>\n            {envVariables.map((envVariable, index) => (\n              <EnvVariableField index={index} arrayHelpers={arrayHelpers} />\n            ))}\n          </div>\n          <Button\n            onClick={() => arrayHelpers.push({ key: \"\", value: \"\" })}\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const EnvVariables: React.FC = () => {\n  return (\n    <div>\n      <h2>Environment Variables</h2>\n      <EnvVariablesRender />\n    </div>\n  );\n};\n\nexport const EnvVariablesSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const envVariables = job.parameterSet?.envVariables ?? [];\n  return (\n    <div>\n      {envVariables.map((envVariable) => (\n        <StepSummaryField\n          field={`${envVariable.key} : ${envVariable.value}`}\n          key={`env-variables-summary-${envVariable.key}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    envVariables: Yup.array(\n      Yup.object({\n        key: Yup.string()\n          .min(1)\n          .required(\"A key name is required for this environment variable\"),\n        value: Yup.string().required(\n          \"A value is required for this environment variable\"\n        ),\n      })\n    ),\n  }),\n});\n\nconst step: JobStep = {\n  id: \"envVariables\",\n  name: \"Environment Variables\",\n  render: <EnvVariables />,\n  summary: <EnvVariablesSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      envVariables: job.parameterSet?.envVariables,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useCallback, useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, useFormikContext } from \"formik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { ArgField, argsSchema, assembleArgSpec } from \"./AppArgs\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport styles from \"./SchedulerOptions.module.scss\";\nimport { JobStep } from \"..\";\n\nconst findSchedulerProfile = (values: Partial<Jobs.ReqSubmitJob>) => {\n  // Look at current schedulerOptions\n  const argSpecs = values.parameterSet?.schedulerOptions ?? [];\n  // Find any scheduler option that has --tapis-profile set\n  const profile = argSpecs.find((argSpec) =>\n    argSpec.arg?.includes(\"--tapis-profile\")\n  );\n  if (profile) {\n    // Return the name of the profile after --tapis-profile\n    const args = profile.arg?.split(\" \");\n    if (args && args.length >= 2) {\n      return args[1];\n    }\n  }\n  return undefined;\n};\n\nconst SchedulerProfiles: React.FC = () => {\n  const { schedulerProfiles } = useJobLauncher();\n  const { values, setValues } = useFormikContext();\n  const setSchedulerProfile = useCallback(\n    (newProfile: Jobs.JobArgSpec) => {\n      const argSpecs =\n        (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.schedulerOptions ??\n        [];\n      setValues({\n        parameterSet: {\n          schedulerOptions: [\n            newProfile,\n            ...argSpecs.filter(\n              (existing) => !existing.arg?.includes(\"--tapis-profile\")\n            ),\n          ],\n        },\n      });\n    },\n    [values, setValues]\n  );\n  const currentProfile = useMemo(\n    () => findSchedulerProfile(values as Partial<Jobs.ReqSubmitJob>),\n    [values]\n  );\n\n  return (\n    <div className={fieldArrayStyles.array}>\n      <h3>Scheduler Profiles</h3>\n      {schedulerProfiles.map(\n        ({ name, description, hiddenOptions, owner, tenant }) => (\n          <Collapse\n            key={`scheduler-profiles-${name}`}\n            className={fieldArrayStyles[\"array-group\"]}\n            title={`${name} ${name === currentProfile ? \"(selected)\" : \"\"}`}\n          >\n            <div className={styles[\"scheduler-option\"]}>\n              <div>{description}</div>\n              <DescriptionList\n                data={{\n                  hiddenOptions,\n                  owner,\n                  tenant,\n                }}\n                className={styles[\"scheduler-option-list\"]}\n              />\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() =>\n                setSchedulerProfile({\n                  name: `${name} Scheduler Profile`,\n                  description,\n                  include: true,\n                  arg: `--tapis-profile ${name}`,\n                })\n              }\n              disabled={name === currentProfile}\n            >\n              Use This Profile\n            </Button>\n          </Collapse>\n        )\n      )}\n    </div>\n  );\n};\n\nconst SchedulerOptionArray: React.FC = () => {\n  const { app } = useJobLauncher();\n  const [field] = useField(\"parameterSet.schedulerOptions\");\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n\n  const schedulerOptionSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.schedulerOptions ?? [],\n    [app]\n  );\n  return (\n    <FieldArray\n      name=\"parameterSet.schedulerOptions\"\n      render={(arrayHelpers) => (\n        <>\n          <div className={fieldArrayStyles.array}>\n            <h3>{`Scheduler Arguments`}</h3>\n            <div className={fieldArrayStyles[\"array-group\"]}>\n              {args.map((arg, index) => {\n                const inputMode = arg.name\n                  ? getArgMode(arg.name, schedulerOptionSpecs)\n                  : undefined;\n                return (\n                  <ArgField\n                    index={index}\n                    arrayHelpers={arrayHelpers}\n                    name={`parameterSet.schedulerOptions.${index}`}\n                    argType={\"scheduler option\"}\n                    inputMode={inputMode}\n                  />\n                );\n              })}\n            </div>\n            <Button\n              onClick={() =>\n                arrayHelpers.push({\n                  name: \"\",\n                  description: \"\",\n                  include: true,\n                  arg: \"\",\n                })\n              }\n              size=\"sm\"\n            >\n              + Add\n            </Button>\n          </div>\n          <SchedulerProfiles />\n        </>\n      )}\n    />\n  );\n};\n\nexport const SchedulerOptions: React.FC = () => {\n  return (\n    <div>\n      <h2>Scheduler Options</h2>\n      <SchedulerOptionArray />\n    </div>\n  );\n};\n\nexport const SchedulerOptionsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const schedulerOptions = job.parameterSet?.schedulerOptions ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`Scheduler Profile: ${\n          findSchedulerProfile(job) ?? \"none selected\"\n        }`}\n        key={`scheduler-profile-summary`}\n      />\n      <StepSummaryField\n        field={`Scheduler Args: ${assembleArgSpec(schedulerOptions)}`}\n        key={`scheduler-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"schedulerOptions\",\n  name: \"Scheduler Options\",\n  render: <SchedulerOptions />,\n  summary: <SchedulerOptionsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport FieldWrapper from \"cookbooks-ui/_common/FieldWrapper\";\nimport { Input } from \"reactstrap\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  FieldArray,\n  useFormikContext,\n  Field,\n  ErrorMessage,\n  FieldProps,\n} from \"formik\";\nimport { InputGroup, InputGroupAddon } from \"reactstrap\";\nimport {\n  FormikCheck,\n  FormikTapisFile,\n  FormikSelect,\n} from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport * as Yup from \"yup\";\nimport formStyles from \"cookbooks-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css\";\nimport { JobStep } from \"..\";\n\ntype ArrayGroupProps = {\n  values: Array<string>;\n  name: string;\n  label: string;\n  description: string;\n};\n\nconst ArrayGroup: React.FC<ArrayGroupProps> = ({\n  values,\n  name,\n  label,\n  description,\n}) => {\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <Collapse\n          open={values.length > 0}\n          title={label}\n          note={`${values.length} items`}\n          isCollapsable={true}\n          className={fieldArrayStyles.array}\n        >\n          <FieldWrapper\n            label={label}\n            required={false}\n            description={description}\n          >\n            <div className={fieldArrayStyles[\"array-group\"]}>\n              {values.map((value, index) => (\n                <>\n                  <Field name={`${name}.${index}`}>\n                    {({ field }: FieldProps) => (\n                      <InputGroup>\n                        <Input {...field} bsSize=\"sm\" />\n                        <InputGroupAddon addonType=\"append\">\n                          <Button\n                            size=\"sm\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            Remove\n                          </Button>\n                        </InputGroupAddon>\n                      </InputGroup>\n                    )}\n                  </Field>\n                  <ErrorMessage\n                    name={`${name}.${index}`}\n                    className=\"form-field__help\"\n                  >\n                    {(message) => (\n                      <div\n                        className={`${formStyles[\"form-field__help\"]} ${fieldArrayStyles.description}`}\n                      >\n                        {message}\n                      </div>\n                    )}\n                  </ErrorMessage>\n                </>\n              ))}\n            </div>\n            <Button onClick={() => arrayHelpers.push(\"\")} size=\"sm\">\n              + Add\n            </Button>\n          </FieldWrapper>\n        </Collapse>\n      )}\n    />\n  );\n};\n\nconst ArchiveFilterRender: React.FC = () => {\n  const { values } = useFormikContext();\n  const includes =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.archiveFilter\n      ?.includes ?? [];\n  const excludes =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.archiveFilter\n      ?.excludes ?? [];\n  return (\n    <div>\n      <h3>Archive Filters</h3>\n      <ArrayGroup\n        name=\"parameterSet.archiveFilter.includes\"\n        label=\"Includes\"\n        description=\"File patterns specified here will be included during job archiving\"\n        values={includes}\n      />\n      <ArrayGroup\n        name=\"parameterSet.archiveFilter.excludes\"\n        label=\"Excludes\"\n        description=\"File patterns specified here will be excluded from job archiving\"\n        values={excludes}\n      />\n      <FormikCheck\n        name=\"parameterSet.archiveFilter.includeLaunchFiles\"\n        label=\"Include Launch Files\"\n        description=\"If checked, launch files will be included during job archiving\"\n        required={false}\n      />\n    </div>\n  );\n};\n\nconst ArchiveOptions: React.FC = () => {\n  const { systems } = useJobLauncher();\n  const { values } = useFormikContext();\n  const archiveSystemId = useMemo(\n    () => (values as Partial<Jobs.ReqSubmitJob>).archiveSystemId,\n    [values]\n  );\n  return (\n    <>\n      <div className={fieldArrayStyles.item}>\n        <FormikSelect\n          name=\"archiveSystemId\"\n          label=\"Archive System ID\"\n          description=\"If selected, this system ID will be used for job archiving instead of the execution system default\"\n          required={false}\n        >\n          <option value={undefined}></option>\n          {systems.map((system) => (\n            <option\n              value={system.id}\n              key={`archive-system-select-${system.id}`}\n            >\n              {system.id}\n            </option>\n          ))}\n        </FormikSelect>\n        <FormikTapisFile\n          allowSystemChange={false}\n          systemId={archiveSystemId}\n          disabled={!archiveSystemId}\n          name=\"archiveSystemDir\"\n          label=\"Archive System Directory\"\n          description=\"The directory on the selected system in which to place archived files\"\n          required={false}\n          files={false}\n          dirs={true}\n        />\n        <FormikCheck\n          name=\"archiveOnAppError\"\n          label=\"Archive On App Error\"\n          description=\"If checked, the job will be archived even if there is an execution error\"\n          required={false}\n        />\n      </div>\n    </>\n  );\n};\n\nexport const Archive: React.FC = () => {\n  return (\n    <div>\n      <h2>Archive Options</h2>\n      <ArchiveOptions />\n      <ArchiveFilterRender />\n    </div>\n  );\n};\n\nexport const ArchiveSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const includes = job.parameterSet?.archiveFilter?.includes ?? [];\n  const excludes = job.parameterSet?.archiveFilter?.excludes ?? [];\n  const { archiveSystemId, archiveSystemDir, archiveOnAppError } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={`Archive System ID: ${archiveSystemId ?? \"default\"}`}\n        key={`archive-system-id-summary`}\n      />\n      <StepSummaryField\n        field={`Archive System Directory: ${archiveSystemDir ?? \"default\"}`}\n        key={`archive-system-dir-summary`}\n      />\n      <StepSummaryField\n        field={`Archive On App Error: ${archiveOnAppError}`}\n        key={`archive-on-app-error-summary`}\n      />\n      <StepSummaryField\n        field={`Includes: ${includes.length}`}\n        key={`archive-filter-includes-summary`}\n      />\n      <StepSummaryField\n        field={`Excludes: ${excludes.length}`}\n        key={`archive-filter-excludes-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  archiveOnAppError: Yup.boolean(),\n  archiveSystemId: Yup.string(),\n  archiveSystemDir: Yup.string(),\n  parameterSet: Yup.object({\n    archiveFilter: Yup.object({\n      includes: Yup.array(\n        Yup.string()\n          .min(1)\n          .required(\"A pattern must be specified for this include\")\n      ),\n      excludes: Yup.array(\n        Yup.string()\n          .min(1)\n          .required(\"A pattern must be specified for this exclude\")\n      ),\n      includeLaunchFiles: Yup.boolean(),\n    }),\n  }),\n});\n\nconst step: JobStep = {\n  id: \"archiving\",\n  name: \"Archiving\",\n  render: <Archive />,\n  summary: <ArchiveSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    archiveOnAppError: job.archiveOnAppError,\n    archiveSystemId: job.archiveSystemId,\n    archiveSystemDir: job.archiveSystemDir,\n    parameterSet: {\n      archiveFilter: job.parameterSet?.archiveFilter,\n    },\n  }),\n};\n\nexport default step;\n","import React from \"react\";\nimport { JobDetail } from \"cookbooks-ui/components/jobs\";\nimport { PageLayout, LayoutHeader } from \"cookbooks-ui/_common\";\n\ninterface JobDetailProps {\n  jobUuid: string;\n}\n\nconst Layout: React.FC<JobDetailProps> = ({ jobUuid }) => {\n  const header = <LayoutHeader type={\"sub-header\"}>Job Details</LayoutHeader>;\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <JobDetail jobUuid={jobUuid}></JobDetail>\n    </div>\n  );\n  return <PageLayout top={header} right={body}></PageLayout>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport JobDetail from \"../JobDetail\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">Select a job from the list.</SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:jobUuid`}\n        render={({\n          match: {\n            params: { jobUuid },\n          },\n        }: RouteComponentProps<{ jobUuid: string }>) => (\n          <JobDetail jobUuid={jobUuid} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { JobsNav } from \"../_components\";\nimport { Router } from \"../_Router\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Jobs</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <JobsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/systems\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst SystemsNav: React.FC = () => {\n  const { url } = useRouteMatch();\n  // Get a systems listing with default request params\n  const { data, isLoading, error } = useList();\n  const definitions: Array<Systems.TapisSystem> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {definitions.length ? (\n          definitions.map((system) => (\n            <NavItem\n              to={`${url}/${system.id}`}\n              icon=\"data-files\"\n              key={system.id}\n            >\n              {`${system.id} (${system.host})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No systems found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default SystemsNav;\n","import SystemsNav from './SystemsNav';\n\nexport default SystemsNav;\n","import { SystemDetail } from \"cookbooks-ui/components/systems\";\nimport { PageLayout, LayoutHeader } from \"cookbooks-ui/_common\";\n\nconst Layout: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const header = (\n    <LayoutHeader type={\"sub-header\"}>System Details</LayoutHeader>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <SystemDetail systemId={systemId}></SystemDetail>\n    </div>\n  );\n\n  return <PageLayout top={header} right={body}></PageLayout>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport SystemDetail from \"../SystemDetail\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select a system from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:systemId`}\n        render={({\n          match: {\n            params: { systemId },\n          },\n        }: RouteComponentProps<{ systemId: string }>) => (\n          <SystemDetail systemId={systemId} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\nimport { SystemsNav } from \"../_components\";\nimport { Router } from \"../_Router\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>System List</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <SystemsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import { fronteraSystem } from \"./frontera\";\nimport { ls6System } from \"./ls6\";\n\nconst systems = [\n  {\n    id: \"ls6\",\n    name: \"Lonestar 6\",\n    description:\n      \"Lonestar 6 is a Dell EMC PowerEdge cluster with Intel Xeon Platinum 8280M processors and NVIDIA A100 GPUs.\",\n    created: false,\n    spec: ls6System,\n  },\n  {\n    id: \"frontera\",\n    name: \"Frontera\",\n    description:\n      \"The primary computing system was provided by Dell EMC and powered by Intel processors, interconnected by a Mellanox Infiniband HDR and HDR-100 interconnect. The system has 8,008 available compute nodes\",\n    spec: fronteraSystem,\n    created: false,\n  },\n];\n\nexport default systems;\n","import { Systems } from \"@tapis/tapis-typescript\";\n\nexport const ls6System = {\n  id: \"ls6-gpu-a100-dev-v0.0.5\",\n  description: \"System for running jobs on the LS6 cluster\",\n  systemType: \"LINUX\",\n  host: \"ls6.tacc.utexas.edu\",\n  defaultAuthnMethod: \"PASSWORD\",\n  effectiveUserId: \"${apiUserId}\",\n  port: 22,\n  rootDir: \"/\",\n  canExec: true,\n  jobRuntimes: [{ runtimeType: \"SINGULARITY\" }],\n  jobWorkingDir: \"HOST_EVAL($WORK2)\",\n  canRunBatch: true,\n  batchScheduler: \"SLURM\",\n  batchSchedulerProfile: \"tacc\",\n  batchDefaultLogicalQueue: \"development\",\n  batchLogicalQueues: [\n    {\n      name: \"gpu-a100\",\n      hpcQueueName: \"gpu-a100\",\n      maxJobs: -1,\n      maxJobsPerUser: 40,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 128,\n      minMemoryMB: 1,\n      maxMemoryMB: 256000,\n      minMinutes: 1,\n      maxMinutes: 2880,\n    },\n    {\n      name: \"development\",\n      hpcQueueName: \"development\",\n      maxJobs: 50,\n      maxJobsPerUser: 10,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 68,\n      minMemoryMB: 1,\n      maxMemoryMB: 16384,\n      minMinutes: 1,\n      maxMinutes: 120,\n    },\n  ],\n} as Systems.ReqPostSystem;\n","import { Systems } from \"@tapis/tapis-typescript\";\n\nexport const fronteraSystem = {\n  id: \"frontera\",\n  description: \"System for running jobs on the Frontera cluster\",\n  systemType: \"LINUX\",\n  host: \"frontera.tacc.utexas.edu\",\n  defaultAuthnMethod: \"PASSWORD\",\n  effectiveUserId: \"${apiUserId}\",\n  port: 22,\n  rootDir: \"/\",\n  canExec: true,\n  jobRuntimes: [{ runtimeType: \"SINGULARITY\" }],\n  jobWorkingDir: \"HOST_EVAL($WORK2)\",\n  canRunBatch: true,\n  batchScheduler: \"SLURM\",\n  batchSchedulerProfile: \"tacc\",\n  batchDefaultLogicalQueue: \"development\",\n  batchLogicalQueues: [\n    {\n      name: \"gpu-a100\",\n      hpcQueueName: \"gpu-a100\",\n      maxJobs: -1,\n      maxJobsPerUser: 40,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 128,\n      minMemoryMB: 1,\n      maxMemoryMB: 256000,\n      minMinutes: 1,\n      maxMinutes: 2880,\n    },\n    {\n      name: \"development\",\n      hpcQueueName: \"development\",\n      maxJobs: 50,\n      maxJobsPerUser: 10,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 68,\n      minMemoryMB: 1,\n      maxMemoryMB: 16384,\n      minMinutes: 1,\n      maxMinutes: 120,\n    },\n  ],\n} as Systems.ReqPostSystem;\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { SectionHeader, LoadingSpinner, Icon } from \"cookbooks-ui/_common\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardText,\n} from \"reactstrap\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useList as useSystemsList } from \"tapis-hooks/systems\";\nimport styles from \"./Dashboard.module.scss\";\nimport \"./Dashboard.scss\";\nimport systemCookbooks from \"catalog/systems\";\n\ntype DashboardCardProps = {\n  icon: string;\n  link: string;\n  name: string;\n  text: string;\n  created: boolean;\n};\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  icon,\n  link,\n  name,\n  text,\n  created,\n}) => {\n  return (\n    <Card className={styles.card}>\n      <CardHeader>\n        <div className={styles[\"card-header\"]}>\n          <div>\n            <Icon name={icon} className=\"dashboard__card-icon\" />\n          </div>\n          <div>{name}</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          <div>{text}</div>\n        </CardTitle>\n        <CardText>{}</CardText>\n      </CardBody>\n      <CardFooter className={styles[\"card-footer\"]}>\n        {created ? (\n          <span>Installed</span>\n        ) : (\n          <Link to={link}>Create {name}</Link>\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const { accessToken, claims } = useTapisConfig();\n\n  const { isLoading, error, data: systems } = useSystemsList();\n\n  if (isLoading) return <LoadingSpinner />;\n\n  return (\n    <div>\n      {/* <SectionHeader className=\"dashboard__section-header\">\n        Systems installable on {claims[\"tapis/tenant_id\"]}\n      </SectionHeader> */}\n      <SectionHeader className=\"dashboard__section-header\">\n        Install a system using cookbooks\n      </SectionHeader>\n      <div className={styles.cards}>\n        {accessToken ? (\n          <>\n            {systemCookbooks\n              .filter((system) => system.spec.systemType === \"LINUX\")\n              .sort((a, b) =>\n                a.created === b.created ? 0 : a.created ? 1 : -1\n              )\n              .map((sys) => {\n                sys.created = systems?.result?.find(\n                  (s) => s.host === sys.spec.host\n                )\n                  ? true\n                  : false;\n                return (\n                  <DashboardCard\n                    key={sys.id}\n                    icon=\"data-files\"\n                    name={sys.name}\n                    text={sys.description}\n                    link={`/cookbooks/systems/${sys.id}`}\n                    created={sys.created}\n                  />\n                );\n              })}\n          </>\n        ) : (\n          <Card>\n            <CardHeader>\n              <div className={styles[\"card-header\"]}>\n                <div>\n                  <Icon name=\"user\" className=\"dashboard__card-icon\" />\n                </div>\n                <div>You are not logged in</div>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle>Please log in to use TAPIS</CardTitle>\n            </CardBody>\n            <CardFooter className={styles[\"card-footer\"]}>\n              <Link to=\"/login\">Proceed to login</Link>\n              <Icon name=\"push-right\" />\n            </CardFooter>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { Systems } from \"@tapis/tapis-typescript\";\nimport { apiGenerator, errorDecoder } from \"tapis-api/utils\";\n\nconst create = (\n  request: Systems.ReqPostSystem,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespResourceUrl>(() =>\n    api.createSystem({ reqPostSystem: request })\n  );\n};\n\nexport default create;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport QueryKeys from \"./queryKeys\";\nimport create from \"tapis-api/systems/create\";\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || \"\";\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Systems.RespResourceUrl, Error, Systems.ReqPostSystem>(\n      [QueryKeys, basePath, jwt],\n      (request: Systems.ReqPostSystem) => create(request, basePath, jwt)\n    );\n  //   useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n  //   [QueryKeys.submit, appId, appVersion, basePath, jwt],\n  //   (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n  // );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Systems.ReqPostSystem) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useCreate;\n","const QueryKeys = {\n  create: \"credentials/create\",\n};\n\nexport default QueryKeys;\n","import { Systems } from \"@tapis/tapis-typescript\";\nimport { apiGenerator, errorDecoder } from \"tapis-api/utils\";\n\nconst create = (\n  username: string,\n  systemId: string,\n  request: Systems.ReqUpdateCredential,\n  basePath: string,\n  jwt: string\n) => {\n  console.log(username);\n  const api: Systems.CredentialsApi = apiGenerator<Systems.CredentialsApi>(\n    Systems,\n    Systems.CredentialsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespResourceUrl>(() =>\n    api.createUserCredential({\n      systemId: systemId,\n      userName: username,\n      reqUpdateCredential: request,\n    })\n  );\n};\n\nexport default create;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport QueryKeys from \"./queryKeys\";\nimport create from \"tapis-api/credentials/create\";\nimport { ReqCreateCredential } from \"./types\";\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || \"\";\n\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Systems.RespBasic, Error, ReqCreateCredential>(\n      [QueryKeys, basePath, jwt],\n      (request: ReqCreateCredential) =>\n        create(\n          request.username,\n          request.systemId,\n          request.request,\n          basePath,\n          jwt\n        )\n    );\n  useEffect(() => reset(), [reset]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: ReqCreateCredential) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useCreate;\n","import cookbooksSystems from \"catalog/systems\";\nimport { FormikInput, LoadingSpinner } from \"cookbooks-ui/_common\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport useCreate from \"tapis-hooks/systems/useCreate\";\nimport useCreateCredentials from \"tapis-hooks/credentials/useCreate\";\nimport * as Yup from \"yup\";\nimport { ReqCreateCredential } from \"tapis-hooks/credentials/types\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useList } from \"tapis-hooks/systems\";\n\nconst Layout: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const initialValues = {\n    password: \"\",\n  };\n\n  const { claims } = useTapisConfig();\n\n  const username = claims[\"tapis/username\"];\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n  const {\n    isLoading: isLoadingCredentials,\n    isSuccess: isSuccessCredentials,\n    error: errorCredentials,\n    submit: submitCredentials,\n    data: dataCredentials,\n  } = useCreateCredentials();\n\n  const { data: systems, isLoading: isLoadingSystems } = useList();\n\n  const onSubmit = async (values: any) => {\n    if (!cookbookSystem) return;\n    await submitCredentials({\n      username: username,\n      systemId: cookbookSystem.spec.id,\n      request: { password: values.password },\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required(\"Password is required.\"),\n  });\n\n  const cookbookSystem = cookbooksSystems.find(\n    (system) => system.id === systemId\n  );\n\n  useEffect(() => {\n    if (!cookbookSystem) return;\n    const systemCreated = systems?.result?.find(\n      (system) => system.id === cookbookSystem.spec.id\n    );\n    console.log(systemCreated);\n    if (!systemCreated) submit(cookbookSystem.spec);\n  }, [systems]);\n\n  const renderLoading = (\n    <>\n      <LoadingSpinner placement=\"inline\" />\n    </>\n  );\n\n  const renderform = (\n    <div>\n      <h1> Create system: {cookbookSystem?.id} </h1>\n      <p> {cookbookSystem?.description} </p>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form id=\"rename-form\">\n          <FormikInput\n            name=\"password\"\n            type=\"password\"\n            label={\"Password\"}\n            required={true}\n            description=\"The password for the user.\"\n          />\n          <SubmitWrapper\n            isLoading={isLoading || isLoadingCredentials}\n            error={error || errorCredentials}\n            success={isSuccessCredentials ? \"System created\" : undefined}\n          >\n            <Button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={\n                isLoadingCredentials || isSuccessCredentials ? true : false\n              }\n            >\n              Create\n            </Button>\n          </SubmitWrapper>\n        </Form>\n      </Formik>\n    </div>\n  );\n  if (isLoading) return renderLoading;\n  if (error) <div>{error?.message}</div>;\n  return renderform;\n};\n\nexport default Layout;\n","import { Apps } from \"@tapis/tapis-typescript\";\n\nconst llamaNotebookApp: Apps.ReqPostApp = {\n  id: \"llama-index-environment\",\n  version: \"sha-21437c6\",\n  description:\n    \"Run an interactive Jupyter Lab session on an HPC compute node. For the LLama Index Environment\",\n  owner: \"${apiUserId}\",\n  enabled: true,\n  runtime: Apps.RuntimeEnum.Singularity,\n  runtimeOptions: [Apps.RuntimeOptionEnum.SingularityRun],\n  containerImage: \"docker://ghcr.io/mosoriob/llmrepository-docker:sha-21437c6\",\n  jobType: Apps.JobTypeEnum.Batch,\n  maxJobs: -1,\n  maxJobsPerUser: -1,\n  strictFileInputs: true,\n  jobAttributes: {\n    execSystemExecDir: \"${JobWorkingDir}/jobs/${JobUUID}\",\n    execSystemInputDir: \"${JobWorkingDir}/jobs/${JobUUID}/input\",\n    execSystemOutputDir: \"${JobWorkingDir}/jobs/${JobUUID}/output\",\n    maxMinutes: 100,\n    parameterSet: {\n      containerArgs: [\n        {\n          name: \"mount\",\n          description: \"Mount a directory from the host into the container\",\n          inputMode: Apps.ArgInputModeEnum.Fixed,\n          arg: \"--bind /share\",\n        },\n      ],\n      envVariables: [\n        {\n          key: \"email\",\n        },\n      ],\n    },\n  },\n  tags: [\"portalName: ALL\"],\n  notes: {\n    label: \"Jupyter Lab HPC (Frontera)\",\n    helpUrl: \"https://jupyterlab.readthedocs.io/en/stable/\",\n    hideNodeCountAndCoresPerNode: false,\n    isInteractive: true,\n    gitUrl: \"https://github.com/In-For-Disaster-Analytics/cookbooks-ui\",\n    gitRef: \"main\",\n    rawReadmeUrl:\n      \"https://raw.githubusercontent.com/In-For-Disaster-Analytics/sites-and-stories-nlp/jupyterenv/README.md\",\n    icon: \"jupyter\",\n    category: \"Data Processing\",\n  },\n};\n\nexport default llamaNotebookApp;\n","import llamaNotebookApp from \"catalog/apps/llama-notebook\";\nimport { useCallback, useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport create from \"tapis-api/apps/create\";\nimport useCreate from \"tapis-hooks/apps/useCreate\";\n\nexport const AppCreate: React.FC = () => {\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n  const onCreate = useCallback(() => {\n    llamaNotebookApp.id = `${llamaNotebookApp.id}-${Date.now()}`;\n    submit(llamaNotebookApp);\n  }, [submit]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      window.location.reload();\n    }\n  }, [isSuccess]);\n\n  return (\n    <div>\n      {error && <div>Error: {error.message}</div>}\n      <Button\n        color=\"primary\"\n        disabled={isLoading || isSuccess}\n        onClick={onCreate}\n      >\n        Create default template\n      </Button>\n    </div>\n  );\n};\n","import { Apps } from \"@tapis/tapis-typescript\";\n\nconst imgClassifyApp: Apps.ReqPostApp = {\n  id: \"img-classify\",\n  version: \"v1\",\n  description: \"Image classifier run using Singularity in batch mode\",\n  jobType: Apps.JobTypeEnum.Batch,\n  runtime: Apps.RuntimeEnum.Singularity,\n  runtimeOptions: [Apps.RuntimeOptionEnum.SingularityRun],\n  containerImage: \"docker://tapis/img-classify-sing:0.1\",\n  jobAttributes: {\n    parameterSet: {\n      appArgs: [\n        {\n          arg: \"--image_file\",\n          name: \"arg1\",\n        },\n      ],\n      archiveFilter: { includeLaunchFiles: false },\n    },\n    nodeCount: 1,\n    coresPerNode: 1,\n    memoryMB: 1,\n    maxMinutes: 10,\n  },\n};\n\nexport default imgClassifyApp;\n","import imgClassifyApp from \"./img-classify-mosorio\";\nimport llamaNotebookApp from \"./llama-notebook\";\n\nconst apps = [\n  {\n    name: \"LLama Index Environment\",\n    description:\n      \"Run an interactive Jupyter Lab session on an HPC compute node. For the LLama Index Environment\",\n    spec: llamaNotebookApp,\n  },\n  {\n    name: \"Image classification\",\n    description: \"Image classification using a pre-trained model\",\n    spec: imgClassifyApp,\n  },\n];\n\nexport default apps;\n","import React from \"react\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { AppCreate } from \"./CreateApp\";\nimport appList from \"../../../../../catalog/apps\";\n\nconst AppsNav: React.FC = () => {\n  return (\n    <Navbar>\n      {appList.length ? (\n        appList.map((app) => (\n          <NavItem\n            to={`/cookbooks/apps/${app.spec.id}/${app.spec.version}`}\n            icon=\"applications\"\n            key={app.spec.id}\n          >\n            {`${app.name} v${app.spec.version}`}\n          </NavItem>\n        ))\n      ) : (\n        <>\n          <i>No templates found</i>\n          <AppCreate />\n        </>\n      )}\n    </Navbar>\n  );\n};\n\nexport default AppsNav;\n","import AppsNav from './AppsNav';\nexport default AppsNav;\n","import React, { useEffect } from \"react\";\nimport { JobLauncher } from \"stories-ui/components/jobs\";\nimport { PageLayout, LayoutHeader, LoadingSpinner } from \"cookbooks-ui/_common\";\nimport cookbookApps from \"../../../../../catalog/apps\";\nimport ReadmeViewer from \"tapis-app/Cookbook/Readme\";\nimport { Button } from \"reactstrap\";\nimport useCreate from \"tapis-hooks/apps/useCreate\";\nimport { useList } from \"tapis-hooks/apps\";\nimport { Link } from \"react-router-dom\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { useQueryClient } from \"react-query\";\nimport queryKeys from \"tapis-hooks/systems/queryKeys\";\n\nconst Layout: React.FC<{ appId: string; appVersion: string }> = ({\n  appId,\n  appVersion,\n}) => {\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n  const { isLoading: isLoadingApps, error: errorApps, data: apps } = useList();\n\n  const cookbookApp = cookbookApps.find(\n    (app) => app.spec.id === appId && app.spec.version === appVersion\n  );\n  const existingApp = apps?.result?.find(\n    (app) =>\n      app.id === cookbookApp?.spec.id &&\n      app.version === cookbookApp?.spec.version\n  )\n    ? true\n    : false;\n\n  const successText = (\n    <div>\n      Successfully created {cookbookApp?.name} {cookbookApp?.spec.version}\n    </div>\n  );\n  const queryClient = useQueryClient();\n\n  const button = (\n    <SubmitWrapper\n      isLoading={isLoading}\n      error={error}\n      success={isSuccess ? \"App created\" : undefined}\n    >\n      <Button\n        color=\"primary\"\n        onClick={() => {\n          if (!cookbookApp) return;\n          submit(cookbookApp?.spec);\n\n          queryClient.invalidateQueries(queryKeys.list);\n        }}\n        disabled={\n          cookbookApp === undefined || isLoading || isLoadingApps || existingApp\n        }\n        successText={successText}\n      >\n        Add\n      </Button>\n    </SubmitWrapper>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <LayoutHeader type={\"sub-header\"}>{cookbookApp?.name}</LayoutHeader>\n      <LayoutHeader type={\"sub-header\"}>\n        {isLoading || isLoadingApps ? (\n          <LoadingSpinner placement=\"inplace\" />\n        ) : existingApp ? (\n          <Link to={`/apps/${appId}/${appVersion}`}>View</Link>\n        ) : (\n          button\n        )}\n      </LayoutHeader>\n      {cookbookApp && cookbookApp.spec && cookbookApp.spec.notes ? (\n        <ReadmeViewer\n          id={cookbookApp?.spec.id}\n          version={cookbookApp?.spec.version}\n          notes={cookbookApp?.spec.notes}\n        />\n      ) : (\n        <span> No README </span>\n      )}\n    </div>\n  );\n\n  return <PageLayout right={body} />;\n};\n\nexport default React.memo(Layout);\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport AppDetail from \"../AppDetail\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select an cookbook template from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:appId/:appVersion`}\n        render={({\n          match: {\n            params: { appVersion, appId },\n          },\n        }: RouteComponentProps<{\n          appId: string;\n          appVersion: string;\n        }>) => <AppDetail appId={appId} appVersion={appVersion} />}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { AppsNav } from \"../_components\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\n\nimport { Router } from \"../_Router\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Cookbooks Apps</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <AppsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { ProtectedRoute } from \"cookbooks-ui/_common\";\nimport { useLogin } from \"tapis-hooks/authenticator\";\n\nimport Apps from \"../Apps\";\nimport Login from \"../Login\";\nimport Dashboard from \"../Dashboard\";\nimport Jobs from \"tapis-app/Jobs\";\nimport Systems from \"tapis-app/Systems\";\nimport SystemsCookbooks from \"tapis-app/Cookbooks/Systems\";\nimport SystemDetail from \"cookbooks-ui/components/systems/SystemDetail\";\nimport SystemCreate from \"tapis-app/Cookbooks/Systems/SystemCreate\";\nimport CookbooksApps from \"tapis-app/Cookbooks/Apps\";\n\nconst Router: React.FC = () => {\n  const { logout } = useLogin();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          return <Redirect to=\"/login\" />;\n        }}\n      />\n      <ProtectedRoute path=\"/systems\">\n        <Systems />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/apps\">\n        <Apps />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/jobs\">\n        <Jobs />\n      </ProtectedRoute>\n\n      <Route\n        path={`/cookbooks/systems/:systemId`}\n        render={({\n          match: {\n            params: { systemId },\n          },\n        }: RouteComponentProps<{ systemId: string }>) => (\n          <SystemCreate systemId={systemId} />\n        )}\n      />\n\n      <Route path=\"/cookbooks/systems\">\n        <SystemsCookbooks />\n      </Route>\n\n      <ProtectedRoute path=\"/cookbooks/apps\">\n        <CookbooksApps />\n      </ProtectedRoute>\n\n      {/* <ProtectedRoute path=\"/files\">\n        <Files />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/workflows\">\n        <Workflows />\n      </ProtectedRoute>\n      <Route path=\"/uipatterns\">\n        <SectionHeader>UI Patterns</SectionHeader>\n        <UIPatterns />\n      </Route> */}\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React, { useState, useEffect } from \"react\";\nimport { useNotifications, NotificationRecord, Notification } from \".\";\nimport Snackbar, { SnackbarCloseReason } from \"@material-ui/core/Snackbar\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./NotificationToast.module.scss\";\n\nconst NotificationToast = () => {\n  type TransitionType =\n    | React.ComponentType<\n        SlideProps & {\n          children?: React.ReactElement<any, any> | undefined;\n        }\n      >\n    | undefined;\n  const { notifications, markread } = useNotifications();\n  const [open, setOpen] = useState(false);\n  const [notificationRecord, setNotificationRecord] =\n    useState<NotificationRecord | null>(null);\n  const [transition, setTransition] = React.useState<TransitionType>(undefined);\n\n  useEffect(() => {\n    if (notifications.length && !notificationRecord) {\n      // Set a new toast when we don't have an active one\n      setNotificationRecord({ ...notifications[0] });\n      setTransition(() => (props: SlideProps) => (\n        <Slide {...props} direction=\"right\" />\n      ));\n      setOpen(true);\n    } else if (notifications.length && notificationRecord && open) {\n      // Close an active toast when a new one is added\n      setOpen(false);\n      markread(notificationRecord?.id!);\n      setNotificationRecord({ ...notifications[0] });\n      setTransition(() => (props: SlideProps) => (\n        <Slide {...props} direction=\"right\" />\n      ));\n      setOpen(true);\n    }\n    /* eslint-disable-next-line */\n  }, [notifications]);\n\n  const handleExited = () => {\n    setNotificationRecord(null);\n    markread(notificationRecord?.id!);\n  };\n\n  type HandleCloseType = (\n    event: React.SyntheticEvent<any, Event>,\n    reason: SnackbarCloseReason\n  ) => void;\n\n  const handleClose: HandleCloseType = (_event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return notificationRecord && !notificationRecord.read ? (\n    <Snackbar\n      key={notificationRecord ? notificationRecord.id : undefined}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      TransitionComponent={transition}\n      open={open}\n      autoHideDuration={3500}\n      onClose={handleClose}\n      TransitionProps={{\n        onExited: handleExited,\n      }}\n      classes={{\n        anchorOriginBottomLeft: styles[\"notification-toast-container\"],\n      }}\n      ContentProps={{\n        classes: {\n          root: styles[\"notification-toast\"],\n          message: styles[\"notification-toast-body\"],\n        },\n      }}\n      message={<ToastMessage notification={notificationRecord!.notification} />}\n    />\n  ) : null;\n};\n\nexport const ToastMessage: React.FC<{ notification: Notification }> = ({\n  notification,\n}) => {\n  return (\n    <>\n      <div className={styles[\"notification-toast-icon-wrapper\"]}>\n        <Icon\n          name={notification.icon}\n          className={\n            notification.status === \"ERROR\" ? styles[\"toast-is-error\"] : \"\"\n          }\n        />\n      </div>\n      <div className={styles[\"notification-toast-content\"]}>\n        <span>{notification.message}</span>\n      </div>\n    </>\n  );\n};\n\nexport default NotificationToast;\n","import React from \"react\";\nimport { NotificationsContextType } from \".\";\n\nexport const notificationsContext: NotificationsContextType = {\n  notifications: [],\n  dispatch: () => {},\n};\n\nconst NotificationsContext: React.Context<NotificationsContextType> =\n  React.createContext<NotificationsContextType>(notificationsContext);\n\nexport default NotificationsContext;\n","import { useContext } from 'react';\nimport NotificationsContext from './NotificationsContext';\nimport { Notification } from '.';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useNotifications = () => {\n  const { notifications, dispatch } = useContext(NotificationsContext);\n\n  const add = (notification: Notification) => {\n    const id = uuidv4();\n    dispatch({ operation: 'add', notification, id });\n    return id;\n  };\n\n  const markread = (id: string) => {\n    dispatch({ operation: 'markread', id });\n  };\n\n  const remove = (id: string) => {\n    dispatch({ operation: 'remove', id });\n  };\n\n  const set = (id: string, notification: Notification) => {\n    dispatch({ operation: 'set', id, notification });\n  };\n\n  return {\n    notifications,\n    add,\n    markread,\n    remove,\n    set,\n  };\n};\n\nexport default useNotifications;\n","import React, { useReducer } from \"react\";\nimport {\n  NotificationsContextType,\n  NotificationRecord,\n  Notification,\n  NotificationToast,\n} from \".\";\nimport NotificationsContext from \"./NotificationsContext\";\n\nexport const reducer = (\n  state: Array<NotificationRecord>,\n  action: {\n    operation: \"add\" | \"markread\" | \"remove\" | \"set\";\n    notification?: Notification;\n    id: string;\n  }\n): Array<NotificationRecord> => {\n  const { operation, notification, id } = action;\n  if (operation === \"add\") {\n    if (!notification) {\n      throw new Error(\"notification field missing\");\n    }\n    return [{ notification, id, read: false }, ...state];\n  }\n  const index = state.findIndex((existing) => existing.id === id);\n  if (index === -1) {\n    throw new Error(`Could not find notification with id ${id}`);\n  }\n  if (operation === \"markread\") {\n    state[index].read = true;\n    return [...state];\n  }\n  if (operation === \"set\") {\n    if (!notification) {\n      throw new Error(\"notification field missing\");\n    }\n    state[index].notification = { ...notification! };\n    return [...state];\n  }\n  if (operation === \"remove\") {\n    state.splice(index, 1);\n    return [...state];\n  }\n  return state;\n};\n\nconst NotificationsProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const [notifications, dispatch] = useReducer(\n    reducer,\n    [] as Array<NotificationRecord>\n  );\n\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: NotificationsContextType = {\n    notifications,\n    dispatch,\n  };\n\n  return (\n    <NotificationsContext.Provider value={contextValue}>\n      <NotificationToast />\n      {children}\n    </NotificationsContext.Provider>\n  );\n};\n\nexport default NotificationsProvider;\n","import { Tenants } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Tenants.ListTenantsRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Tenants.TenantsApi = apiGenerator<Tenants.TenantsApi>(\n    Tenants,\n    Tenants.TenantsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Tenants.RespListTenants>(() => api.listTenants(params));\n};\n\nexport default list;\n","const QueryKeys = {\n  list: 'tenants/list',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/tenants';\nimport { Tenants } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Tenants.ListTenantsRequest = {};\n\nconst useList = (\n  params: Tenants.ListTenantsRequest = defaultParams,\n  options: QueryObserverOptions<Tenants.RespListTenants, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Tenants.RespListTenants, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import React, { useState } from \"react\";\nimport { Sidebar } from \"tapis-app/_components\";\nimport { Router } from \"tapis-app/_Router\";\nimport { PageLayout } from \"cookbooks-ui/_common\";\nimport { NotificationsProvider } from \"tapis-app/_components/Notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/tenants\";\nimport \"./Layout.scss\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useLogin } from \"tapis-hooks/authenticator\";\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst Layout: React.FC = () => {\n  const { claims } = useTapisConfig();\n  const { data, isLoading, error } = useList();\n  const tenants = data?.result ?? [];\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const { logout } = useLogin();\n\n  const header = (\n    <div className=\"cookbooks-ui__header\">\n      <div>Cookbooks UI</div>\n      <div></div>\n      <div>\n        {claims[\"sub\"] && (\n          <ButtonDropdown\n            size=\"sm\"\n            isOpen={isOpen}\n            toggle={() => setIsOpen(!isOpen)}\n            className=\"dropdown-button\"\n          >\n            <DropdownToggle caret>{claims[\"sub\"]}</DropdownToggle>\n            <DropdownMenu style={{ maxHeight: \"50vh\", overflowY: \"scroll\" }}>\n              <DropdownItem header>Tenants</DropdownItem>\n              <DropdownItem divider />\n              <QueryWrapper isLoading={isLoading} error={error}>\n                {tenants.map((tenant) => {\n                  return (\n                    <DropdownItem\n                      onClick={() => {\n                        logout();\n                        window.location.href =\n                          tenant.base_url + \"/cookbooks-ui/\";\n                      }}\n                    >\n                      {tenant.tenant_id}\n                    </DropdownItem>\n                  );\n                })}\n              </QueryWrapper>\n              <DropdownItem divider />\n              <DropdownItem onClick={() => history.push(\"/logout\")}>\n                Logout\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        )}\n      </div>\n    </div>\n  );\n\n  const workbenchContent = (\n    <div className=\"workbench-content\">\n      <Router />\n    </div>\n  );\n\n  return (\n    <NotificationsProvider>\n      <div style={{ display: \"flex\", flexGrow: 1, height: \"100vh\" }}>\n        <PageLayout top={header} left={<Sidebar />} right={workbenchContent} />\n      </div>\n    </NotificationsProvider>\n  );\n};\n\nexport default Layout;\n","import App from './Layout';\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"tapis-app\";\nimport TapisProvider from \"tapis-hooks/provider\";\nimport \"cookbooks-ui/index.css\";\nimport { resolveBasePath } from \"utils/resloveBasePath\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TapisProvider basePath={resolveBasePath()}>\n      <Router>\n        <App />\n      </Router>\n    </TapisProvider>\n  </React.StrictMode>,\n  document.getElementById(\"react-root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const resolveBasePath = () => {\n  console.log(window.location.href);\n  let baseUrl = window.location.href\n    .replace(\"/cookbooks-ui/\", \"\")\n    .split(\"#\")[0];\n  // .replace(/^https:\\/\\/ui\\./, 'https://');\n  // Direct request from local dev env to dev.develop\n  if (/127\\.0\\.0\\.1|localhost|0\\.0\\.0\\.0/.test(baseUrl)) {\n    return \"https://portals.tapis.io\";\n  }\n  return \"https://portals.tapis.io\";\n  // return baseUrl;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-root\":\"PageLayout_layout-root__3Rkiq\",\"layout-row\":\"PageLayout_layout-row__3wD1q\",\"constrain\":\"PageLayout_constrain__1PZXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Collapse_header__3VEkf\",\"controls\":\"Collapse_controls__2DZgR\",\"expand\":\"Collapse_expand__3od3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Expand_container__1wonh\",\"summary\":\"Expand_summary__HPWe-\",\"header\":\"Expand_header__8_m_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SubmitWrapper_wrapper__3k0uZ\",\"loading-spinner\":\"SubmitWrapper_loading-spinner__Ggg3z\",\"reverse\":\"SubmitWrapper_reverse__1cXM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer-list\":\"TransferListing_transfer-list__3YT2m\",\"selected\":\"TransferListing_selected__37Yx-\",\"link\":\"TransferListing_link__369FN\",\"selectable\":\"TransferListing_selectable__3NGqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"system-list\":\"SystemListing_system-list__3wQrF\",\"selected\":\"SystemListing_selected__TGvd3\",\"link\":\"SystemListing_link__256zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__1DOma\",\"active\":\"Tabs_active__2F-0m\",\"pane\":\"Tabs_pane__1ZFHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionContent_root__32g9C\",\"should-scroll\":\"SectionContent_should-scroll__-yFnt\",\"should-debug-layout\":\"SectionContent_should-debug-layout__1pkvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clamped\":\"ReadMore_clamped__1Ahke\",\"expanded\":\"ReadMore_expanded__1blSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nospace\":\"FormikCheck_nospace__15xsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileExplorer_file-list__dssnQ\",\"nav-list\":\"FileExplorer_nav-list__1Pe_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"JSONDisplay_json__2GFii\",\"controls\":\"JSONDisplay_controls__1aZyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduler-option\":\"SchedulerOptions_scheduler-option__3LPSB\",\"scheduler-option-list\":\"SchedulerOptions_scheduler-option-list__3w7ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppsAdd_container__2Tp6J\",\"step-summary\":\"AppsAdd_step-summary__2-pc1\",\"name\":\"AppsAdd_name__2qD2G\",\"content\":\"AppsAdd_content__2rbFJ\",\"edit\":\"AppsAdd_edit__30wjj\",\"step\":\"AppsAdd_step__2TOW7\",\"controls\":\"AppsAdd_controls__2nvMW\",\"submit\":\"AppsAdd_submit__9hO7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduler-option\":\"SchedulerOptions_scheduler-option__2kCW-\",\"scheduler-option-list\":\"SchedulerOptions_scheduler-option-list__O0jkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Sidebar_root__XkIbE\",\"nav-text\":\"Sidebar_nav-text__1LZ9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionMessages_root__3CzI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"one-row\":\"SectionContent_layouts_one-row__wB4Xa\",\"one-column\":\"SectionContent_layouts_one-column__1x2OH\",\"two-column\":\"SectionContent_layouts_two-column__1uXbk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropdownSelector_container__5RNlk bootstrap_form_form-control__2cIvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pill_root__-L1nx\",\"should-truncate\":\"Pill_should-truncate__1nq1w\",\"is-danger\":\"Pill_is-danger__28QMh\",\"is-success\":\"Pill_is-success__1UG2R\",\"is-warning\":\"Pill_is-warning__2RmVq\",\"is-normal\":\"Pill_is-normal__BtywO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array\":\"FieldArray_array__1qMj8\",\"item\":\"FieldArray_item__Hr_LG\",\"array-group\":\"FieldArray_array-group__OaBwS\",\"description\":\"FieldArray_description__E21Ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array\":\"FieldArray_array__27N-8\",\"item\":\"FieldArray_item__2MD2S\",\"array-group\":\"FieldArray_array-group__3lNaZ\",\"description\":\"FieldArray_description__3rTJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wizard_container__360d9\",\"step-summary\":\"Wizard_step-summary__24LjF\",\"name\":\"Wizard_name__2fYmh\",\"content\":\"Wizard_content__1-G0_\",\"edit\":\"Wizard_edit__2dqA1\",\"step\":\"Wizard_step__27kYA\",\"controls\":\"Wizard_controls__ab-k0\",\"submit\":\"Wizard_submit__5wnUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__19WrW\",\"is-scope-inline\":\"Message_is-scope-inline__2-Qov\",\"is-scope-section\":\"Message_is-scope-section__1Q01-\",\"text\":\"Message_text__2hFGy\",\"type-icon\":\"Message_type-icon__rpWsQ\",\"close-button\":\"Message_close-button__3p8ey\",\"is-info\":\"Message_is-info__2azqA\",\"icon\":\"Message_icon__2Lvcz\",\"is-warn\":\"Message_is-warn__1TGwA\",\"is-error\":\"Message_is-error__16LPM\",\"is-success\":\"Message_is-success__2vkS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-entry\":\"DescriptionList_array-entry__2l0Hb\",\"container\":\"DescriptionList_container__BqfFF\",\"is-horz\":\"DescriptionList_is-horz__2WW_S\",\"key\":\"DescriptionList_key__1htZ0\",\"value\":\"DescriptionList_value__2F0KY\",\"is-narrow\":\"DescriptionList_is-narrow__2Puex\",\"is-wide\":\"DescriptionList_is-wide__3HOCu\",\"is-vert\":\"DescriptionList_is-vert__2pYkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Paginator_root__rzq-y\",\"endcap\":\"Paginator_endcap__XwdVQ\",\"page-root\":\"Paginator_page-root__3d8Z0\",\"page\":\"Paginator_page__DZrT3\",\"current\":\"Paginator_current__1Hi6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__3lF98\",\"step-summary\":\"Dashboard_step-summary__1isbS\",\"name\":\"Dashboard_name__3wrsW\",\"content\":\"Dashboard_content__1lBa8\",\"edit\":\"Dashboard_edit__21dYI\",\"step\":\"Dashboard_step__2efKm\",\"controls\":\"Dashboard_controls__3h-WK\",\"submit\":\"Dashboard_submit__2hLnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Dashboard_cards__2J5lT\",\"card\":\"Dashboard_card__2aPKw\",\"card-header\":\"Dashboard_card-header__3qbGZ\",\"card-footer\":\"Dashboard_card-footer___nhpg\",\"header\":\"Dashboard_header__2TsR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification-toast-container\":\"NotificationToast_notification-toast-container__3v4Cz\",\"MuiSnackbar-anchorOriginBottomLeft\":\"NotificationToast_MuiSnackbar-anchorOriginBottomLeft__gSrzM\",\"notification-toast\":\"NotificationToast_notification-toast__3Usjp\",\"MuiSnackbarContent-root\":\"NotificationToast_MuiSnackbarContent-root__3IttC\",\"toast-is-error\":\"NotificationToast_toast-is-error__1BIGF\",\"notification-toast-body\":\"NotificationToast_notification-toast-body__wL5Kk\",\"MuiSnackbarContent-message\":\"NotificationToast_MuiSnackbarContent-message__2I5ZD\",\"notification-toast-icon-wrapper\":\"NotificationToast_notification-toast-icon-wrapper__2KxSt\",\"notification-toast-content\":\"NotificationToast_notification-toast-content__YS-pU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-field__label\":\"FieldWrapperFormik_form-field__label__3Hlnp\",\"form-field__help\":\"FieldWrapperFormik_form-field__help__3YDdS\",\"form-field__validation-error\":\"FieldWrapperFormik_form-field__validation-error__yMBpL\",\"hidden\":\"FieldWrapperFormik_hidden__3xAo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Breadcrumbs_box__1xsIw\",\"fragment\":\"Breadcrumbs_fragment__1Iy3A\",\"link\":\"Breadcrumbs_link__cJRBS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextCopyField_input__1hyoi bootstrap_form_form-control__2cIvr\",\"copy-button\":\"TextCopyField_copy-button__7rcRt c-button_c-button--secondary__3AzmY\",\"is-copied\":\"TextCopyField_is-copied__2iYPL\",\"button__icon\":\"TextCopyField_button__icon__BhnL- c-button_c-button__icon--before__HExum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileListing_file-list__1x_qB\",\"file-list-select\":\"FileListing_file-list-select__2nc5f\",\"link\":\"FileListing_link__1DJQH\",\"selected\":\"FileListing_selected__3Rhl7\",\"select-all\":\"FileListing_select-all__P34Vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"LayoutSections_body__34LRF\",\"constrain\":\"LayoutSections_constrain__3i5fR\",\"nav\":\"LayoutSections_nav__15IYU\",\"detail\":\"LayoutSections_detail__3wf4G\",\"sub-header\":\"LayoutSections_sub-header__152dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-list\":\"Navbar_nav-list__3vNW1\",\"nav-link\":\"Navbar_nav-link__2tU2O\",\"active\":\"Navbar_active__Rjjrm\",\"nav-text\":\"Navbar_nav-text__1AJjm\",\"nav-content\":\"Navbar_nav-content__b8WkJ\"};"],"sourceRoot":""}