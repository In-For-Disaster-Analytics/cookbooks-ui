{"version":3,"sources":["cookbooks-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css","cookbooks-ui/_common/Breadcrumbs/Breadcrumbs.module.scss","cookbooks-ui/_common/TextCopyField/TextCopyField.module.scss","cookbooks-ui/components/files/FileListing/FileListing.module.scss","cookbooks-ui/_common/LayoutSections/LayoutSections.module.scss","cookbooks-ui/_wrappers/Navbar/Navbar.module.scss","cookbooks-ui/_common/Section/Section.module.css","cookbooks-ui/_common/SectionHeader/SectionHeader.module.css","cookbooks-ui/_common/CopyButton/CopyButton.module.scss","cookbooks-ui/_common/PageLayout/PageLayout.module.scss","cookbooks-ui/_common/Collapse/Collapse.module.scss","cookbooks-ui/_common/Expand/Expand.module.scss","cookbooks-ui/_wrappers/SubmitWrapper/SubmitWrapper.module.scss","cookbooks-ui/components/files/TransferListing/TransferListing.module.scss","cookbooks-ui/components/systems/SystemListing/SystemListing.module.scss","cookbooks-ui/_common/Tabs/Tabs.module.scss","tapis-app/_components/Sidebar/Sidebar.module.scss","cookbooks-ui/_common/SectionContent/SectionContent.module.css","cookbooks-ui/_common/ReadMore/ReadMore.module.scss","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikCheck.module.scss","cookbooks-ui/components/files/FileExplorer/FileExplorer.module.scss","cookbooks-ui/_common/JSONDisplay/JSONDisplay.module.scss","stories-ui/components/jobs/JobLauncher/steps/SchedulerOptions.module.scss","cookbooks-ui/components/jobs/JobLauncher/steps/SchedulerOptions.module.scss","cookbooks-ui/_common/Section/SectionMessages.module.css","cookbooks-ui/_common/SectionContent/SectionContent.layouts.module.css","cookbooks-ui/_common/DropdownSelector/DropdownSelector.module.css","cookbooks-ui/_common/Pill/Pill.module.scss","tapis-app/Cookbook/Creator.module.scss","cookbooks-ui/components/jobs/JobLauncher/FieldArray.module.scss","stories-ui/components/jobs/JobLauncher/FieldArray.module.scss","cookbooks-ui/_wrappers/Wizard/Wizard.module.scss","cookbooks-ui/_common/Message/Message.module.scss","cookbooks-ui/_common/DescriptionList/DescriptionList.module.scss","tapis-app/Dashboard/_components/Dashboard/Dashboard.module.scss","tapis-hooks/context/TapisContext.tsx","tapis-hooks/context/useTapisConfig.ts","tapis-hooks/provider/index.ts","tapis-hooks/provider/TapisProvider.tsx","cookbooks-ui/_common/LoadingSpinner/LoadingSpinner.js","cookbooks-ui/_common/LoadingSpinner/index.js","cookbooks-ui/_constants/welcomeMessages.js","cookbooks-ui/_common/Section/SectionMessages.js","cookbooks-ui/_common/SectionContent/SectionContent.js","cookbooks-ui/_common/Section/Section.js","cookbooks-ui/_common/SectionHeader/SectionHeader.js","cookbooks-ui/_common/InfiniteScrollTable/InfiniteScrollTable.js","cookbooks-ui/_common/Icon/Icon.js","cookbooks-ui/_common/Icon/index.js","cookbooks-ui/_common/Expand/Expand.js","cookbooks-ui/_common/Message/Message.js","cookbooks-ui/_common/Message/index.js","cookbooks-ui/_common/InlineMessage/InlineMessage.js","cookbooks-ui/_common/SectionMessage/SectionMessage.js","cookbooks-ui/_common/SectionMessage/index.js","cookbooks-ui/_common/DescriptionList/DescriptionList.js","cookbooks-ui/_common/DescriptionList/index.js","cookbooks-ui/_common/DropdownSelector/DropdownSelector.js","cookbooks-ui/_common/WelcomeMessage/WelcomeMessage.js","cookbooks-ui/_common/Pill/Pill.js","cookbooks-ui/_common/TextCopyField/TextCopyField.js","cookbooks-ui/_common/ReadMore/ReadMore.js","cookbooks-ui/_common/Paginator/Paginator.js","cookbooks-ui/_common/ProtectedRoute/ProtectedRoute.tsx","cookbooks-ui/_common/ProtectedRoute/index.ts","cookbooks-ui/_common/CopyButton/CopyButton.js","cookbooks-ui/_common/CopyButton/index.js","cookbooks-ui/_common/FieldWrapperFormik/FieldWrapperFormik.tsx","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikInput.tsx","cookbooks-ui/_common/FieldWrapperFormik/fields/formikPatch.ts","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikSelect.tsx","cookbooks-ui/_common/FieldWrapperFormik/fields/FormikCheck.tsx","tapis-api/utils/apiGenerator.ts","tapis-api/utils/errorDecoder.ts","cookbooks-ui/_wrappers/QueryWrapper/index.ts","cookbooks-ui/_wrappers/QueryWrapper/QueryWrapper.tsx","cookbooks-ui/_wrappers/SubmitWrapper/index.ts","cookbooks-ui/_wrappers/SubmitWrapper/SubmitWrapper.tsx","tapis-api/utils/jobExecSystem.ts","tapis-api/systems/list.ts","tapis-api/systems/details.ts","tapis-api/systems/schedulerProfiles.ts","tapis-hooks/systems/queryKeys.ts","tapis-hooks/systems/useList.ts","tapis-hooks/systems/useDetails.ts","tapis-hooks/systems/useSchedulerProfiles.ts","cookbooks-ui/components/systems/SystemDetail/SystemDetail.tsx","cookbooks-ui/_common/PageLayout/PageLayout.tsx","cookbooks-ui/_common/LayoutSections/LayoutSections.tsx","cookbooks-ui/_common/Collapse/Collapse.tsx","cookbooks-ui/_common/JSONDisplay/JSONDisplay.tsx","cookbooks-ui/_common/JSONDisplay/index.tsx","cookbooks-ui/_common/Tabs/index.ts","cookbooks-ui/_common/Tabs/Tabs.tsx","cookbooks-ui/_wrappers/Navbar/Navbar.tsx","tapis-app/_components/Sidebar/Sidebar.tsx","tapis-api/authenticator/login.ts","tapis-hooks/authenticator/queryKeys.ts","tapis-hooks/authenticator/useLogin.ts","tapis-api/apps/list.ts","tapis-api/apps/detail.ts","tapis-hooks/apps/queryKeys.ts","tapis-hooks/apps/useList.ts","tapis-hooks/apps/useDetail.ts","tapis-app/Apps/_components/AppsNav/index.ts","tapis-app/Apps/_components/AppsNav/AppsNav.tsx","tapis-api/jobs/list.ts","tapis-api/jobs/details.ts","tapis-api/jobs/submit.ts","tapis-hooks/jobs/queryKeys.ts","tapis-hooks/jobs/useList.ts","tapis-hooks/jobs/useDetails.ts","tapis-hooks/jobs/useSubmit.ts","tapis-api/utils/jobFileInputs.ts","tapis-api/utils/jobFileInputArrays.ts","tapis-api/utils/jobArgs.ts","tapis-api/utils/jobDefaults.ts","stories-ui/components/jobs/JobLauncher/components/StepSummaryField.tsx","cookbooks-ui/utils/withBuilder.tsx","stories-ui/components/jobs/JobLauncher/components/useJobLauncher.tsx","stories-ui/components/jobs/JobLauncher/steps/JobStart.tsx","stories-ui/components/jobs/JobLauncher/steps/utils.ts","stories-ui/components/jobs/JobLauncher/steps/ExecOptions.tsx","stories-ui/components/jobs/JobLauncher/steps/AppArgs.tsx","stories-ui/components/jobs/JobLauncher/steps/SchedulerOptions.tsx","tapis-api/utils/jobRequiredFields.ts","stories-ui/components/jobs/JobLauncher/steps/JobSubmit.tsx","stories-ui/components/jobs/JobLauncher/steps/index.ts","tapis-app/Cookbook/Readme.tsx","stories-ui/components/jobs/JobLauncher/JupyterNotebookLauncher.tsx","stories-ui/components/jobs/JobLauncher/JobLauncherWizard.tsx","tapis-app/Apps/JobLauncher/_Layout/Layout.tsx","tapis-app/Apps/_Router/Router.tsx","tapis-app/Apps/_Layout/Layout.tsx","tapis-app/Login/_components/Login/index.ts","tapis-app/Login/_components/Login/Login.tsx","tapis-app/Login/_Layout/Layout.tsx","tapis-api/apps/create.ts","tapis-hooks/apps/useCreate.ts","catalog/apps/llama-notebook.ts","tapis-app/Cookbook/Creator.tsx","tapis-app/Dashboard/_components/Dashboard/Dashboard.tsx","tapis-app/Jobs/_components/JobsNav/index.ts","tapis-app/Jobs/_components/JobsNav/JobsNav.tsx","cookbooks-ui/components/jobs/JobDetail/JobDetail.tsx","cookbooks-ui/components/jobs/JobLauncher/components/useJobLauncher.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/AppArgs.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/JobStart.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/ExecOptions.tsx","tapis-app/Jobs/JobDetail/_Layout/Layout.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/EnvVariables.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/SchedulerOptions.tsx","cookbooks-ui/components/jobs/JobLauncher/steps/Archive.tsx","tapis-app/Jobs/_Router/Router.tsx","tapis-app/Jobs/_Layout/Layout.tsx","tapis-app/Systems/_components/SystemsNav/index.ts","tapis-app/Systems/_components/SystemsNav/SystemsNav.tsx","tapis-app/Systems/SystemDetail/_Layout/Layout.tsx","tapis-app/Systems/_Router/Router.tsx","tapis-app/Systems/_Layout/Layout.tsx","catalog/systems/index.ts","catalog/systems/ls6.ts","catalog/systems/frontera.ts","tapis-app/Cookbooks/Systems/_components/Dashboard/Dashboard.tsx","tapis-api/systems/create.ts","tapis-hooks/systems/useCreate.ts","tapis-hooks/credentials/queryKeys.ts","tapis-api/credentials/create.ts","tapis-hooks/credentials/useCreate.ts","tapis-app/Cookbooks/Systems/SystemCreate/_Layout/Layout.tsx","tapis-app/Cookbooks/Apps/_components/AppsNav/CreateApp.tsx","catalog/apps/img-classify-mosorio.ts","catalog/apps/index.ts","tapis-app/Cookbooks/Apps/_components/AppsNav/index.ts","tapis-app/Cookbooks/Apps/_components/AppsNav/AppsNav.tsx","tapis-app/Cookbooks/Apps/AppDetail/_Layout/Layout.tsx","tapis-app/Cookbooks/Apps/_Router/Router.tsx","tapis-app/Cookbooks/Apps/_Layout/Layout.tsx","tapis-app/_Router/Router.tsx","tapis-app/_components/Notifications/NotificationToast.tsx","tapis-app/_components/Notifications/NotificationsContext.tsx","tapis-app/_components/Notifications/useNotifications.ts","tapis-app/_components/Notifications/NotificationsProvider.tsx","tapis-api/tenants/list.ts","tapis-hooks/tenants/queryKeys.ts","tapis-hooks/tenants/useList.ts","tapis-app/_Layout/index.ts","tapis-app/_Layout/Layout.tsx","reportWebVitals.ts","index.tsx","utils/resloveBasePath.ts","cookbooks-ui/_common/Paginator/Paginator.module.scss","tapis-app/Cookbooks/Systems/_components/Dashboard/Dashboard.module.scss","tapis-app/_components/Notifications/NotificationToast.module.scss"],"names":["module","exports","authContext","basePath","TapisContext","React","createContext","useTapisConfig","useContext","getAccessToken","cookie","Cookies","get","JSON","parse","useQuery","initialData","data","refetch","accessToken","setAccessToken","resp","a","remove","expires","Date","expires_at","set","stringify","claims","access_token","jwt_decode","TapisProvider","token","children","contextValue","queryClient","QueryClient","Provider","value","QueryClientProvider","client","LoadingSpinner","placement","className","Spinner","defaultProps","DASHBOARD","DATA","ALLOCATIONS","APPLICATIONS","HISTORY","ACCOUNT","TICKETS","UI","SectionMessages","routeName","welcomeMessageText","welcomeText","MESSAGES","welcomeMessageName","welcomeMessage","messageName","hasMessage","useShouldShowWelcomeMessage","length","hasMessageClass","useEffect","document","body","classList","add","styles","root","LAYOUT_CLASS_MAP","oneRow","oneColumn","twoColumn","Object","keys","SectionContent","styleName","layoutName","shouldScroll","shouldDebugLayout","tagName","styleNameList","layoutClass","TagName","push","layoutStyles","join","Section","bodyClassName","content","contentClassName","contentLayoutName","contentShouldScroll","header","headerActions","headerClassName","manualContent","manualHeader","messages","messagesClassName","shouldBuildHeader","Error","actions","undefined","SectionHeader","isForForm","isForTable","HeadingTagName","heading","InfiniteScrollLoadingRow","isLoading","InfiniteScrollNoDataRow","display","noDataText","InfiniteScrollTable","tableColumns","tableData","onInfiniteScroll","getRowProps","columnMemoProps","columns","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","onScroll","target","scrollHeight","scrollTop","clientHeight","row","cells","cell","getCellProps","offset","Icon","name","iconClassName","fullClassName","label","role","Expand","detail","message","useState","isOpen","setIsOpen","toggleCallback","useCallback","Card","container","CardHeader","summary","onClick","tag","CardBody","ERROR_TEXT","TYPE_MAP","info","iconName","iconText","success","warning","error","warn","SCOPE_MAP","inline","section","Message","onDismiss","canDismiss","isVisible","scope","type","typeMap","scopeMap","typeClassName","scopeClassName","hasDismissSupport","console","modifierClassNames","containerStyleNames","fadeProps","Fade","unmountOnExit","baseClass","timeout","in","text","icon","InlineMessage","props","messageProps","SectionMessage","setIsVisible","DIRECTION_CLASS_MAP","vertical","horizontal","DEFAULT_DIRECTION","DENSITY_CLASS_MAP","compact","default","DEFAULT_DENSITY","DescriptionListArray","val","index","key","uuidv4","DescriptionListValue","Array","isArray","Set","from","DescriptionList","density","direction","modifierClasses","entries","Fragment","DropdownSelector","onChange","canSelectMany","multiple","useShouldShowMessage","welcomeMessages","WelcomeMessage","shouldShow","Alert","toggle","color","Pill","shouldTruncate","pillStyleName","TextCopyField","placeholder","isCopied","setIsCopied","onCopy","setTimeout","clearTimeout","stateTimeout","transitionDuration","isEmpty","Button","style","disabled","event","preventDefault","input","readOnly","ReadMore","expanded","setExpanded","useResizeDetector","height","ref","hasOverflow","current","clamped","PaginatorPage","number","callback","page","Paginator","start","end","pages","spread","delta","Math","floor","middle","middlePages","fill","_","endcap","ProtectedRoute","rest","location","to","pathname","state","CopyButton","size","FieldWrapper","required","description","isHidden","Component","as","useField","meta","FormGroup","Label","alignItems","htmlFor","Badge","marginLeft","id","FormText","FormikInput","formikProps","Input","bsSize","memo","setFieldValue","formikContext","field","shouldValidate","setValues","validateForm","validateOnChange","values","setInValues","obj","path","res","clone","resVal","i","pathArray","toPath","currentPath","currentObj","getIn","slice","isObject","nextPath","isInteger","Number","setIn","FormikSelect","useFormikContext","otherFormikProps","FormikCheck","check","nospace","checked","apiGenerator","api","jwt","Configuration","errorDecoder","func","result","json","QueryWrapper","SubmitWrapper","reverse","wrapper","ValidateExecSystemResult","list","params","Systems","SystemsApi","getSystems","details","getSystem","listSchedulerProfiles","SchedulerProfilesApi","getSchedulerProfiles","QueryKeys","create","defaultParams","useList","options","enabled","useDetails","useSchedulerProfiles","SystemDetail","systemId","select","system","tabs","Details","Layout","left","right","top","bottom","constrain","LayoutHeader","LayoutNavWrapper","nav","LayoutBody","Collapse","title","note","open","requiredText","isCollapsable","marginBottom","controls","expand","simplifyObject","forEach","simplifiedValue","convertSets","JSONDisplay","simplified","setSimplified","jsonString","Tabs","tabNames","activeTab","setActiveTab","getTabClassname","tabName","tab","active","Nav","NavLink","TabContent","TabPane","tabId","pane","NavItem","activeClassName","exact","Navbar","Sidebar","Divider","login","username","password","request","reqCreateToken","grant_type","Authenticator","TokensApi","createToken","useLogin","useMutation","onSuccess","response","mutate","isError","isSuccess","logout","Apps","ApplicationsApi","getApps","getApp","useDetail","AppsNav","refetchOnWindowFocus","url","useRouteMatch","appList","log","app","version","Jobs","JobsApi","getJobList","getJob","submit","submitJob","reqSubmitJob","orderBy","jobUuid","useSubmit","appId","appVersion","reset","getIncompleteAppInputs","jobAttributes","fileInputs","filter","fileInput","sourceUrl","generateRequiredFileInputsFromApp","inputMode","FileInputModeEnum","Required","appFileInput","targetPath","autoMountLocal","fileInputsComplete","inputType","getIncompleteAppInputsOfType","some","requiredInput","jobFileInput","find","optionalAppInputs","optionalJobInputs","optionalAppInput","jobInput","namedInputs","otherInput","getIncompleteAppInputArrays","fileInputArrays","sourceUrls","generateRequiredFileInputArraysFromApp","appFileInputArray","targetDir","generateFileInputArrayFromAppInput","fileInputArraysComplete","getIncompleteAppInputArraysOfType","requiredInputArray","jobFileInputArray","optionalAppInputArrays","optionalJobInputArrays","optionalAppInputArray","jobInputArray","otherInputArray","getArgMode","argSpecs","spec","argSpec","generateJobArgsFromSpec","arg","include","ArgInputModeEnum","IncludeOnDemand","generateJobArg","generateJobDefaults","systems","archiveOnAppError","archiveSystemId","archiveSystemDir","nodeCount","coresPerNode","jobType","memoryMB","maxMinutes","isMpi","mpiCmd","cmdPrefix","parameterSet","appArgs","containerArgs","schedulerOptions","archiveFilter","envVariables","JobStartSummary","withBuilder","context","clear","useBuilderContext","useReducer","payload","action","dispatch","JobLauncherContext","schedulerProfiles","JobLauncherProvider","defaultValues","useJobLauncher","job","JobStart","StepSummaryField","validationSchema","Yup","min","max","step","generateInitialValues","computeDefaultSystem","execSystemId","source","computeDefaultQueue","execSystemLogicalQueue","queue","selectedSystem","batchDefaultLogicalQueue","appSystem","computeDefaultJobType","canRunBatch","JobTypeEnum","Batch","Fork","validateExecSystem","defaultSystem","ErrorNoExecSystem","computedSystem","ErrorExecSystemNotFound","computedJobType","Complete","batchLogicalQueues","ErrorExecSystemNoQueues","defaultQueue","ErrorNoQueue","ErrorQueueNotFound","capitalize","str","charAt","toUpperCase","getLogicalQueues","SystemSelector","queues","setQueues","selectableSystems","setSelectableSystems","systemSource","defaultSystemLabel","queueSource","defaultQueueLabel","jobTypeSource","defaultJobTypeLabel","isBatch","validSystems","fieldArrayStyles","item","ExecSystemQueueOptions","queueErrors","errors","hasErrors","ExecOptions","ExecOptionsSummary","computedQueue","execSystemExecDir","execSystemInputDir","execSystemOutputDir","validateThunk","validation","computedExecSystem","computedLogicalQueue","maxNodeCount","minNodeCount","maxCoresPerNode","minCoresPerNode","maxMemoryMB","minMemoryMB","minMinutes","ArgField","argType","arrayHelpers","argName","Fixed","ArgsFieldArray","args","array","argsSchema","Args","appArgSpecs","containerArgSpecs","assembleArgSpec","reduce","previous","ArgsSummary","shape","scheduleOptions","findSchedulerProfile","profile","includes","split","SchedulerProfiles","setSchedulerProfile","newProfile","existing","currentProfile","moduleLoadCommand","hiddenOptions","modulesToLoad","owner","tenant","SchedulerOptionArray","schedulerOptionSpecs","SchedulerOptions","SchedulerOptionsSummary","jobRequiredFieldsComplete","JobSubmit","isComplete","onSubmit","uuid","arrayStyles","JobSubmitSummary","jobSteps","AppArgs","ReadmeViewer","notes","gitUrl","gitRef","rawReadmeUrl","fetch","maxWidth","SignupSchema","JupyterNotebookLauncher","steps","formSubmit","sys","systemType","SystemTypeEnum","Linux","initialValues","touched","Readme","JobLauncherWizardRender","jobStep","stepProps","validate","JobLauncherWizard","useAppDetail","useSystemsList","systemsData","systemsIsLoading","systemsError","schedulerProfilesData","schedulerProfilesIsLoading","schedulerProfilesError","flex","PageLayout","Router","match","sidebar","Login","loginSchema","useLocation","createAppVersion","reqPostApp","useCreate","llamaNotebookApp","runtime","RuntimeEnum","Singularity","runtimeOptions","RuntimeOptionEnum","SingularityRun","containerImage","maxJobs","maxJobsPerUser","strictFileInputs","tags","helpUrl","hideNodeCountAndCoresPerNode","isInteractive","category","CookbookCreator","now","CardTitle","CardText","Dashboard","jobs","useJobsList","apps","useAppsList","cards","CardFooter","JobsNav","jobsList","status","JobDetail","excludes","includeLaunchFiles","SystemsNav","definitions","host","created","defaultAuthnMethod","effectiveUserId","port","rootDir","canExec","jobRuntimes","runtimeType","jobWorkingDir","batchScheduler","batchSchedulerProfile","hpcQueueName","DashboardCard","link","card","systemCookbooks","sort","b","createSystem","reqCreateSystem","CredentialsApi","createUserCredential","userName","reqCreateCredential","useCreateCredentials","isLoadingCredentials","isSuccessCredentials","errorCredentials","submitCredentials","cookbookSystem","cookbooksSystems","systemCreated","renderLoading","renderform","AppCreate","onCreate","window","reload","imgClassifyApp","isLoadingApps","cookbookApp","cookbookApps","existingApp","successText","useQueryClient","button","invalidateQueries","queryKeys","ToastMessage","notification","NotificationToast","useNotifications","notifications","markread","setOpen","notificationRecord","setNotificationRecord","transition","setTransition","Slide","read","Snackbar","anchorOrigin","TransitionComponent","autoHideDuration","onClose","_event","reason","TransitionProps","onExited","classes","anchorOriginBottomLeft","ContentProps","notificationsContext","NotificationsContext","operation","reducer","findIndex","splice","NotificationsProvider","Tenants","TenantsApi","listTenants","App","tenants","history","useHistory","ButtonDropdown","DropdownToggle","caret","DropdownMenu","maxHeight","overflowY","DropdownItem","divider","href","base_url","tenant_id","workbenchContent","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","baseUrl","replace","test","resolveBasePath","getElementById"],"mappings":"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","file":"static/js/main.c899dde4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-field__label\":\"FieldWrapperFormik_form-field__label__3Hlnp\",\"form-field__help\":\"FieldWrapperFormik_form-field__help__3YDdS\",\"form-field__validation-error\":\"FieldWrapperFormik_form-field__validation-error__yMBpL\",\"hidden\":\"FieldWrapperFormik_hidden__3xAo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Breadcrumbs_box__1xsIw\",\"fragment\":\"Breadcrumbs_fragment__1Iy3A\",\"link\":\"Breadcrumbs_link__cJRBS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextCopyField_input__1hyoi bootstrap_form_form-control__2cIvr\",\"copy-button\":\"TextCopyField_copy-button__7rcRt c-button_c-button--secondary__3AzmY\",\"is-copied\":\"TextCopyField_is-copied__2iYPL\",\"button__icon\":\"TextCopyField_button__icon__BhnL- c-button_c-button__icon--before__HExum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileListing_file-list__1x_qB\",\"file-list-select\":\"FileListing_file-list-select__2nc5f\",\"link\":\"FileListing_link__1DJQH\",\"selected\":\"FileListing_selected__3Rhl7\",\"select-all\":\"FileListing_select-all__P34Vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"LayoutSections_body__34LRF\",\"constrain\":\"LayoutSections_constrain__3i5fR\",\"nav\":\"LayoutSections_nav__15IYU\",\"detail\":\"LayoutSections_detail__3wf4G\",\"sub-header\":\"LayoutSections_sub-header__152dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-list\":\"Navbar_nav-list__3vNW1\",\"nav-link\":\"Navbar_nav-link__2tU2O\",\"active\":\"Navbar_active__Rjjrm\",\"nav-text\":\"Navbar_nav-text__1AJjm\",\"nav-content\":\"Navbar_nav-content__b8WkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Section_root__3vFzI\",\"messages\":\"Section_messages__2jN5o\",\"header\":\"Section_header__2N29h\",\"content\":\"Section_content__1z0-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionHeader_root__1nA-L\",\"heading\":\"SectionHeader_heading__3LRjW\",\"for-form\":\"SectionHeader_for-form__3ExLj\",\"for-table\":\"SectionHeader_for-table__lGcJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CopyButton_input__3hCyN bootstrap_form_form-control__2cIvr\",\"copy-button\":\"CopyButton_copy-button__3bOX4 c-button_c-button--secondary__3AzmY\",\"is-copied\":\"CopyButton_is-copied__3aA5L\",\"button__icon\":\"CopyButton_button__icon__3erfG c-button_c-button__icon--before__HExum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-root\":\"PageLayout_layout-root__3Rkiq\",\"layout-row\":\"PageLayout_layout-row__3wD1q\",\"constrain\":\"PageLayout_constrain__1PZXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Collapse_header__3VEkf\",\"controls\":\"Collapse_controls__2DZgR\",\"expand\":\"Collapse_expand__3od3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Expand_container__1wonh\",\"summary\":\"Expand_summary__HPWe-\",\"header\":\"Expand_header__8_m_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SubmitWrapper_wrapper__3k0uZ\",\"loading-spinner\":\"SubmitWrapper_loading-spinner__Ggg3z\",\"reverse\":\"SubmitWrapper_reverse__1cXM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer-list\":\"TransferListing_transfer-list__3YT2m\",\"selected\":\"TransferListing_selected__37Yx-\",\"link\":\"TransferListing_link__369FN\",\"selectable\":\"TransferListing_selectable__3NGqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"system-list\":\"SystemListing_system-list__3wQrF\",\"selected\":\"SystemListing_selected__TGvd3\",\"link\":\"SystemListing_link__256zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__1DOma\",\"active\":\"Tabs_active__2F-0m\",\"pane\":\"Tabs_pane__1ZFHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Sidebar_root__XkIbE\",\"nav-text\":\"Sidebar_nav-text__1LZ9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionContent_root__32g9C\",\"should-scroll\":\"SectionContent_should-scroll__-yFnt\",\"should-debug-layout\":\"SectionContent_should-debug-layout__1pkvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clamped\":\"ReadMore_clamped__1Ahke\",\"expanded\":\"ReadMore_expanded__1blSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nospace\":\"FormikCheck_nospace__15xsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileExplorer_file-list__dssnQ\",\"nav-list\":\"FileExplorer_nav-list__1Pe_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"JSONDisplay_json__2GFii\",\"controls\":\"JSONDisplay_controls__1aZyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduler-option\":\"SchedulerOptions_scheduler-option__3LPSB\",\"scheduler-option-list\":\"SchedulerOptions_scheduler-option-list__3w7ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduler-option\":\"SchedulerOptions_scheduler-option__2kCW-\",\"scheduler-option-list\":\"SchedulerOptions_scheduler-option-list__O0jkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionMessages_root__3CzI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"one-row\":\"SectionContent_layouts_one-row__wB4Xa\",\"one-column\":\"SectionContent_layouts_one-column__1x2OH\",\"two-column\":\"SectionContent_layouts_two-column__1uXbk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropdownSelector_container__5RNlk bootstrap_form_form-control__2cIvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pill_root__-L1nx\",\"should-truncate\":\"Pill_should-truncate__1nq1w\",\"is-danger\":\"Pill_is-danger__28QMh\",\"is-success\":\"Pill_is-success__1UG2R\",\"is-warning\":\"Pill_is-warning__2RmVq\",\"is-normal\":\"Pill_is-normal__BtywO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Creator_cards__3wx-Z\",\"card\":\"Creator_card__1xmTQ\",\"card-header\":\"Creator_card-header__3xQaQ\",\"card-footer\":\"Creator_card-footer__3ttgr\",\"header\":\"Creator_header__2IDYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array\":\"FieldArray_array__1qMj8\",\"item\":\"FieldArray_item__Hr_LG\",\"array-group\":\"FieldArray_array-group__OaBwS\",\"description\":\"FieldArray_description__E21Ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array\":\"FieldArray_array__27N-8\",\"item\":\"FieldArray_item__2MD2S\",\"array-group\":\"FieldArray_array-group__3lNaZ\",\"description\":\"FieldArray_description__3rTJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wizard_container__360d9\",\"step-summary\":\"Wizard_step-summary__24LjF\",\"name\":\"Wizard_name__2fYmh\",\"content\":\"Wizard_content__1-G0_\",\"edit\":\"Wizard_edit__2dqA1\",\"step\":\"Wizard_step__27kYA\",\"controls\":\"Wizard_controls__ab-k0\",\"submit\":\"Wizard_submit__5wnUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__19WrW\",\"is-scope-inline\":\"Message_is-scope-inline__2-Qov\",\"is-scope-section\":\"Message_is-scope-section__1Q01-\",\"text\":\"Message_text__2hFGy\",\"type-icon\":\"Message_type-icon__rpWsQ\",\"close-button\":\"Message_close-button__3p8ey\",\"is-info\":\"Message_is-info__2azqA\",\"icon\":\"Message_icon__2Lvcz\",\"is-warn\":\"Message_is-warn__1TGwA\",\"is-error\":\"Message_is-error__16LPM\",\"is-success\":\"Message_is-success__2vkS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-entry\":\"DescriptionList_array-entry__2l0Hb\",\"container\":\"DescriptionList_container__BqfFF\",\"is-horz\":\"DescriptionList_is-horz__2WW_S\",\"key\":\"DescriptionList_key__1htZ0\",\"value\":\"DescriptionList_value__2F0KY\",\"is-narrow\":\"DescriptionList_is-narrow__2Puex\",\"is-wide\":\"DescriptionList_is-wide__3HOCu\",\"is-vert\":\"DescriptionList_is-vert__2pYkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Dashboard_cards__2FNuR\",\"card\":\"Dashboard_card__1MOwv\",\"card-header\":\"Dashboard_card-header__1gMPI\",\"card-footer\":\"Dashboard_card-footer__ByrWr\",\"header\":\"Dashboard_header__2o3jP\"};","import React from \"react\";\n\nexport type TapisContextType = {\n  basePath: string;\n};\n\nexport const authContext: TapisContextType = {\n  basePath: \"\",\n};\n\nconst TapisContext: React.Context<TapisContextType> =\n  React.createContext<TapisContextType>(authContext);\n\nexport default TapisContext;\n","import { useContext } from 'react';\nimport { useQuery } from 'react-query';\nimport Cookies from 'js-cookie';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport jwt_decode from 'jwt-decode';\nimport TapisContext from './TapisContext';\n\nconst useTapisConfig = () => {\n  const { basePath } = useContext(TapisContext);\n\n  const getAccessToken = ():\n    | Authenticator.NewAccessTokenResponse\n    | undefined => {\n    const cookie = Cookies.get('tapis-token');\n    if (!!cookie) return JSON.parse(cookie);\n    return undefined;\n  };\n\n  const { data, refetch } = useQuery<\n    Authenticator.NewAccessTokenResponse | undefined\n  >('tapis-token', getAccessToken, {\n    initialData: () => getAccessToken(),\n  });\n\n  const setAccessToken = async (\n    resp: Authenticator.NewAccessTokenResponse | null | undefined\n  ): Promise<void> => {\n    if (!resp) {\n      Cookies.remove('tapis-token');\n      await refetch();\n      return;\n    }\n    const expires = new Date(resp.expires_at ?? 0);\n    Cookies.set('tapis-token', JSON.stringify(resp), { expires });\n    await refetch();\n  };\n\n  const claims: { [key: string]: any } = data?.access_token\n    ? jwt_decode(data?.access_token)\n    : {};\n\n  return {\n    basePath,\n    accessToken: data,\n    setAccessToken,\n    claims,\n  };\n};\n\nexport default useTapisConfig;\n","import { default as TapisProvider } from './TapisProvider';\n\nexport default TapisProvider;\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Authenticator } from \"@tapis/tapis-typescript\";\nimport TapisContext, { TapisContextType } from \"../context/TapisContext\";\n\ninterface TapisProviderProps {\n  token?: Authenticator.NewAccessTokenResponse;\n  basePath: string;\n}\n\nconst TapisProvider: React.FC<React.PropsWithChildren<TapisProviderProps>> = ({\n  token,\n  basePath,\n  children,\n}) => {\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: TapisContextType = {\n    basePath,\n  };\n\n  // react-query client\n  const queryClient = new QueryClient();\n\n  return (\n    <TapisContext.Provider value={contextValue}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </TapisContext.Provider>\n  );\n};\n\nexport default TapisProvider;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = ({ placement, className }) => {\n  return (\n    <div className={`loading-icon ${className}`} data-testid=\"loading-spinner\">\n      <Spinner className={placement} />\n    </div>\n  );\n};\nLoadingSpinner.propTypes = {\n  placement: PropTypes.string,\n  className: PropTypes.string,\n};\nLoadingSpinner.defaultProps = {\n  placement: 'section',\n  className: '',\n};\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner;\n","/**\n * Standard welcome message texts\n *\n * Notes:\n * - Each of these is expected-not-required to match a route from `./routes.js`.\n * - To customize message text (example: dynamic content) use `<Section>` props.\n */\nexport const DASHBOARD =\n  'This page allows you to monitor your job status, get help with tickets, and view the status of the High Performance Computing (HPC) systems.';\nexport const DATA = 'This page allows you to upload and manage your files.';\nexport const ALLOCATIONS =\n  'This page allows you to monitor the status of allocations on the HPC systems and view a breakdown of team usage.';\nexport const APPLICATIONS =\n  'This page allows you to submit jobs to the HPC systems or access Cloud services using a variety of applications.';\nexport const HISTORY =\n  'This page allows you to monitor a log of all previous job submissions.';\nexport const ACCOUNT =\n  'This page allows you to manage your account profile, change your password and view software licenses.';\nexport const TICKETS =\n  'This page allows you to submit a help request via an RT Ticket.';\nexport const UI =\n  'This hidden page allows developers to review UI components in isolation.';\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  WelcomeMessage,\n  useShouldShowMessage as useShouldShowWelcomeMessage,\n} from '..';\nimport * as MESSAGES from '../../_constants/welcomeMessages';\n\nimport styles from './SectionMessages.module.css';\nimport './SectionMessages.css';\n\n/**\n * A list for section messages that supports:\n *\n * - manual messages\n * - manual welcome message\n * - automatic welcome message\n * - automatic welcome message with custom text\n *\n * @example\n * // an automatic welcome message (if found), no additional messages\n * <SectionMessages routeName=\"DASHBOARD\" />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <SectionMessages\n *   routeName=\"DASHBOARD\"\n *   welcomeText={`We welcome you to the dashboard, ${givenName}`} />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <SectionMessages welcomeText={`We welcome you to this page, ${givenName}`} />\n * @example\n * // an automatic welcome message (if found), some additional messages\n * <SectionMessages routeName=\"DASHBOARD\">\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n * @example\n * // no automatic welcome message, some additional messages\n * <SectionMessages>\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n */\nfunction SectionMessages({ children, className, routeName, welcomeText }) {\n  const welcomeMessageText = welcomeText || MESSAGES[routeName];\n  /* FAQ: An alternate message name allows tracking custom message dismissal */\n  const welcomeMessageName = routeName || welcomeMessageText;\n  const welcomeMessage = welcomeMessageText && (\n    <WelcomeMessage messageName={welcomeMessageName}>\n      {welcomeMessageText}\n    </WelcomeMessage>\n  );\n  const hasMessage =\n    useShouldShowWelcomeMessage(routeName) || children.length > 0;\n  const hasMessageClass = 'has-message';\n\n  useEffect(() => {\n    if (hasMessage) {\n      document.body.classList.add(hasMessageClass);\n    } else {\n      document.body.classList.remove(hasMessageClass);\n    }\n  }, [hasMessage]);\n\n  return (\n    <aside className={`${styles.root} ${className}`}>\n      {welcomeMessage}\n      {children}\n    </aside>\n  );\n}\nSectionMessages.propTypes = {\n  /** Component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The name of the route section (to search for required welcome message) */\n  routeName: PropTypes.string,\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeText: PropTypes.string,\n};\nSectionMessages.defaultProps = {\n  children: '',\n  className: '',\n  routeName: '',\n  welcomeText: '',\n};\n\nexport default SectionMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* eslint-disable no-unused-vars */\nimport styles from './SectionContent.module.css';\nimport layoutStyles from './SectionContent.layouts.module.css';\n/* eslint-enable no-unused-vars */\n\n/**\n * Map of layout names to CSS classes\n * @enum {number}\n */\nexport const LAYOUT_CLASS_MAP = {\n  /** One full-height row of flexible blocks */\n  oneRow: 'one-row',\n  /** One full-width column of flexible blocks */\n  oneColumn: 'one-column',\n  /**\n   * Two left/right columns (wide/narrow) of flexible blocks\n   *\n   * (On narrow screens, this behaves like `oneColumn`)\n   */\n  twoColumn: 'two-column',\n};\nexport const DEFAULT_LAYOUT = 'oneRow';\nexport const LAYOUTS = [...Object.keys(LAYOUT_CLASS_MAP)];\n\n/**\n * A content panel wrapper that supports:\n *\n * - lay out panels (based on layout name and panel position)\n * - change element tag (like `section` instead of `div`)\n * - scroll root element (overflow of panel content is not managed)\n * - debug layout (via color-coded panels)\n *\n * @example\n * // features: lay out panels, change tag, allow content scroll, color-coded\n * <SectionContent\n *   layoutName=\"oneColumn\"\n *   tagName=\"main\",\n *   shouldScroll,\n *   shouldDebugLayout\n * >\n *   <div>Thing 1</div>\n *   <div>Thing 2</div>\n *   <div>Thing 3</div>\n * </SectionContent>\n */\nfunction SectionContent({\n  className,\n  children,\n  layoutName,\n  shouldScroll,\n  shouldDebugLayout,\n  tagName,\n}) {\n  let styleName = '';\n  const styleNameList = ['styles.root'];\n  const layoutClass = LAYOUT_CLASS_MAP[layoutName];\n  const TagName = tagName;\n\n  if (shouldScroll) styleNameList.push(styles['should-scroll']);\n  if (shouldDebugLayout) styleNameList.push(styles['should-debug-layout']);\n  if (layoutClass) styleNameList.push(layoutStyles[layoutClass]);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return <TagName className={`${className} ${styleName}`}>{children}</TagName>;\n}\nSectionContent.propTypes = {\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Content nodes where each node is a block to be laid out */\n  children: PropTypes.node.isRequired,\n  /** The name of the layout by which to arrange the nodes */\n  layoutName: PropTypes.oneOf(LAYOUTS).isRequired,\n  /** Whether to allow root element to scroll */\n  shouldScroll: PropTypes.bool,\n  /** Whether to allow panel debugging (highlight each panel with unique hue) */\n  shouldDebugLayout: PropTypes.bool,\n  /** Override tag of the root element */\n  tagName: PropTypes.string,\n};\nSectionContent.defaultProps = {\n  className: '',\n  shouldScroll: false,\n  shouldDebugLayout: false,\n  tagName: 'div',\n};\n\nexport default SectionContent;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionHeader, SectionContent } from '..';\nimport SectionMessages from './SectionMessages';\nimport { LAYOUTS, DEFAULT_LAYOUT } from '../SectionContent';\n\nimport styles from './Section.module.css';\n\n/**\n * A section layout structure that supports:\n *\n * - messages (automatically loads welcome message)\n * - header (with actions, e.g. links, buttons, form)\n * - content (that will be arranged in the layout you choose)\n * - manual or automatic sub-components (i.e. header, content)\n *\n * @example\n * // manually build messages, automatically build welcome message\n * <Section\n *   routeName=\"DASHBOARD\"\n *   messages={<>…</>}\n * />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <Section\n *   routeName=\"DASHBOARD\"\n *   welcomeMessageText={`We welcome you to the dashboard, ${givenName}`}\n * />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <Section\n *   welcomeMessageText={`We welcome you to this page, ${givenName}`}\n * />\n * @example\n * // add class to <body>, automatically build sub-components\n * // FAQ: class on <body> + `Bob.global.css` + `body.global-bob-class`\n * //      = unlimited, explicit, isolated CSS side effects\n * <Section\n *   bodyClassName=\"has-loaded-some_section\"\n *   content={…}\n * />\n * @example\n * // automatically build sub-components, with some customization\n * <Section\n *   header=\"Dashboard\"\n *   headerStyleName=\"header\"\n *   headerActions={…}\n *   content={…}\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * />\n * @example\n * // alternate syntax to automatically build content\n * <Section\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * >\n *   {…} <!-- i.e. content -->\n * </Section>\n * @example\n * // manually build sub-components\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionHeader> offers auto-built header's layout styles\n * // FAQ: The <SectionContent> offers auto-built content's layout styles\n * <Section\n *   manualHeader={\n *     <SectionHeader {…} />\n *   }\n *   manualContent={\n *     <SectionContent {…} />\n *   }\n * />\n * @example\n * // manually build content (alternate method)\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionContent> offers auto-built content's layout options\n * <Section manualContent>\n *   <SectionContent {…} />\n * />\n */\nfunction Section({\n  bodyClassName,\n  children,\n  className,\n  content,\n  contentClassName,\n  contentLayoutName,\n  contentShouldScroll,\n  header,\n  headerActions,\n  headerClassName,\n  manualContent,\n  manualHeader,\n  // manualSidebar,\n  // sidebar,\n  // sidebarClassName,\n  messages,\n  messagesClassName,\n  routeName,\n  welcomeMessageText,\n}) {\n  const shouldBuildHeader = header || headerClassName || headerActions;\n\n  // Allowing ineffectual prop combinations would lead to confusion\n  if (\n    manualContent &&\n    (content || contentClassName || contentLayoutName || contentShouldScroll)\n  ) {\n    throw new Error(\n      'When passing `manualContent`, the following props are ineffectual: `content`, `contentClassName`, `contentLayoutName`, `contentShouldScroll`'\n    );\n  }\n  if (manualHeader && (header || headerClassName || headerActions)) {\n    throw new Error(\n      'When passing `manualHeader`, the following props are ineffectual: `header`, `headerClassName`, `headerActions`'\n    );\n  }\n  // if (manualSidebar && (sidebar || sidebarClassName)) {\n  //   throw new Error(\n  //     'When passing `manualSidebar`, the following props are ineffectual: `sidebar`, `sidebarClassName`'\n  //   );\n  // }\n\n  useEffect(() => {\n    if (bodyClassName) document.body.classList.add(bodyClassName);\n\n    return function cleanup() {\n      if (bodyClassName) document.body.classList.remove(bodyClassName);\n    };\n  }, [bodyClassName]);\n\n  return (\n    <section className={`${className} ${styles.root}`}>\n      {/* eslint-disable */}\n      <SectionMessages\n        className={styles.messages}\n        routeName={routeName}\n        className={messagesClassName}\n        welcomeText={welcomeMessageText}\n      >\n        {messages}\n      </SectionMessages>\n      {/* {manualSidebar ? (\n        <>{manualSidebar}</>\n      ) : (\n        <Sidebar styleName=\"sidebar\" className={sidebarClassName}>\n          {sidebar}\n        </Sidebar>\n      )} */}\n      {manualHeader ? (\n        <>{manualHeader}</>\n      ) : (\n        shouldBuildHeader && (\n          <SectionHeader\n            className={`${headerClassName} ${styles.header}`}\n            actions={headerActions}\n          >\n            {header}\n          </SectionHeader>\n        )\n      )}\n      {manualContent ? (\n        <>\n          {manualContent}\n          {children}\n        </>\n      ) : (\n        <SectionContent\n          tagName=\"main\"\n          className={`${contentClassName} ${styles.content}`}\n          layoutName={contentLayoutName || DEFAULT_LAYOUT}\n          shouldScroll={contentShouldScroll}\n        >\n          {content}\n          {children}\n        </SectionContent>\n      )}\n    </section>\n  );\n}\nSection.propTypes = {\n  /** Name of class to append to body when section is active */\n  bodyClassName: PropTypes.string,\n  /** Alternate way to pass `manualContent` and `content` */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The section content children (content element built automatically) */\n  content: PropTypes.node,\n  /** Any additional className(s) for the content element */\n  contentClassName: PropTypes.string,\n  /** The name of the layout by which to arrange the content children */\n  contentLayoutName: PropTypes.oneOf(LAYOUTS.concat('')),\n  /** Whether to allow content to scroll */\n  contentShouldScroll: PropTypes.bool,\n  /** The section header text (header element built automatically) */\n  header: PropTypes.node,\n  /** Any section actions for the header element */\n  headerActions: PropTypes.node,\n  /** Any additional className(s) for the header element */\n  headerClassName: PropTypes.string,\n  /** The section content (built by user) flag or element */\n  /* RFE: Ideally, limit these to one relevant `Section[…]` component */\n  /* SEE: https://github.com/facebook/react/issues/2979 */\n  manualContent: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  /** The section header (built by user) element */\n  manualHeader: PropTypes.element,\n  // /** The page-specific sidebar */\n  // sidebar: PropTypes.node,\n  // /** Additional className for the sidebar element */\n  // sidebarClassName: PropTypes.string,\n  /** Any component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  messages: PropTypes.node,\n  /** Any additional className(s) for the message list */\n  messagesClassName: PropTypes.string,\n  /** The name of the route section (to search for a welcome message) */\n  routeName: PropTypes.string,\n  /** Any additional className(s) for the sidebar list */\n  // sidebarClassName: '',\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeMessageText: PropTypes.string,\n};\nSection.defaultProps = {\n  bodyClassName: '',\n  children: '',\n  className: '',\n  content: '',\n  contentClassName: '',\n  contentLayoutName: '',\n  contentShouldScroll: false,\n  header: '',\n  headerActions: '',\n  headerClassName: '',\n  manualContent: undefined,\n  manualHeader: undefined,\n  messages: '',\n  messagesClassName: '',\n  routeName: '',\n  // sidebarClassName: '',\n  welcomeMessageText: '',\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SectionHeader.module.css';\n\n/**\n * A header for a `Section[…]` component\n *\n * - heading text\n * - actions (e.g. links, buttons, form)\n * - automatic styles or markup for given context (ex: within a form or a table)\n *\n * @example\n * // a section header with heading text\n * <SectionHeader>\n *   <a href=\"…\">Hyperlinked Name of Section</a>\n * </SectionHeader>\n * @example\n * // a form header with actions and heading text\n * <SectionHeader\n *   actions={<button type=\"reset\">Reset</button>}\n *   isForForm\n * >\n *   Name of Form\n * </SectionHeader>\n * @example\n * // a table header with actions and heading text\n * <SectionHeader\n *   actions={<input type=\"search\" />}\n *   isForTable\n * >\n *   Name of Table\n * </SectionHeader>\n */\nfunction SectionHeader({\n  actions,\n  children,\n  className,\n  isForForm,\n  isForTable,\n}) {\n  let styleName = '';\n  const styleNameList = [styles['root']];\n  const HeadingTagName = isForForm || isForTable ? 'h3' : 'h2';\n\n  if (isForForm) styleNameList.push(styles['for-form']);\n  if (isForTable) styleNameList.push(styles['for-table']);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return (\n    <header className={`${styleName} ${className}`}>\n      {children && (\n        <HeadingTagName className={styles.heading}>{children}</HeadingTagName>\n      )}\n      {actions}\n    </header>\n  );\n}\nSectionHeader.propTypes = {\n  /** Any actions (buttons, links, forms, etc) */\n  actions: PropTypes.node,\n  /** The text a.k.a. title */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Whether this header is for a form */\n  isForForm: PropTypes.bool,\n  /** Whether this header is for a table */\n  isForTable: PropTypes.bool,\n};\nSectionHeader.defaultProps = {\n  actions: '',\n  className: '',\n  children: '',\n  isForForm: false,\n  isForTable: false,\n};\n\nexport default SectionHeader;\n","import React from 'react';\nimport { useTable } from 'react-table';\nimport PropTypes from 'prop-types';\nimport LoadingSpinner from '../LoadingSpinner';\nimport './InfiniteScrollTable.scss';\n\nconst rowContentPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.element,\n  PropTypes.oneOf([React.Fragment]),\n]);\n\nconst InfiniteScrollLoadingRow = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <LoadingSpinner placement=\"inline\" />\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollLoadingRow.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nconst InfiniteScrollNoDataRow = ({ display, noDataText }) => {\n  if (!display) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <span className=\"-status__message\">{noDataText}</span>\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollNoDataRow.propTypes = {\n  display: PropTypes.bool.isRequired,\n  noDataText: rowContentPropType.isRequired,\n};\n\nconst InfiniteScrollTable = ({\n  tableColumns,\n  tableData,\n  onInfiniteScroll,\n  isLoading,\n  className,\n  noDataText,\n  getRowProps,\n  columnMemoProps,\n}) => {\n  const columns = React.useMemo(\n    () => tableColumns,\n    /* eslint-disable-next-line */\n    [columnMemoProps, tableColumns]\n  );\n  const data = React.useMemo(() => tableData, [tableData]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n  const onScroll = ({ target }) => {\n    const bottom =\n      target.scrollHeight - target.scrollTop === target.clientHeight;\n    if (bottom && target.scrollTop > 0) {\n      onInfiniteScroll(tableData.length);\n    }\n  };\n\n  return (\n    <table {...getTableProps()} className={`${className} InfiniteScrollTable`}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()} onScroll={onScroll}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} {...getRowProps(row)}>\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    {...cell.getCellProps({ className: cell.column.className })}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n        <InfiniteScrollLoadingRow isLoading={isLoading} />\n        <InfiniteScrollNoDataRow\n          display={!isLoading && tableData.length === 0}\n          noDataText={noDataText}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nInfiniteScrollTable.propTypes = {\n  tableColumns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  tableData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onInfiniteScroll: PropTypes.func,\n  isLoading: PropTypes.bool,\n  className: PropTypes.string,\n  noDataText: rowContentPropType,\n  getRowProps: PropTypes.func,\n  columnMemoProps: PropTypes.arrayOf(PropTypes.any),\n};\nInfiniteScrollTable.defaultProps = {\n  onInfiniteScroll: (offset) => {},\n  isLoading: false,\n  className: '',\n  noDataText: '',\n  getRowProps: (row) => {},\n  columnMemoProps: [],\n};\n\nexport default InfiniteScrollTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.module.css';\n\nconst Icon = ({ children, className, name }) => {\n  const iconClassName = `icon icon-${name}`;\n  // FAQ: The conditional avoids an extra space in class attribute value\n  const fullClassName = className\n    ? [className, iconClassName].join(' ')\n    : iconClassName;\n  const label = children;\n\n  return <i className={fullClassName} role=\"img\" aria-label={label} />;\n};\nIcon.propTypes = {\n  /** A text alternative to the icon (for accessibility) */\n  children: PropTypes.string,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Name of icon from icon font (without the (`icon-` prefix) */\n  name: PropTypes.string.isRequired,\n};\nIcon.defaultProps = {\n  children: '',\n  className: '',\n};\n\nexport default Icon;\n","import Icon from './Icon';\n\nexport default Icon;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardBody, Card, Collapse } from 'reactstrap';\nimport Icon from '../Icon';\nimport './Expand.global.scss';\nimport styles from './Expand.module.scss';\n\nconst Expand = ({ className, detail, message }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleCallback = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  // TODO: Use `details/summary` tags, when `onToggle` support is \"last 2 versions\"\n  // SEE: https://github.com/facebook/react/issues/15486#issuecomment-669674869\n  return (\n    /* eslint-disable-next-line */\n    <Card className={styles.container} className={className} tag=\"div\">\n      <CardHeader className={styles.summary} onClick={toggleCallback} tag=\"div\">\n        <strong className={styles.header}>{detail}</strong>\n        <Icon name={isOpen ? 'collapse' : 'expand'} />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{message}</CardBody>\n      </Collapse>\n    </Card>\n  );\n};\n\nExpand.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n\n  detail: PropTypes.string.isRequired,\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\nExpand.defaultProps = {\n  className: '',\n};\n\nexport default Expand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'reactstrap';\nimport Icon from '../Icon';\n\nimport styles from './Message.module.scss';\n\nexport const ERROR_TEXT = {\n  mismatchCanDismissScope:\n    'For a <(Section)Message> to use `canDismiss`, `scope` must equal `section`.',\n  deprecatedType:\n    'In a <(Section|Inline)Message> `type=\"warn\"` is deprecated. Use `type=\"warning\"` instead.',\n  missingScope:\n    'A <Message> without a `scope` should become an <InlineMessage>. (If <Message> must be used, then explicitely set `scope=\"inline\"`.)',\n};\n\nexport const TYPE_MAP = {\n  info: {\n    iconName: 'conversation',\n    className: 'is-info',\n    iconText: 'Notice',\n  },\n  success: {\n    iconName: 'approved-reverse',\n    className: 'is-success',\n    iconText: 'Notice',\n  },\n  warning: {\n    iconName: 'alert',\n    className: 'is-warn',\n    iconText: 'Warning',\n  },\n  error: {\n    iconName: 'alert',\n    className: 'is-error',\n    iconText: 'Error',\n  },\n};\nTYPE_MAP.warn = TYPE_MAP.warning; // FAQ: Deprecated support for `type=\"warn\"`\nexport const TYPES = Object.keys(TYPE_MAP);\n\nexport const SCOPE_MAP = {\n  inline: {\n    className: 'is-scope-inline',\n    role: 'status',\n    tagName: 'span',\n  },\n  section: {\n    className: 'is-scope-section',\n    role: 'status',\n    tagName: 'p',\n  },\n  // app: { … } // FAQ: Do not use; instead, use a <NotificationToast>\n};\nexport const SCOPES = ['', ...Object.keys(SCOPE_MAP)];\nexport const DEFAULT_SCOPE = 'inline'; // FAQ: Historical support for default\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst Message = ({\n  children,\n  className,\n  onDismiss,\n  canDismiss,\n  isVisible,\n  scope,\n  type,\n}) => {\n  const typeMap = TYPE_MAP[type];\n  const scopeMap = SCOPE_MAP[scope || DEFAULT_SCOPE];\n  const { iconName, iconText, className: typeClassName } = typeMap;\n  const { role, tagName, className: scopeClassName } = scopeMap;\n\n  const hasDismissSupport = scope === 'section';\n\n  // Manage prop warnings\n  /* eslint-disable no-console */\n  if (canDismiss && !hasDismissSupport) {\n    // Component will work, except `canDismiss` is ineffectual\n    console.error(ERROR_TEXT.mismatchCanDismissScope);\n  }\n  if (type === 'warn') {\n    // Component will work, but `warn` is deprecated value\n    console.info(ERROR_TEXT.deprecatedType);\n  }\n  if (!scope) {\n    // Component will work, but `scope` should be defined\n    console.info(ERROR_TEXT.missingScope);\n  }\n  /* eslint-enable no-console */\n\n  // Manage class names\n  const modifierClassNames = [];\n  modifierClassNames.push(typeClassName);\n  modifierClassNames.push(scopeClassName);\n  const containerStyleNames = ['container', ...modifierClassNames]\n    .map((name) => styles[name])\n    .join(' ');\n\n  // Manage disappearance\n  // FAQ: Design does not want fade, but we still use <Fade> to manage dismissal\n  // TODO: Consider replacing <Fade> with a replication of `unmountOnExit: true`\n  const shouldFade = false;\n  const fadeProps = {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n    baseClass: shouldFade ? Fade.defaultProps.baseClass : '',\n    timeout: shouldFade ? Fade.defaultProps.timeout : 0,\n  };\n\n  return (\n    <Fade\n      // Avoid manually syncing Reactstrap <Fade>'s default props\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...fadeProps}\n      tag={tagName}\n      className={`${className} ${containerStyleNames}`}\n      role={role}\n      in={isVisible}\n    >\n      <Icon\n        className={`${styles['icon']} ${styles['type-icon']}`}\n        name={iconName}\n      >\n        {iconText}\n      </Icon>\n      <span className={styles.text} data-testid=\"text\">\n        {children}\n      </span>\n      {canDismiss && hasDismissSupport ? (\n        <button\n          type=\"button\"\n          className={styles['close-button']}\n          aria-label=\"Close\"\n          onClick={onDismiss}\n        >\n          <Icon\n            className={`${styles.icon} ${styles['close-icon']}`}\n            name=\"close\"\n          />\n        </button>\n      ) : null}\n    </Fade>\n  );\n};\nMessage.propTypes = {\n  /** Whether an action can be dismissed (requires scope equals `section`) */\n  canDismiss: PropTypes.bool,\n  /** Message text (as child node) */\n  /* FAQ: We can support any values, even a component */\n  children: PropTypes.node.isRequired, // This checks for any render-able value\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Whether message is visible (pair with `onDismiss`) */\n  isVisible: PropTypes.bool,\n  /** Action on message dismissal (pair with `isVisible`) */\n  onDismiss: PropTypes.func,\n  /** How to place the message within the layout */\n  scope: PropTypes.oneOf(SCOPES), // RFE: Require scope; change all instances\n  /** Message type or severity */\n  type: PropTypes.oneOf(TYPES).isRequired,\n};\nMessage.defaultProps = {\n  className: '',\n  canDismiss: false,\n  isVisible: true,\n  onDismiss: () => {},\n  scope: '', // RFE: Require scope; remove this line\n};\n\nexport default Message;\n","import Message from './Message';\n\nexport default Message;\n","import React from 'react';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst InlineMessage = (props) => {\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    canDismiss: false,\n    scope: 'inline',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nInlineMessage.propTypes = Message.propTypes;\nInlineMessage.defaultProps = Message.defaultProps;\n\nexport default InlineMessage;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst SectionMessage = (props) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  // Manage visibility\n  const onDismiss = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    isVisible,\n    onDismiss,\n    scope: 'section',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nSectionMessage.propTypes = {\n  ...Message.propTypes,\n  isVisible: PropTypes.bool,\n  onDismiss: PropTypes.func,\n};\nSectionMessage.defaultProps = Message.defaultProps;\n\nexport default SectionMessage;\n","import SectionMessage from './SectionMessage';\n\nexport default SectionMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './DescriptionList.module.scss';\n\nexport const DIRECTION_CLASS_MAP = {\n  vertical: 'is-vert',\n  horizontal: 'is-horz',\n};\nexport const DEFAULT_DIRECTION = 'vertical';\nexport const DIRECTIONS = ['', ...Object.keys(DIRECTION_CLASS_MAP)];\n\nexport const DENSITY_CLASS_MAP = {\n  compact: 'is-narrow',\n  default: 'is-wide',\n};\nexport const DEFAULT_DENSITY = 'default';\nexport const DENSITIES = ['', ...Object.keys(DENSITY_CLASS_MAP)];\n\nconst DescriptionListArray = ({ value }) => {\n  if (value.length === 0) {\n    return (\n      <dd className={styles.value}>\n        <i>None</i>\n      </dd>\n    );\n  }\n  return (\n    <dl>\n      {value.map((val, index) => (\n        <div key={uuidv4()} className={styles['array-entry']}>\n          <dt className={styles.key}>\n            <i>{index}</i>\n          </dt>\n          <dd className={styles.value} data-testid=\"value\">\n            <DescriptionListValue value={val} />\n          </dd>\n        </div>\n      ))}\n    </dl>\n  );\n};\n\nconst DescriptionListValue = ({ value }) => {\n  if (value === undefined) {\n    return <i>Undefined</i>;\n  }\n  if (Array.isArray(value)) {\n    return <DescriptionListArray value={value} />;\n  }\n  if (value instanceof Set) {\n    return <DescriptionListArray value={Array.from(value)} />;\n  }\n  if (typeof value === 'object') {\n    return <DescriptionList data={value} />;\n  }\n  if (typeof value === 'string') {\n    return <>{value}</>;\n  }\n  return <>{JSON.stringify(value)}</>;\n};\n\nconst DescriptionList = ({ className, data, density, direction }) => {\n  const modifierClasses = [];\n  modifierClasses.push(DENSITY_CLASS_MAP[density || DEFAULT_DENSITY]);\n  modifierClasses.push(DIRECTION_CLASS_MAP[direction || DEFAULT_DIRECTION]);\n  const containerStyleNames = ['container', ...modifierClasses]\n    .map((name) => styles[name])\n    .join(' ');\n  const entries = Object.entries(data);\n  if (entries.length === 0) {\n    return (\n      <div>\n        <i>Empty object</i>\n      </div>\n    );\n  }\n  return (\n    <dl className={`${className} ${containerStyleNames}`} data-testid=\"list\">\n      {entries.map(([key, value]) => (\n        <React.Fragment key={key}>\n          <dt className={styles.key} data-testid=\"key\">\n            {key}\n          </dt>\n          <dd className={styles.value} data-testid=\"value\">\n            <DescriptionListValue value={value} />\n          </dd>\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n};\nDescriptionList.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Selector type */\n  /* FAQ: We can support any values, even a component */\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n  /** Layout density */\n  density: PropTypes.oneOf(DENSITIES),\n  /** Layout direction */\n  direction: PropTypes.oneOf(DIRECTIONS),\n};\nDescriptionList.defaultProps = {\n  className: '',\n  density: DEFAULT_DENSITY,\n  direction: DEFAULT_DIRECTION,\n};\n\nexport default DescriptionList;\n","import DescriptionList from './DescriptionList';\n\nexport default DescriptionList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as BootstrapInput } from 'reactstrap';\n\nimport styles from './DropdownSelector.module.css';\n\nexport const TYPES = ['', 'single', 'multiple'];\nexport const DEFAULT_TYPE = 'single';\n\n// RFE: Support `options` object prop and require either `options` or `children` prop:\n//      - https://stackoverflow.com/a/49682510/11817077\n//      - https://stackoverflow.com/a/52661344/11817077\n//      - https://www.npmjs.com/package/react-either-property\n//      - \"customProp\" at https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes\n\nconst DropdownSelector = ({ type, onChange, ...props }) => {\n  const canSelectMany = type === 'multiple';\n\n  return (\n    <BootstrapInput\n      // FAQ: This is a one-off, so it does not belong in `.eslintrc`\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      onChange={onChange}\n      type=\"select\"\n      className={styles.container}\n      multiple={canSelectMany}\n      data-testid=\"selector\"\n      // The ARIA role for a `<select>` is implicit (and depends on `<select>` attributes)\n      // SEE: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Technical_summary\n    />\n  );\n};\nDropdownSelector.propTypes = {\n  /** Selector type */\n  type: PropTypes.oneOf(TYPES),\n  /** Selector type */\n  onChange: PropTypes.func,\n  /** Options (as children, like Reactstrap) */\n  // FAQ: Limiting and documenting this has become a rabbit hole; help welcome — Wes B\n  // children: PropTypes.any.isRequired\n};\nDropdownSelector.defaultProps = {\n  type: DEFAULT_TYPE,\n  onChange: () => {},\n};\n\nexport default DropdownSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\n\n/**\n * Whether to show a welcome message\n * @param {String} messageName - The name of the message to check\n */\nexport function useShouldShowMessage(messageName) {\n  const welcomeMessages = {};\n  return welcomeMessages && welcomeMessages[messageName];\n}\n\n/**\n * A message which, when dismissed, will not appear again unless browser storage is cleared\n *\n * _This message is designed for user introduction to sections, but can be abstracted further into a `<DismissableMessage>` or abstracted less such that a message need not be passed in._\n *\n * @example\n * // message with custom text, class, and identifier\n * <WelcomeMessage\n *   className=\"external-message-class\"\n *   messageName={identifierForMessageLikeRouteName}\n * >\n *   Introductory text (defined externally).\n * </WelcomeMessage>\n */\nfunction WelcomeMessage({ children, className, messageName }) {\n  const shouldShow = useShouldShowMessage(messageName);\n  const welcomeMessages = {};\n\n  function onDismiss(name) {\n    const newMessagesState = {\n      ...welcomeMessages,\n      [name]: false,\n    };\n    return newMessagesState;\n  }\n\n  return (\n    <Alert\n      isOpen={shouldShow}\n      toggle={() => onDismiss(messageName)}\n      color=\"secondary\"\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n}\nWelcomeMessage.propTypes = {\n  /** Message as text or element(s) */\n  children: PropTypes.node.isRequired,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** A unique identifier for the message */\n  messageName: PropTypes.string.isRequired,\n};\nWelcomeMessage.defaultProps = {\n  className: '',\n};\n\nexport default WelcomeMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Pill.module.scss';\n\nfunction Pill({ children, type, className, shouldTruncate }) {\n  let pillStyleName = `root is-${type}`;\n\n  if (shouldTruncate) pillStyleName += ' should-truncate';\n\n  return (\n    <span className={`${styles[pillStyleName]} ${className}`}>{children}</span>\n  );\n}\n\nPill.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  shouldTruncate: PropTypes.bool,\n};\n\nPill.defaultProps = {\n  type: 'normal',\n  className: '',\n  shouldTruncate: true,\n};\n\nexport default Pill;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './TextCopyField.module.scss';\n\nconst TextCopyField = ({ value, placeholder }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n  const onChange = (event) => {\n    // Swallow keyboard events on the Input control, but\n    // still allow selecting the text. readOnly property of\n    // Input is not adequate for this purpose because it\n    // prevents text selection\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <CopyToClipboard text={value}>\n          <Button\n            className={`${styles['copy-button']} ${\n              isCopied ? styles['is-copied'] : ''\n            }`}\n            // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n            //      - `data-attribute` and `attr()` (pending browser support)\n            //      - PostCSS and JSON variables (pending greater need for this)\n            style={{ '--transition-duration': `${transitionDuration}s` }}\n            onClick={onCopy}\n            disabled={isEmpty}\n            type=\"button\"\n          >\n            <Icon\n              name={isCopied ? 'approved-reverse' : 'link'}\n              className={styles['button__icon']}\n            />\n            <span className={styles['button__text']}>Copy</span>\n          </Button>\n        </CopyToClipboard>\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        value={value}\n        className={`form-control ${styles.input}`}\n        placeholder={placeholder}\n        data-testid=\"input\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nTextCopyField.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nTextCopyField.defaultProps = {\n  value: '',\n  placeholder: '',\n};\n\nexport default TextCopyField;\n","import React, { useState, useCallback } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport styles from './ReadMore.module.scss';\n\nconst ReadMore = ({ className, children }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleCallback = useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded, setExpanded]);\n\n  const { height, ref } = useResizeDetector();\n\n  const hasOverflow =\n    ref && ref.current ? ref.current.scrollHeight > height : false;\n\n  return (\n    <>\n      {\n        <div\n          className={`${\n            expanded ? styles.expanded : styles.clamped\n          } ${className}`}\n          ref={ref}\n        >\n          {children}\n        </div>\n      }\n      {(hasOverflow || expanded) && (\n        <Button color=\"link\" onClick={toggleCallback}>\n          {expanded ? 'Read Less' : 'Read More'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nReadMore.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nReadMore.defaultProps = {\n  className: '',\n};\n\nexport default ReadMore;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport styles from './Paginator.module.scss';\n\nconst PaginatorPage = ({ number, callback, current }) => {\n  return (\n    <div className={styles['page-root']}>\n      <Button\n        className={`${styles.page} ${number === current ? styles.current : ''}`}\n        onClick={() => callback(number)}\n      >\n        {number}\n      </Button>\n    </div>\n  );\n};\n\nPaginatorPage.propTypes = {\n  number: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};\n\nconst Paginator = ({ pages, current, callback, spread }) => {\n  let start, end;\n  if (pages === 1) {\n    end = 0;\n    start = 1;\n  } else if (pages > 2 && pages <= spread) {\n    start = 2;\n    end = pages - 1;\n  } else if (pages > spread && current <= 4) {\n    start = 2;\n    end = spread - 1;\n  } else if (pages > spread && current > pages - (spread - 2)) {\n    start = pages - (spread - 2);\n    end = pages - 1;\n  } else {\n    const delta = Math.floor((spread - 2) / 2);\n    start = current - delta;\n    end = current + delta;\n  }\n  const middle = end - start + 1;\n  const middlePages =\n    middle > 0\n      ? Array(middle)\n          .fill()\n          .map((_, index) => start + index)\n      : [];\n  return (\n    <div className={styles.root}>\n      <Button\n        color=\"link\"\n        className={styles.root}\n        onClick={() => callback(current - 1)} // eslint-disable-line\n        disabled={current === 1}\n      >\n        <span>&lt; Previous</span>\n      </Button>\n      <PaginatorPage number={1} callback={callback} current={current} />\n      {middlePages[0] > 2 && <span>...</span>}\n      {middlePages.map((number) => {\n        return (\n          <PaginatorPage\n            number={number}\n            key={number}\n            current={current}\n            callback={callback}\n          />\n        );\n      })}\n      {middlePages[middlePages.length - 1] < pages - 1 && <span>...</span>}\n      {pages > 1 && (\n        <PaginatorPage number={pages} callback={callback} current={current} />\n      )}\n      <Button\n        color=\"link\"\n        className={styles.endcap}\n        onClick={() => callback(current + 1)} // eslint-disable-line\n        disabled={current === pages}\n      >\n        <span>Next &gt;</span>\n      </Button>\n    </div>\n  );\n};\n\nPaginator.propTypes = {\n  pages: PropTypes.number.isRequired,\n  current: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  spread: PropTypes.number, // Number of page buttons to show\n};\n\nPaginator.defaultProps = {\n  spread: 11,\n};\n\nexport default Paginator;\n","import { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useTapisConfig } from \"tapis-hooks\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction ProtectedRoute({ children, ...rest }: RouteProps) {\n  const { accessToken } = useTapisConfig();\n  return (\n    <Route\n      {...rest}\n      render={({ location }: RouteProps) =>\n        accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import ProtectedRoute from './ProtectedRoute';\n\nexport default ProtectedRoute;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './CopyButton.module.scss';\n\nconst CopyButton = ({ value, className }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n\n  return (\n    <CopyToClipboard text={value}>\n      <Button\n        className={`${styles['copy-button']} ${\n          isCopied ? styles['is-copied'] : ''\n        } ${className}`}\n        // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n        //      - `data-attribute` and `attr()` (pending browser support)\n        //      - PostCSS and JSON variables (pending greater need for this)\n        style={{ '--transition-duration': `${transitionDuration}s` }}\n        onClick={onCopy}\n        disabled={isEmpty}\n        type=\"button\"\n        size=\"sm\"\n      >\n        <Icon\n          name={isCopied ? 'approved-reverse' : 'copy'}\n          className={styles['button__icon']}\n        />\n        <span className={styles['button__text']}>Copy</span>\n      </Button>\n    </CopyToClipboard>\n  );\n};\n\nCopyButton.propTypes = {\n  value: PropTypes.string,\n  className: PropTypes.string,\n};\n\nCopyButton.defaultProps = {\n  value: '',\n  className: '',\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\n\nexport default CopyButton;\n","import React from \"react\";\nimport { FormGroup, Label, FormText, Badge } from \"reactstrap\";\nimport styles from \"./FieldWrapperFormik.module.css\";\nimport { Field, useField } from \"formik\";\nexport type FieldWrapperProps = {\n  name: string;\n  label: string;\n  required: boolean;\n  description: string;\n  isHidden?: boolean;\n  as: React.ComponentType<any>;\n};\nconst FieldWrapper: React.FC<FieldWrapperProps> = ({\n  name,\n  label,\n  required,\n  description,\n  isHidden = false,\n  as: Component,\n}) => {\n  const [, meta] = useField(name);\n  return (\n    <FormGroup>\n      <span className={isHidden ? styles[\"hidden\"] : \"\"}>\n        <Label\n          className=\"form-field__label\"\n          size=\"sm\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          htmlFor={name}\n        >\n          {label}\n          {required && !isHidden ? (\n            <Badge color=\"danger\" style={{ marginLeft: \"10px\" }}>\n              Required\n            </Badge>\n          ) : null}\n        </Label>\n        <Field name={name} as={Component} id={name} />\n        {meta.error && (\n          <FormText className={styles[\"form-field__help\"]} color=\"danger\">\n            {meta.error}\n          </FormText>\n        )}\n        {description && !meta.error && (\n          <FormText className={styles[\"form-field__help\"]} color=\"muted\">\n            {description}\n          </FormText>\n        )}\n      </span>\n    </FormGroup>\n  );\n};\n\nexport default FieldWrapper;\n","import React from \"react\";\nimport FieldWrapper from \"../FieldWrapperFormik\";\nimport { Input } from \"reactstrap\";\nimport { FieldInputProps } from \"formik\";\nimport { FormikInputProps } from \".\";\n\nconst FormikInput: React.FC<FormikInputProps> = ({\n  name,\n  label,\n  required,\n  description,\n  ...props\n}: FormikInputProps) => (\n  <FieldWrapper\n    name={name}\n    label={label}\n    required={required}\n    description={description}\n    isHidden={props.type && props.type === \"hidden\"}\n    as={(formikProps: FieldInputProps<any>) => (\n      <Input bsSize=\"sm\" {...props} {...formikProps} />\n    )}\n  />\n);\n\nexport default React.memo(FormikInput);\n","import { FormikContextType, getIn, isObject, isInteger } from 'formik';\nimport _ from 'lodash';\n\n/**\n * Adaptation of setFieldValue wrapper from https://github.com/jaredpalmer/formik/issues/2332#issuecomment-819571154\n *\n * There is a bug in the setIn function of Formik that deletes form keys that have undefined values rather than\n * setting the field value to undefined. This is inconsistent with other types of Formik behavior, such as\n * empty text Inputs resulting in form keys with undefined values\n *\n * @param formikContext\n * @param field\n * @param value\n * @param shouldValidate\n */\nexport function setFieldValue(\n  formikContext: FormikContextType<unknown>,\n  field: string,\n  value: any,\n  shouldValidate?: boolean\n): void {\n  const { setValues, validateForm, validateOnChange, setFieldValue, values } =\n    formikContext;\n  // Override default behavior by forcing undefined to be set on the state\n  if (value === undefined) {\n    const setInValues = setIn(values, field, undefined);\n    setValues(setInValues);\n\n    const willValidate =\n      shouldValidate === undefined ? validateOnChange : shouldValidate;\n    if (willValidate) {\n      validateForm(setInValues);\n    }\n  } else {\n    // Use default behavior for normal values\n    setFieldValue(field, value, shouldValidate);\n  }\n}\n\n/**\n * A copy of Formik's setIn function, except it assigns undefined instead of deleting the property if the value\n * being set is undefined.\n * https://github.com/jaredpalmer/formik/issues/2332\n */\nfunction setIn(obj: any, path: string, value: any): any {\n  const res: any = _.clone(obj); // This keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  const pathArray = _.toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    const currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = _.clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    resVal[pathArray[i]] = undefined;\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    res[pathArray[i]] = undefined;\n  }\n\n  return res;\n}\n","import { ChangeEvent } from \"react\";\nimport FieldWrapper from \"../FieldWrapperFormik\";\nimport { Input } from \"reactstrap\";\nimport { FieldInputProps, useFormikContext } from \"formik\";\nimport { FormikInputProps } from \".\";\nimport { setFieldValue } from \"./formikPatch\";\n\nconst FormikSelect: React.FC<React.PropsWithChildren<FormikInputProps>> = ({\n  name,\n  label,\n  required,\n  description,\n  children,\n  ...props\n}: FormikInputProps) => {\n  const formikContext = useFormikContext();\n  return (\n    <FieldWrapper\n      name={name}\n      label={label}\n      required={required}\n      description={description}\n      as={(formikProps: FieldInputProps<any>) => {\n        const { onChange: formikOnChange, ...otherFormikProps } = formikProps;\n        const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n          // Use patched formik setFieldValue\n          // An option with no children and value set to undefined will preduce an empty string as the target value\n          // ex: <option value={undefined} label=\"Please select a value\" />\n          setFieldValue(\n            formikContext,\n            name,\n            event.target.value === \"\" ? undefined : event.target.value\n          );\n        };\n        return (\n          <Input\n            bsSize=\"sm\"\n            type=\"select\"\n            onChange={onChange}\n            {...props}\n            {...otherFormikProps}\n          >\n            {children}\n          </Input>\n        );\n      }}\n    />\n  );\n};\n\nexport default FormikSelect;\n","import { FieldInputProps, Field } from \"formik\";\nimport { FormikInputProps } from \".\";\nimport { Input, FormText, FormGroup, Label } from \"reactstrap\";\nimport styles from \"./FormikCheck.module.scss\";\n\nconst FormikCheck: React.FC<FormikInputProps> = ({\n  name,\n  label,\n  required,\n  description,\n  ...props\n}: FormikInputProps) => {\n  return (\n    <FormGroup check>\n      <Label check className={`form-field__label ${styles.nospace}`} size=\"sm\">\n        <Field\n          name={name}\n          as={(formikProps: FieldInputProps<any>) => (\n            <Input\n              bsSize={props[\"bsSize\"] ?? \"sm\"}\n              type=\"checkbox\"\n              {...props}\n              {...formikProps}\n              checked={formikProps.value}\n            />\n          )}\n        />\n        {label}\n      </Label>\n      <FormText className={`form-field__help ${styles.nospace}`} color=\"muted\">\n        {description}\n      </FormText>\n    </FormGroup>\n  );\n};\n\nexport default FormikCheck;\n","type BaseApiClass = {\n  new (...args: any[]): any;\n};\n\ntype ApiModule = {\n  Configuration: {\n    new (...args: any[]): any;\n  };\n};\n\nconst apiGenerator = <T extends unknown>(\n  module: ApiModule,\n  api: BaseApiClass,\n  basePath: string,\n  jwt: string | null\n): T => {\n  const headers: any = {};\n  if (jwt) {\n    headers['X-Tapis-Token'] = jwt;\n  }\n\n  // Generate a configuration object for the module with the\n  // API URL and the authorization header\n  const configuration = new module.Configuration({\n    basePath,\n    headers,\n  });\n\n  // Create an instance of the API\n  const result: T = new api(configuration);\n  return result;\n};\n\nexport default apiGenerator;\n","const errorDecoder = async <T>(func: () => Promise<T>) => {\n  try {\n    // Call the specified function name, and expect that specific return type\n    const result: T = await func();\n    return result;\n  } catch (error) {\n    // If an exception occurred, try to decode the json response from it and\n    // rethrow it\n    if ((error as any).json) {\n      const decoded = await (error as any).json();\n      throw decoded;\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport default errorDecoder;\n","import { default as QueryWrapper } from './QueryWrapper';\n\nexport default QueryWrapper;\n","import React from \"react\";\nimport { LoadingSpinner, Message } from \"cookbooks-ui/_common\";\n\ntype QueryWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  error: Error | null;\n  className?: string;\n}>;\n\nconst QueryWrapper: React.FC<QueryWrapperProps> = ({\n  isLoading,\n  error,\n  children,\n  className = \"\",\n}) => {\n  if (isLoading) {\n    return (\n      <div className={className}>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={className}>\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any).message ?? error}\n        </Message>\n      </div>\n    );\n  }\n  return <div className={className}>{children}</div>;\n};\n\nexport default QueryWrapper;\n","import SubmitWrapper from './SubmitWrapper';\n\nexport default SubmitWrapper;\n","import React from \"react\";\nimport { LoadingSpinner, Message } from \"cookbooks-ui/_common\";\nimport styles from \"./SubmitWrapper.module.scss\";\n\ntype SubmitWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  success: string | undefined;\n  error: Error | null;\n  className?: string;\n  reverse?: boolean;\n}>;\n\nconst SubmitWrapper: React.FC<SubmitWrapperProps> = ({\n  isLoading,\n  error,\n  success,\n  children,\n  className = \"\",\n  reverse = false,\n}) => {\n  return (\n    <div\n      className={`${className} ${styles.wrapper} ${reverse && styles.reverse}`}\n    >\n      {children}\n      {isLoading && (\n        <LoadingSpinner\n          className={styles[\"loading-spinner\"]}\n          placement=\"inline\"\n        />\n      )}\n      {error ? (\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any)?.message ?? error}\n        </Message>\n      ) : (\n        success && (\n          <Message canDismiss={false} type=\"success\" scope=\"inline\">\n            {success}\n          </Message>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SubmitWrapper;\n","import { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\n\ntype DefaultSystem = {\n  source?: 'app';\n  systemId?: string;\n};\n\n/**\n * Computes the default execution system ID that will be used\n *\n * @param app\n * @returns\n */\nexport const computeDefaultSystem = (app: Apps.TapisApp): DefaultSystem => {\n  if (app.jobAttributes?.execSystemId) {\n    return {\n      source: 'app',\n      systemId: app.jobAttributes?.execSystemId,\n    };\n  }\n  return {\n    source: undefined,\n    systemId: undefined,\n  };\n};\n\ntype DefaultQueue = {\n  source?: 'app' | 'system' | 'app system';\n  queue?: string;\n};\n\n/**\n * Computes the logical queue that will be used, if the job does not\n * specify one\n *\n * @param job\n * @param app\n * @param systems\n * @returns\n */\nexport const computeDefaultQueue = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): DefaultQueue => {\n  // If the app specifies the logical queue, use that\n  if (app.jobAttributes?.execSystemLogicalQueue) {\n    return {\n      source: 'app',\n      queue: app.jobAttributes?.execSystemLogicalQueue,\n    };\n  }\n\n  // If the job specifies a system, look for its default logical queue\n  if (job.execSystemId) {\n    const selectedSystem = systems.find(\n      (system) => system.id === job.execSystemId\n    );\n    if (selectedSystem?.batchDefaultLogicalQueue) {\n      return {\n        source: 'system',\n        queue: selectedSystem.batchDefaultLogicalQueue,\n      };\n    }\n  }\n\n  // If the app specifies a system, look for its default logical queue\n  if (app.jobAttributes?.execSystemId) {\n    const appSystem = systems.find(\n      (system) => system.id === app.jobAttributes?.execSystemId\n    );\n    if (appSystem?.batchDefaultLogicalQueue) {\n      return {\n        source: 'app system',\n        queue: appSystem.batchDefaultLogicalQueue,\n      };\n    }\n  }\n\n  // Return a result that has no computed default logical queue\n  return {\n    source: undefined,\n    queue: undefined,\n  };\n};\n\ntype DefaultJobType = {\n  source: 'app' | 'app system' | 'system' | 'tapis';\n  jobType: Apps.JobTypeEnum;\n};\n\n/**\n * Determines the default jobType if one is not specified in the jobType field in a job\n * using the algorithm specified at:\n *\n * https://tapis.readthedocs.io/en/latest/technical/jobs.html#job-type\n *\n * @param job\n * @param app\n * @param systems\n * @returns\n */\nexport const computeDefaultJobType = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): DefaultJobType => {\n  if (app.jobType) {\n    return {\n      source: 'app',\n      jobType: app.jobType!,\n    };\n  }\n  if (job?.execSystemId) {\n    const selectedSystem = systems.find(\n      (system) => system.id === job.execSystemId\n    );\n    if (selectedSystem?.canRunBatch) {\n      return {\n        source: 'system',\n        jobType: Apps.JobTypeEnum.Batch,\n      };\n    }\n  }\n  if (app.jobAttributes?.execSystemId) {\n    const appSystem = systems.find(\n      (system) => system.id === app.jobAttributes?.execSystemId\n    );\n    if (appSystem?.canRunBatch) {\n      return {\n        source: 'app system',\n        jobType: Apps.JobTypeEnum.Batch,\n      };\n    }\n  }\n  return {\n    source: 'tapis',\n    jobType: Apps.JobTypeEnum.Fork,\n  };\n};\n\nexport enum ValidateExecSystemResult {\n  Complete = 'COMPLETE',\n  ErrorNoExecSystem = 'ERROR_NO_EXEC_SYSTEM',\n  ErrorExecSystemNotFound = 'ERROR_EXEC_SYSTEM_NOT_FOUND',\n  ErrorExecSystemNoQueues = 'ERROR_EXEC_SYSTEM_NO_QUEUES',\n  ErrorNoQueue = 'ERROR_NO_QUEUE',\n  ErrorQueueNotFound = 'ERROR_QUEUE_NOT_FOUND',\n}\n\nexport const validateExecSystem = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): ValidateExecSystemResult => {\n  const defaultSystem = computeDefaultSystem(app);\n\n  // Check that an exec system can be computed\n  if (!job.execSystemId && !defaultSystem?.systemId) {\n    return ValidateExecSystemResult.ErrorNoExecSystem;\n  }\n\n  const computedSystem = systems.find(\n    (system) => system.id === (job.execSystemId ?? defaultSystem?.systemId)\n  );\n  if (!computedSystem) {\n    return ValidateExecSystemResult.ErrorExecSystemNotFound;\n  }\n\n  // If the job will be a FORK job, skip queue validation\n  const computedJobType = computeDefaultJobType(job, app, systems);\n  if (\n    job.jobType !== Apps.JobTypeEnum.Batch &&\n    computedJobType.jobType === Apps.JobTypeEnum.Fork\n  ) {\n    return ValidateExecSystemResult.Complete;\n  }\n\n  // If the job will be a BATCH job, make sure that the selected execution system\n  // has queues\n  if (!computedSystem.batchLogicalQueues?.length) {\n    return ValidateExecSystemResult.ErrorExecSystemNoQueues;\n  }\n\n  const defaultQueue = computeDefaultQueue(job, app, systems);\n\n  // If the job type will be a BATCH job, ensure that a queue is specified\n  // If no queue exists, there must be a fallback to the app or system default\n  if (!job.execSystemLogicalQueue && !defaultQueue.queue) {\n    return ValidateExecSystemResult.ErrorNoQueue;\n  }\n\n  // Check to see that the logical queue selected exists on the selected system\n  const selectedSystem = systems.find(\n    (system) => system.id === (job.execSystemId ?? defaultSystem?.systemId)\n  );\n  if (\n    !selectedSystem?.batchLogicalQueues?.some(\n      (queue) =>\n        queue.name === (job.execSystemLogicalQueue ?? defaultQueue.queue)\n    )\n  ) {\n    return ValidateExecSystemResult.ErrorQueueNotFound;\n  }\n\n  return ValidateExecSystemResult.Complete;\n};\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Systems.GetSystemsRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystems>(() => api.getSystems(params));\n};\n\nexport default list;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (\n  params: Systems.GetSystemRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystem>(() => api.getSystem(params));\n};\n\nexport default details;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst listSchedulerProfiles = (basePath: string, jwt: string) => {\n  const api: Systems.SchedulerProfilesApi =\n    apiGenerator<Systems.SchedulerProfilesApi>(\n      Systems,\n      Systems.SchedulerProfilesApi,\n      basePath,\n      jwt\n    );\n  return errorDecoder<Systems.RespSchedulerProfiles>(() =>\n    api.getSchedulerProfiles()\n  );\n};\n\nexport default listSchedulerProfiles;\n","const QueryKeys = {\n  create: \"systems/create\",\n  list: \"systems/list\",\n  details: \"systems/details\",\n  listSchedulerProfiles: \"systems/listScehdulerProfiles\",\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Systems.GetSystemsRequest = {};\n\nconst useList = (\n  params: Systems.GetSystemsRequest = defaultParams,\n  options: QueryObserverOptions<Systems.RespSystems, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystems, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { details } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (\n  params: Systems.GetSystemRequest,\n  options: QueryObserverOptions<Systems.RespSystem, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystem, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { listSchedulerProfiles } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSchedulerProfiles = (\n  options: QueryObserverOptions<Systems.RespSchedulerProfiles, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSchedulerProfiles, Error>(\n    [QueryKeys.listSchedulerProfiles, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => listSchedulerProfiles(basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useSchedulerProfiles;\n","import React from \"react\";\nimport { useDetails } from \"tapis-hooks/systems\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { DescriptionList, Tabs, JSONDisplay } from \"cookbooks-ui/_common\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst SystemDetail: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const { data, isLoading, error } = useDetails({\n    systemId,\n    select: \"allAttributes\",\n  });\n  const system: Systems.TapisSystem | undefined = data?.result;\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{system?.id}</h3>\n      {system && (\n        <Tabs\n          tabs={{\n            Details: <DescriptionList data={system} />,\n            JSON: <JSONDisplay json={system} />,\n          }}\n        />\n      )}\n    </QueryWrapper>\n  );\n};\n\nexport default SystemDetail;\n","import React from \"react\";\nimport styles from \"./PageLayout.module.scss\";\n\ninterface LayoutProps {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  constrain?: boolean;\n}\nconst Layout: React.FC<LayoutProps> = ({\n  left,\n  right,\n  top,\n  bottom,\n  constrain,\n}) => (\n  <div\n    className={`${styles[\"layout-root\"]} ${constrain ? styles.constrain : \"\"}`}\n  >\n    {top}\n    <div\n      className={`${styles[\"layout-row\"]} ${constrain ? styles.constrain : \"\"}`}\n    >\n      {left}\n      {right}\n    </div>\n    {bottom}\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { SectionHeader as CommonSectionHeader } from \"cookbooks-ui/_common\";\nimport styles from \"./LayoutSections.module.scss\";\n\nexport const LayoutHeader: React.FC<\n  React.PropsWithChildren<{ type?: string }>\n> = ({ children, type }) => {\n  return (\n    <div className={type && styles[type]}>\n      <CommonSectionHeader>{children}</CommonSectionHeader>\n    </div>\n  );\n};\n\nexport const LayoutNavWrapper: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return <div className={styles.nav}>{children}</div>;\n};\n\nexport const LayoutBody: React.FC<\n  React.PropsWithChildren<{ constrain?: boolean }>\n> = ({ children, constrain }) => {\n  return (\n    <div className={`${styles.body} ${constrain ? styles.constrain : \"\"}`}>\n      <div className={styles.detail}>{children}</div>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Button, Badge } from \"reactstrap\";\nimport { Collapse as BootstrapCollapse } from \"reactstrap\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./Collapse.module.scss\";\n\ntype CollapseProperties = React.PropsWithChildren<{\n  title: string;\n  note?: string;\n  open?: boolean;\n  requiredText?: string;\n  isCollapsable?: boolean;\n  className?: string;\n}>;\n\nconst Collapse: React.FC<CollapseProperties> = ({\n  title,\n  note,\n  open,\n  requiredText,\n  className,\n  children,\n  isCollapsable = true,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>(open ?? false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <div className={className}>\n      <div className={styles.header}>\n        <div className={styles.title}>\n          {title}\n          {requiredText && (\n            <Badge\n              color=\"danger\"\n              style={{ marginLeft: \"10px\", marginBottom: \"10px\" }}\n            >\n              {requiredText}\n            </Badge>\n          )}\n        </div>\n        <div className={styles.controls}>\n          <div>{note ?? \"\"}</div>\n          {isCollapsable && (\n            <Button\n              color=\"link\"\n              className={styles.expand}\n              size=\"sm\"\n              onClick={toggle}\n            >\n              <Icon name={isOpen ? \"collapse\" : \"expand\"} />\n            </Button>\n          )}\n        </div>\n      </div>\n      <BootstrapCollapse isOpen={isOpen || !isCollapsable}>\n        {children}\n      </BootstrapCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","import { useMemo, useState, useCallback } from \"react\";\nimport { Input, FormGroup, Label } from \"reactstrap\";\nimport { CopyButton } from \"cookbooks-ui/_common\";\nimport styles from \"./JSONDisplay.module.scss\";\n\nconst simplifyObject = (obj: any) => {\n  const result = JSON.parse(JSON.stringify(obj));\n  Object.entries(result).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      if ((value as Array<any>).length === 0) {\n        delete result[key];\n      }\n      return;\n    }\n    if (typeof value === \"object\") {\n      const simplifiedValue = simplifyObject(value);\n      if (Object.entries(simplifiedValue).length === 0) {\n        delete result[key];\n      } else {\n        result[key] = simplifiedValue;\n      }\n      return;\n    }\n    if (value === undefined) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nconst convertSets = (obj: any): any => {\n  if (obj === undefined) {\n    return undefined;\n  }\n  if (Array.isArray(obj)) {\n    return (obj as Array<any>).map((value) => convertSets(value));\n  }\n  if (obj instanceof Set) {\n    return Array.from(obj).map((value) => convertSets(value));\n  }\n  if (typeof obj === \"object\") {\n    const result: any = {};\n    Object.entries(obj).forEach(([key, value]) => {\n      result[key] = convertSets(value);\n    });\n    return result;\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n\ntype JSONDisplayProps = {\n  json: any;\n  className?: string;\n};\n\nconst JSONDisplay: React.FC<JSONDisplayProps> = ({ json, className }) => {\n  const [simplified, setSimplified] = useState(false);\n  const onChange = useCallback(() => {\n    setSimplified(!simplified);\n  }, [setSimplified, simplified]);\n  const jsonString = useMemo(\n    () =>\n      JSON.stringify(\n        simplified ? simplifyObject(convertSets(json)) : convertSets(json),\n        null,\n        2\n      ),\n    [json, simplified]\n  );\n  return (\n    <div className={className}>\n      <div className={styles.controls}>\n        <FormGroup check>\n          <Label check size=\"sm\" className={`form-field__label`}>\n            <Input type=\"checkbox\" onChange={onChange} />\n            Simplified\n          </Label>\n        </FormGroup>\n        <CopyButton value={jsonString} />\n      </div>\n      <Input\n        type=\"textarea\"\n        value={jsonString}\n        className={styles.json}\n        rows=\"20\"\n        disabled={true}\n      />\n    </div>\n  );\n};\n\nexport default JSONDisplay;\n","import JSONDisplay from \"./JSONDisplay\";\n\nexport default JSONDisplay;\n","import Tabs from './Tabs';\n\nexport default Tabs;\n","import React, { useState } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport styles from \"./Tabs.module.scss\";\n\ntype TabsProps = {\n  tabs: { [name: string]: React.ReactNode };\n  className?: string;\n};\n\nconst Tabs: React.FC<TabsProps> = ({ tabs, className = \"\" }) => {\n  const tabNames = Object.keys(tabs);\n  const [activeTab, setActiveTab] = useState(tabNames[0] ?? \"\");\n\n  const getTabClassname = (tabName: string) => {\n    return `${styles.tab} ${activeTab === tabName ? styles.active : \"\"}`;\n  };\n\n  return (\n    <div className={className}>\n      <Nav tabs>\n        {tabNames.map((tabName) => (\n          <NavItem className={getTabClassname(tabName)} key={`tab-${tabName}`}>\n            <NavLink\n              onClick={() => setActiveTab(tabName)}\n              data-testid={`tab-${tabName}`}\n            >\n              {tabName}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        {tabNames.map((tabName) => (\n          <TabPane\n            tabId={tabName}\n            key={`tabcontent-${tabName}`}\n            className={styles.pane}\n          >\n            {tabs[tabName]}\n          </TabPane>\n        ))}\n      </TabContent>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./Navbar.module.scss\";\n\nexport const NavItem: React.FC<{ to: string; icon?: string }> = ({\n  to,\n  icon,\n  children,\n}) => (\n  <NavLink\n    to={to}\n    className={styles[\"nav-link\"]}\n    activeClassName={styles[\"active\"]}\n    exact={to === \"/\"}\n  >\n    <div className={styles[\"nav-content\"]}>\n      {icon && <Icon name={icon} />}\n      {/* we'll want to set name based on the app */}\n      <span className={styles[\"nav-text\"]}>{children}</span>\n    </div>\n  </NavLink>\n);\n\nconst Navbar: React.FC = ({ children }) => {\n  return <div className={`${styles[\"nav-list\"]}`}>{children}</div>;\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport styles from \"./Sidebar.module.scss\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { Divider } from \"@material-ui/core\";\n\nconst Sidebar: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  return (\n    <div className={styles.root}>\n      <Navbar>\n        <NavItem to=\"/\" icon=\"dashboard\">\n          Dashboard\n        </NavItem>\n        {!accessToken && (\n          <NavItem to=\"/login\" icon=\"user\">\n            Login\n          </NavItem>\n        )}\n        {accessToken && (\n          <>\n            <NavItem to=\"/systems\" icon=\"data-files\">\n              Systems\n            </NavItem>\n            <NavItem to=\"/apps\" icon=\"applications\">\n              Apps\n            </NavItem>\n            <NavItem to=\"/jobs\" icon=\"jobs\">\n              Jobs\n            </NavItem>\n            <Divider />\n            <span className={styles[\"nav-text\"]}>Cookbooks</span>\n            <NavItem to=\"/cookbooks/systems\" icon=\"data-files\">\n              Cookbooks Systems\n            </NavItem>\n            <NavItem to=\"/cookbooks/apps\" icon=\"applications\">\n              Cookbooks Apps\n            </NavItem>\n          </>\n        )}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { Authenticator } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\n// This helper takes the username and password and assembles an API call\nconst login = (\n  username: string,\n  password: string,\n  basePath: string\n): Promise<Authenticator.RespCreateToken> => {\n  const reqCreateToken: Authenticator.ReqCreateToken = {\n    username,\n    password,\n    grant_type: 'password',\n  };\n  const request: Authenticator.CreateTokenRequest = {\n    reqCreateToken,\n  };\n\n  const api: Authenticator.TokensApi = apiGenerator<Authenticator.TokensApi>(\n    Authenticator,\n    Authenticator.TokensApi,\n    basePath,\n    null\n  );\n\n  return errorDecoder(() => api.createToken(request));\n};\n\nexport default login;\n","const QueryKeys = {\n  login: 'authenticator/login',\n};\n\nexport default QueryKeys;\n","import { useMutation } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport { login } from 'tapis-api/authenticator';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\ntype LoginHookParams = {\n  username: string;\n  password: string;\n};\n\nconst useLogin = () => {\n  const { setAccessToken, basePath } = useTapisConfig();\n\n  // On successful login, save the token to the TapisContext state\n  const onSuccess = (response: Authenticator.RespCreateToken) => {\n    setAccessToken(response?.result?.access_token);\n  };\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, loginHelper is called to perform the operation, with an onSuccess callback\n  // passed as an option\n  const { mutate, isLoading, isError, isSuccess, error } = useMutation<\n    Authenticator.RespCreateToken,\n    Error,\n    LoginHookParams\n  >(\n    [QueryKeys.login, basePath],\n    ({ username, password }) => login(username, password, basePath),\n    { onSuccess }\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    error,\n    login: (username: string, password: string) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ username, password });\n    },\n    logout: () => setAccessToken(null),\n  };\n};\n\nexport default useLogin;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (params: Apps.GetAppsRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApps>(() => api.getApps(params));\n};\n\nexport default list;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst detail = (params: Apps.GetAppRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApp>(() => api.getApp(params));\n};\n\nexport default detail;\n","const QueryKeys = {\n  list: \"apps/list\",\n  create: \"apps/create\",\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Apps.GetAppsRequest = {\n  select: 'jobAttributes,version',\n};\n\nconst useList = (\n  params: Apps.GetAppsRequest = defaultParams,\n  options: QueryObserverOptions<Apps.RespApps, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApps, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { detail } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetail = (\n  params: Apps.GetAppRequest,\n  options: QueryObserverOptions<Apps.RespApp, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApp, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => detail({ ...params }, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetail;\n","import AppsNav from './AppsNav';\nexport default AppsNav;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/apps\";\nimport { Apps } from \"@tapis/tapis-typescript\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Button } from \"reactstrap\";\nimport { AppCreate } from \"./CreateApp\";\n\nconst AppsNav: React.FC = () => {\n  const { data, isLoading, error } = useList(\n    {},\n    { refetchOnWindowFocus: false }\n  );\n  const { url } = useRouteMatch();\n  const appList: Array<Apps.TapisApp> = data?.result ?? [];\n  console.log(url);\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {appList.length ? (\n          appList.map((app) => (\n            <NavItem\n              to={`/apps/${app.id}/${app.version}`}\n              icon=\"applications\"\n              key={app.id}\n            >\n              {`${app.id} v${app.version}`}\n            </NavItem>\n          ))\n        ) : (\n          <>\n            <i>No templates found</i>\n          </>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default AppsNav;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Jobs.GetJobListRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJobList>(() => api.getJobList(params));\n};\n\nexport default list;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (params: Jobs.GetJobRequest, basePath: string, jwt: string) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJob>(() => api.getJob(params));\n};\n\nexport default details;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst submit = (\n  request: Jobs.ReqSubmitJob,\n  basePath: string,\n  jwt: string\n): Promise<Jobs.RespSubmitJob> => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespSubmitJob>(() =>\n    api.submitJob({ reqSubmitJob: request })\n  );\n};\n\nexport default submit;\n","const QueryKeys = {\n  list: 'jobs/list',\n  details: 'jobs/details',\n  submit: 'jobs/submit',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Jobs.GetJobListRequest = {\n  orderBy: 'created(desc)',\n};\n\nconst useList = (\n  params: Jobs.GetJobListRequest = defaultParams,\n  options: QueryObserverOptions<Jobs.RespGetJobList, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Jobs.RespGetJobList, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { details } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (\n  jobUuid: string,\n  options: QueryObserverOptions<Jobs.RespGetJob, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const params: Jobs.GetJobRequest = { jobUuid };\n  const result = useQuery<Jobs.RespGetJob, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { submit } from 'tapis-api/jobs';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSubmit = (appId: string, appVersion: string) => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n      [QueryKeys.submit, appId, appVersion, basePath, jwt],\n      (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n    );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset, appId, appVersion]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Jobs.ReqSubmitJob) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useSubmit;\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const getIncompleteAppInputs = (\n  app: Apps.TapisApp\n): Array<Apps.AppFileInput> => {\n  return (\n    app.jobAttributes?.fileInputs?.filter(\n      (fileInput) => !fileInput.sourceUrl\n    ) ?? []\n  );\n};\n\nexport const getIncompleteAppInputsOfType = (\n  app: Apps.TapisApp,\n  inputType: Apps.FileInputModeEnum\n): Array<Apps.AppFileInput> => {\n  return getIncompleteAppInputs(app).filter(\n    (fileInput) => fileInput.inputMode === inputType\n  );\n};\n\nexport const generateFileInputFromAppInput = (\n  input: Apps.AppFileInput\n): Jobs.JobFileInput => ({\n  name: input.name,\n  sourceUrl: input.sourceUrl,\n  targetPath: input.targetPath,\n  description: input.description,\n  autoMountLocal: input.autoMountLocal,\n});\n\nexport const generateRequiredFileInputsFromApp = (\n  app: Apps.TapisApp\n): Array<Jobs.JobFileInput> => {\n  const requiredInputs: Array<Apps.AppFileInput> =\n    app.jobAttributes?.fileInputs?.filter(\n      (fileInput) => fileInput.inputMode === Apps.FileInputModeEnum.Required\n    ) ?? [];\n  const fileInputs: Array<Jobs.JobFileInput> = requiredInputs.map(\n    (appFileInput) => {\n      return generateFileInputFromAppInput(appFileInput);\n    }\n  );\n  return fileInputs;\n};\n\nexport const getAppInputsIncludedByDefault = (\n  appFileInputs: Array<Apps.AppFileInput>,\n  jobFileInputs: Array<Jobs.JobFileInput>\n) => {\n  return appFileInputs.filter((appFileInput) => {\n    const includedInJob = jobFileInputs.some(\n      (jobFileInput) => jobFileInput.name === appFileInput.name\n    );\n    return (\n      appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n      !!appFileInput.sourceUrl &&\n      !includedInJob\n    );\n  });\n};\n\n/**\n * @param appFileInputs\n * @param jobFileInputs\n * @returns An array of jobFileInputs that are underspecified\n */\nexport const getIncompleteJobInputs = (\n  appFileInputs: Array<Apps.AppFileInput>,\n  jobFileInputs: Array<Jobs.JobFileInput>\n) => {\n  // Get job inputs that are REQUIRED in the app but do not specify sourceUrl\n  const incompleteRequiredAppInputs: Array<Apps.AppFileInput> =\n    appFileInputs.filter(\n      (appFileInput) =>\n        appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n        !appFileInput.sourceUrl\n    );\n  const incompleteRequiredJobInputs: Array<Jobs.JobFileInput> =\n    jobFileInputs.filter((jobFileInput) => {\n      // Is this jobFileInput part of required app inputs?\n      const requiredInApp = incompleteRequiredAppInputs.some(\n        (appInput) => appInput.name === jobFileInput.name\n      );\n      if (requiredInApp) {\n        return !jobFileInput.sourceUrl;\n      } else {\n        return false;\n      }\n    });\n\n  // Get job inputs that are OPTIONAL in the app but do not specify sourceUrl\n  const incompleteOptionalAppInputs: Array<Apps.AppFileInput> =\n    appFileInputs.filter(\n      (appFileInput) =>\n        appFileInput.inputMode === Apps.FileInputModeEnum.Optional &&\n        !appFileInput.sourceUrl\n    );\n  const incompleteOptionalJobInputs: Array<Jobs.JobFileInput> =\n    jobFileInputs.filter((jobFileInput) => {\n      // Is this jobFileInput part of optional app inputs?\n      const optionalInApp = incompleteOptionalAppInputs.some(\n        (appInput) => appInput.name === jobFileInput.name\n      );\n      if (optionalInApp) {\n        return !jobFileInput.sourceUrl;\n      } else {\n        return false;\n      }\n    });\n\n  // Get job inputs that are neither OPTIONAL or REQUIRED, but are incomplete\n  const incompleteUserInputs: Array<Jobs.JobFileInput> = jobFileInputs.filter(\n    (jobFileInput) => {\n      // Is this jobFileInput neither OPTIONAL or REQUIRED?\n      const userInput =\n        !incompleteRequiredAppInputs.some(\n          (appInput) => appInput.name === jobFileInput.name\n        ) &&\n        !incompleteOptionalAppInputs.some(\n          (appInput) => appInput.name === jobFileInput.name\n        );\n      if (userInput) {\n        return !jobFileInput.sourceUrl || !jobFileInput.targetPath;\n      } else {\n        return false;\n      }\n    }\n  );\n\n  return incompleteRequiredJobInputs\n    .concat(incompleteOptionalJobInputs)\n    .concat(incompleteUserInputs);\n};\n\nexport const fileInputsComplete = (\n  app: Apps.TapisApp,\n  fileInputs: Array<Jobs.JobFileInput>\n) => {\n  // Check to make sure job has filled in all REQUIRED app inputs that are missing sourceUrl\n  const incompleteRequiredInputs: Array<Apps.AppFileInput> =\n    getIncompleteAppInputsOfType(app, Apps.FileInputModeEnum.Required);\n  const hasIncompleteRequiredInput: boolean = incompleteRequiredInputs.some(\n    (requiredInput) => {\n      // Find JobFileInput with name matching the required input\n      const jobFileInput: Jobs.JobFileInput | undefined = fileInputs.find(\n        (jobFileInput) => jobFileInput.name === requiredInput.name\n      );\n      if (!jobFileInput) {\n        // Matching jobFileInput not found, therefore there is an incomplete required input\n        return true;\n      } else {\n        // Verify that this input has a sourceUrl specified\n        return !jobFileInput.sourceUrl;\n      }\n    }\n  );\n  if (hasIncompleteRequiredInput) {\n    return false;\n  }\n\n  // Check to see if an OPTIONAL input was included but not fully specified\n  const optionalAppInputs: Array<Apps.AppFileInput> = getIncompleteAppInputs(\n    app\n  ).filter((appFileInput) => !appFileInput.sourceUrl);\n  // get any optional app file input that was included in the job.\n  const optionalJobInputs: Array<Jobs.JobFileInput> =\n    fileInputs.filter((jobFileInput) =>\n      optionalAppInputs.some(\n        (optionalAppInput) => jobFileInput.name === optionalAppInput.name\n      )\n    ) ?? [];\n  const hasIncompleteOptionalInput: boolean =\n    !!optionalJobInputs.length &&\n    optionalJobInputs.some((jobInput) => !jobInput.sourceUrl);\n  if (hasIncompleteOptionalInput) {\n    return false;\n  }\n\n  // Check to see if any app inputs that did not exist\n  const namedInputs =\n    app.jobAttributes?.fileInputs?.map((input) => input.name) ?? [];\n  const otherInputs: Array<Jobs.JobFileInput> =\n    fileInputs.filter(\n      (jobInput) => !namedInputs.some((name) => name === jobInput.name)\n    ) ?? [];\n  if (\n    otherInputs.some(\n      (otherInput) => !otherInput.sourceUrl || !otherInput.targetPath\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const getIncompleteAppInputArrays = (\n  app: Apps.TapisApp\n): Array<Apps.AppFileInputArray> => {\n  return (\n    app.jobAttributes?.fileInputArrays?.filter(\n      (fileInput) => !fileInput.sourceUrls\n    ) ?? []\n  );\n};\n\nexport const getIncompleteAppInputArraysOfType = (\n  app: Apps.TapisApp,\n  inputType: Apps.FileInputModeEnum\n): Array<Apps.AppFileInputArray> => {\n  return getIncompleteAppInputArrays(app).filter(\n    (fileInput) => fileInput.inputMode === inputType\n  );\n};\n\nexport const generateFileInputArrayFromAppInput = (\n  input: Apps.AppFileInputArray\n): Jobs.JobFileInputArray => ({\n  name: input.name,\n  sourceUrls: input.sourceUrls ?? [],\n  targetDir: input.targetDir,\n  description: input.description,\n});\n\nexport const generateRequiredFileInputArraysFromApp = (\n  app: Apps.TapisApp\n): Array<Jobs.JobFileInput> => {\n  const requiredInputArrays: Array<Apps.AppFileInputArray> =\n    app.jobAttributes?.fileInputArrays?.filter(\n      (fileInput) => fileInput.inputMode === Apps.FileInputModeEnum.Required\n    ) ?? [];\n  const fileInputs: Array<Jobs.JobFileInput> = requiredInputArrays.map(\n    (appFileInputArray) => {\n      return generateFileInputArrayFromAppInput(appFileInputArray);\n    }\n  );\n  return fileInputs;\n};\n\nexport const getAppInputArraysIncludedByDefault = (\n  appFileInputArrays: Array<Apps.AppFileInputArray>,\n  jobFileInputArrays: Array<Jobs.JobFileInputArray>\n) => {\n  return appFileInputArrays.filter((appFileInputArray) => {\n    const includedInJob = jobFileInputArrays.some(\n      (jobFileInputArray) => jobFileInputArray.name === appFileInputArray.name\n    );\n    return (\n      appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n      !!appFileInputArray.sourceUrls &&\n      !includedInJob\n    );\n  });\n};\n\n/**\n * @param appFileInputsArrays\n * @param jobFileInputsArrays\n * @returns An array of JobFileInputArrays that are underspecified\n */\nexport const getIncompleteJobInputArrays = (\n  appFileInputArrays: Array<Apps.AppFileInputArray>,\n  jobFileInputArrays: Array<Jobs.JobFileInputArray>\n): Array<Jobs.JobFileInputArray> => {\n  // Get job input arrays that are REQUIRED in the app but do not specify sourceUrl\n  const incompleteRequiredAppInputArrays: Array<Apps.AppFileInputArray> =\n    appFileInputArrays.filter(\n      (appFileInputArray) =>\n        appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n        !appFileInputArray.sourceUrls\n    );\n  const incompleteRequiredJobInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray part of required app input arrays?\n      const requiredInApp = incompleteRequiredAppInputArrays.some(\n        (appInputArray) => appInputArray.name === jobFileInputArray.name\n      );\n      if (requiredInApp) {\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      } else {\n        return false;\n      }\n    });\n\n  // Get job input arrays that are OPTIONAL in the app but do not specify sourceUrl\n  const incompleteOptionalAppInputArrays: Array<Apps.AppFileInputArray> =\n    appFileInputArrays.filter(\n      (appFileInputArray) =>\n        appFileInputArray.inputMode === Apps.FileInputModeEnum.Optional &&\n        !appFileInputArray.sourceUrls\n    );\n  const incompleteOptionalJobInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray part of optional app input arrays?\n      const optionalInApp = incompleteOptionalAppInputArrays.some(\n        (appInputArray) => appInputArray.name === jobFileInputArray.name\n      );\n      if (optionalInApp) {\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      } else {\n        return false;\n      }\n    });\n\n  // Get job input arrays that are neither OPTIONAL or REQUIRED, but are incomplete\n  const incompleteUserInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray neither OPTIONAL or REQUIRED?\n      const userInput =\n        !incompleteRequiredAppInputArrays.some(\n          (appInputArray) => appInputArray.name === jobFileInputArray.name\n        ) &&\n        !incompleteOptionalAppInputArrays.some(\n          (appInputArray) => appInputArray.name === jobFileInputArray.name\n        );\n      if (userInput) {\n        return (\n          !jobFileInputArray.sourceUrls ||\n          !jobFileInputArray.sourceUrls.length ||\n          !jobFileInputArray.targetDir\n        );\n      } else {\n        return false;\n      }\n    });\n\n  return incompleteRequiredJobInputArrays\n    .concat(incompleteOptionalJobInputArrays)\n    .concat(incompleteUserInputArrays);\n};\n\nexport const fileInputArraysComplete = (\n  app: Apps.TapisApp,\n  fileInputArrays: Array<Jobs.JobFileInputArray>\n): boolean => {\n  // Check to make sure job has filled in all REQUIRED app inputs that are missing sourceUrl\n  const incompleteRequiredInputs: Array<Apps.AppFileInputArray> =\n    getIncompleteAppInputArraysOfType(app, Apps.FileInputModeEnum.Required);\n  const hasIncompleteRequiredInput: boolean = incompleteRequiredInputs.some(\n    (requiredInputArray) => {\n      // Find JobFileInputArray with name matching the required input\n      const jobFileInputArray: Jobs.JobFileInputArray | undefined =\n        fileInputArrays.find(\n          (jobFileInputArray) =>\n            jobFileInputArray.name === requiredInputArray.name\n        );\n      if (!jobFileInputArray) {\n        // Matching jobFileInput not found, therefore there is an incomplete required input\n        return true;\n      } else {\n        // Verify that this input has a sourceUrl specified\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      }\n    }\n  );\n  if (hasIncompleteRequiredInput) {\n    return false;\n  }\n\n  // Check to see if an OPTIONAL input was included but not fully specified\n  const optionalAppInputArrays: Array<Apps.AppFileInputArray> =\n    getIncompleteAppInputArrays(app).filter(\n      (appFileInput) => !appFileInput.sourceUrls\n    );\n  // get any optional app file input that was included in the job.\n  const optionalJobInputArrays: Array<Jobs.JobFileInputArray> =\n    fileInputArrays.filter((jobFileInputArray) =>\n      optionalAppInputArrays.some(\n        (optionalAppInputArray) =>\n          jobFileInputArray.name === optionalAppInputArray.name\n      )\n    ) ?? [];\n  const hasIncompleteOptionalInputArray: boolean =\n    !!optionalJobInputArrays.length &&\n    optionalJobInputArrays.some((jobInput) => !jobInput.sourceUrls);\n  if (hasIncompleteOptionalInputArray) {\n    return false;\n  }\n\n  // Check to see if any app inputs that did not exist\n  const namedInputs =\n    app.jobAttributes?.fileInputArrays?.map((input) => input.name) ?? [];\n  const otherInputArrays: Array<Jobs.JobFileInputArray> =\n    fileInputArrays.filter(\n      (jobInputArray) =>\n        !namedInputs.some((name) => name === jobInputArray.name)\n    ) ?? [];\n  if (\n    otherInputArrays.some(\n      (otherInputArray) =>\n        !otherInputArray.sourceUrls || !otherInputArray.targetDir\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const generateJobArg = (argSpec: Apps.AppArgSpec): Jobs.JobArgSpec => {\n  return {\n    arg: argSpec.arg,\n    description: argSpec.description,\n    include: argSpec.inputMode !== Apps.ArgInputModeEnum.IncludeOnDemand,\n    name: argSpec.name,\n  };\n};\n\nexport const getArgMode = (\n  name: string,\n  argSpecs: Array<Apps.AppArgSpec>\n): Apps.ArgInputModeEnum | undefined => {\n  const spec: Apps.AppArgSpec | undefined = argSpecs.find(\n    (argSpec) => argSpec.name === name\n  );\n  if (!spec) {\n    return undefined;\n  }\n  return spec.inputMode;\n};\n\nexport const generateJobArgsFromSpec = (\n  argSpecs: Array<Apps.AppArgSpec>\n): Array<Jobs.JobArgSpec> => {\n  return argSpecs.map((argSpec) => generateJobArg(argSpec));\n};\n","import { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\nimport { generateRequiredFileInputsFromApp } from 'tapis-api/utils/jobFileInputs';\nimport { generateRequiredFileInputArraysFromApp } from 'tapis-api/utils/jobFileInputArrays';\nimport { generateJobArgsFromSpec } from 'tapis-api/utils/jobArgs';\n\nconst generateJobDefaults = ({\n  app,\n  systems,\n}: {\n  app?: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n}): Partial<Jobs.ReqSubmitJob> => {\n  if (!app) {\n    return {};\n  }\n\n  const defaultValues: Partial<Jobs.ReqSubmitJob> = {\n    name: `${app.id}-${app.version}`,\n    description: app.description,\n    appId: app.id,\n    appVersion: app.version,\n    archiveOnAppError: app.jobAttributes?.archiveOnAppError ?? true,\n    archiveSystemId: app.jobAttributes?.archiveSystemId,\n    archiveSystemDir: app.jobAttributes?.archiveSystemDir,\n    nodeCount: app.jobAttributes?.nodeCount,\n    coresPerNode: app.jobAttributes?.coresPerNode,\n    jobType: app.jobType,\n    memoryMB: app.jobAttributes?.memoryMB,\n    maxMinutes: app.jobAttributes?.maxMinutes,\n    isMpi: app.jobAttributes?.isMpi,\n    mpiCmd: app.jobAttributes?.mpiCmd,\n    cmdPrefix: app.jobAttributes?.cmdPrefix,\n    fileInputs: generateRequiredFileInputsFromApp(app),\n    fileInputArrays: generateRequiredFileInputArraysFromApp(app),\n    parameterSet: {\n      appArgs: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.appArgs ?? []\n      ),\n      containerArgs: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.containerArgs ?? []\n      ),\n      schedulerOptions: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.schedulerOptions ?? []\n      ),\n      archiveFilter: app.jobAttributes?.parameterSet?.archiveFilter,\n      envVariables: app.jobAttributes?.parameterSet?.envVariables,\n    },\n  };\n  return defaultValues;\n};\n\nexport default generateJobDefaults;\n","import { Message } from \"cookbooks-ui/_common\";\n\ntype JobStartSummaryProps = {\n  field?: string;\n  error?: string;\n};\n\nconst JobStartSummary: React.FC<JobStartSummaryProps> = ({ field, error }) => {\n  return (\n    <div>\n      {field ? (\n        <div>{field}</div>\n      ) : (\n        <Message type=\"error\" canDismiss={false} scope=\"inline\">\n          {error ?? \"\"}\n        </Message>\n      )}\n    </div>\n  );\n};\n\nexport default JobStartSummary;\n","import React, { useReducer, useContext, useEffect } from \"react\";\n\nexport type BuilderContextType<T> = {\n  data: Partial<T>;\n  add: (slice: Partial<T>) => void;\n  set: (slice: Partial<T>) => void;\n  clear: () => void;\n};\n\n/**\n * Creates a Provider and context hook for a given data type\n * that builds a structure from slices of the provided data type\n *\n * @returns A Provider and a context hook\n */\nconst withBuilder = <T extends unknown>() => {\n  const context = React.createContext<BuilderContextType<T>>({\n    data: {},\n    add: (slice: Partial<T>) => {},\n    set: (slice: Partial<T>) => {},\n    clear: () => {},\n  });\n\n  const useBuilderContext = () => useContext(context);\n  const Provider: React.FC<React.PropsWithChildren<{ value?: Partial<T> }>> = ({\n    children,\n    value,\n  }) => {\n    const reducer = (\n      state: Partial<T>,\n      payload: {\n        action: \"add\" | \"set\" | \"clear\";\n        slice?: Partial<T>;\n      }\n    ) => {\n      const { action, slice } = payload;\n      switch (action) {\n        case \"add\":\n          return { ...state, ...slice };\n        case \"set\":\n          return { ...slice };\n        case \"clear\":\n          return {};\n        default:\n          return { ...state };\n      }\n    };\n    const [data, dispatch] = useReducer(reducer, { ...value });\n\n    useEffect(() => {\n      dispatch({ action: \"set\", slice: value });\n    }, [dispatch, value]);\n\n    const contextValue: BuilderContextType<T> = {\n      data,\n      add: (slice) => dispatch({ action: \"add\", slice }),\n      set: (slice) => dispatch({ action: \"set\", slice }),\n      clear: () => dispatch({ action: \"clear\" }),\n    };\n    return <context.Provider value={contextValue}>{children}</context.Provider>;\n  };\n\n  return {\n    useBuilderContext,\n    Provider,\n  };\n};\n\nexport default withBuilder;\n","import React, { useContext } from \"react\";\nimport { Jobs, Apps, Systems } from \"@tapis/tapis-typescript\";\nimport withBuilder from \"cookbooks-ui/utils/withBuilder\";\n\ntype JobLauncherContextType = {\n  app: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n  schedulerProfiles: Array<Systems.SchedulerProfile>;\n};\n\nconst JobLauncherContext = React.createContext<JobLauncherContextType>({\n  app: {},\n  systems: [],\n  schedulerProfiles: [],\n});\n\nconst { useBuilderContext, Provider } = withBuilder<Jobs.ReqSubmitJob>();\n\nexport const useJobLauncher = () => {\n  const { data, add, set, clear } = useBuilderContext();\n  const { app, systems, schedulerProfiles } = useContext(JobLauncherContext);\n  return {\n    job: data,\n    add,\n    set,\n    clear,\n    app,\n    systems,\n    schedulerProfiles,\n  };\n};\n\ntype JobLauncherProviderProps = {\n  value: {\n    defaultValues: Partial<Jobs.ReqSubmitJob>;\n    app: Apps.TapisApp;\n    systems: Array<Systems.TapisSystem>;\n    schedulerProfiles: Array<Systems.SchedulerProfile>;\n  };\n};\n\nexport const JobLauncherProvider: React.FC<\n  React.PropsWithChildren<JobLauncherProviderProps>\n> = ({ value, children }) => {\n  const { app, systems, defaultValues, schedulerProfiles } = value;\n  return (\n    <JobLauncherContext.Provider value={{ app, systems, schedulerProfiles }}>\n      {Provider({ value: defaultValues, children })}\n    </JobLauncherContext.Provider>\n  );\n};\n\nexport default useJobLauncher;\n","import { StepSummaryField, useJobLauncher } from \"../components\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport { JobStep, JobLauncherProviderParams } from \"../\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\n\nexport const JobStart: React.FC = () => {\n  const { app } = useJobLauncher();\n  return (\n    <div>\n      <h2>\n        Launching {app.id} v{app.version}\n      </h2>\n      <FormikInput\n        name=\"name\"\n        required={true}\n        label=\"Name\"\n        description=\"A name for this job\"\n      />\n      <FormikInput\n        name=\"description\"\n        required={false}\n        label=\"Description\"\n        description=\"A description of this job\"\n      />\n    </div>\n  );\n};\n\nexport const JobStartSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const { name, description, appId, appVersion } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={name}\n        error=\"A job name is required\"\n        key=\"job-start-name-summary\"\n      />\n      <StepSummaryField\n        field={description}\n        key=\"job-start-description-summary\"\n      />\n      <div>\n        <i>\n          Application: {appId} v{appVersion}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst generateInitialValues = ({\n  job,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  name: job.name,\n  description: job.description,\n});\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required().min(1).max(64),\n  description: Yup.string(),\n});\n\nconst step: JobStep = {\n  id: \"start\",\n  name: \"Job Name\",\n  render: <JobStart />,\n  summary: <JobStartSummary />,\n  generateInitialValues,\n  validationSchema,\n};\n\nexport default step;\n","export const upperCaseFirstLetter = (str: string) => {\n  const lower = str.toLowerCase();\n  return `${lower.slice(0, 1).toUpperCase()}${lower.slice(1)}`;\n};\n\nexport const capitalize = (str: string) => {\n  return str!.charAt(0).toUpperCase() + str!.slice(1);\n};\n\nexport const reduceRecord = (record: Record<'id', string>) => {\n  const { id, ...contents } = record;\n  return Object.values(contents).reduce(\n    (prev, current) => ((prev as string) + current) as string,\n    ''\n  );\n};\n","import { useMemo, useEffect, useState } from \"react\";\nimport { Apps, Jobs, Systems } from \"@tapis/tapis-typescript\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport {\n  FormikInput,\n  FormikSelect,\n} from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { useFormikContext } from \"formik\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  computeDefaultQueue,\n  computeDefaultSystem,\n  computeDefaultJobType,\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from \"tapis-api/utils/jobExecSystem\";\nimport { capitalize } from \"./utils\";\nimport * as Yup from \"yup\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { JobStep, JobLauncherProviderParams } from \"../\";\n\nconst getLogicalQueues = (system?: Systems.TapisSystem) =>\n  system?.batchLogicalQueues ?? [];\n\nconst getSystem = (systems: Array<Systems.TapisSystem>, systemId?: string) =>\n  !!systemId ? systems.find((system) => system.id === systemId) : undefined;\n\nconst SystemSelector: React.FC = () => {\n  const { setFieldValue, values } = useFormikContext();\n  const { job, app, systems } = useJobLauncher();\n\n  const [queues, setQueues] = useState<Array<Systems.LogicalQueue>>(\n    getLogicalQueues(getSystem(systems, job.execSystemId))\n  );\n\n  const [selectableSystems, setSelectableSystems] =\n    useState<Array<Systems.TapisSystem>>(systems);\n\n  const {\n    defaultSystemLabel,\n    defaultQueueLabel,\n    defaultJobTypeLabel,\n    isBatch,\n    selectedSystem,\n  } = useMemo(() => {\n    // Compute labels for when undefined values are selected for systems, queues or jobType\n    const { source: systemSource, systemId } = computeDefaultSystem(app);\n    const defaultSystemLabel = systemSource\n      ? `App default (${systemId})`\n      : \"Please select a system\";\n    const { source: queueSource, queue } = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultQueueLabel = queueSource\n      ? `${capitalize(queueSource)} default (${queue})`\n      : \"Please select a queue\";\n    const { source: jobTypeSource, jobType } = computeDefaultJobType(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultJobTypeLabel = `${capitalize(\n      jobTypeSource\n    )} default (${jobType})`;\n    const isBatch =\n      (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch ||\n      jobType === Apps.JobTypeEnum.Batch;\n    const selectedSystem = (values as Jobs.ReqSubmitJob)?.execSystemId;\n    return {\n      defaultSystemLabel,\n      defaultQueueLabel,\n      defaultJobTypeLabel,\n      isBatch,\n      selectedSystem,\n    };\n  }, [values, app, systems]);\n\n  useEffect(() => {\n    // Handle changes to selectable execSystems and execSystemLogicalQueues\n    const validSystems = isBatch\n      ? systems.filter((system) => !!system.batchLogicalQueues?.length)\n      : systems;\n    setSelectableSystems(validSystems);\n    if (!validSystems.some((system) => system.id === selectedSystem)) {\n      // If current system is invalid (like a system with no logical queues for a batch job)\n      // then use the application default\n      setFieldValue(\"execSystemId\", undefined);\n    }\n    if (!isBatch) {\n      setFieldValue(\"execSystemLogicalQueue\", undefined);\n    }\n    const system = getSystem(\n      validSystems,\n      selectedSystem ?? app.jobAttributes?.execSystemId\n    );\n    const queues = getLogicalQueues(system);\n    setQueues(queues);\n    setFieldValue(\"execSystemLogicalQueue\", undefined);\n  }, [\n    systems,\n    isBatch,\n    app,\n    selectedSystem,\n    setFieldValue,\n    setSelectableSystems,\n    setQueues,\n  ]);\n\n  return (\n    <div className={fieldArrayStyles.item}>\n      <FormikSelect\n        name=\"execSystemId\"\n        description=\"The execution system for this job\"\n        label=\"Execution System\"\n        required={true}\n        data-testid=\"execSystemId\"\n      >\n        <option value={undefined} label={defaultSystemLabel} />\n        {selectableSystems.map((system) => (\n          <option\n            value={system.id}\n            key={`execsystem-select-${system.id}`}\n            label={system.id}\n            data-testid={`execSystemId-${system.id}`}\n          />\n        ))}\n      </FormikSelect>\n      <FormikSelect\n        name=\"jobType\"\n        label=\"Job Type\"\n        description=\"Jobs can either be Batch or Fork\"\n        required={true}\n        data-testid=\"jobType\"\n      >\n        <option value={undefined} label={defaultJobTypeLabel} />\n        <option value={Apps.JobTypeEnum.Batch} label=\"Batch\" />\n        <option value={Apps.JobTypeEnum.Fork} label=\"Fork\" />\n      </FormikSelect>\n      {isBatch && (\n        <FormikSelect\n          name=\"execSystemLogicalQueue\"\n          description=\"The batch queue on this execution system\"\n          label=\"Batch Logical Queue\"\n          required={false}\n          disabled={queues.length === 0}\n          data-testid=\"execSystemLogicalQueue\"\n        >\n          <option value={undefined} label={defaultQueueLabel} />\n          {queues.map((queue) => (\n            <option\n              value={queue.name}\n              key={`queue-select-${queue.name}`}\n              label={queue.name}\n            />\n          ))}\n        </FormikSelect>\n      )}\n    </div>\n  );\n};\n\nconst ExecSystemQueueOptions: React.FC = () => {\n  const { errors } = useFormikContext();\n  const queueErrors = errors as QueueErrors;\n  const hasErrors =\n    queueErrors.coresPerNode ||\n    queueErrors.maxMinutes ||\n    queueErrors.memoryMB ||\n    queueErrors.nodeCount;\n  return (\n    <Collapse title=\"Queue Parameters\" isCollapsable={!hasErrors}>\n      <FormikInput\n        name=\"nodeCount\"\n        label=\"Node Count\"\n        description=\"The number of nodes to use for this job\"\n        required={false}\n      />\n      <FormikInput\n        name=\"coresPerNode\"\n        label=\"Cores Per Node\"\n        description=\"The number of cores to use per node\"\n        required={false}\n      />\n      <FormikInput\n        name=\"memoryMB\"\n        label=\"Memory, in Megabytes\"\n        description=\"The amount of memory to use per node in megabytes\"\n        required={false}\n      />\n      <FormikInput\n        name=\"maxMinutes\"\n        label=\"Maximum Minutes\"\n        description=\"The maximum amount of time in minutes for this job\"\n        required={false}\n      />\n    </Collapse>\n  );\n};\n\nexport const ExecOptions: React.FC = () => {\n  const { values } = useFormikContext();\n\n  const isBatch = useMemo(\n    () => (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch,\n    [values]\n  );\n\n  return (\n    <div>\n      <h2>Execution Options</h2>\n      <SystemSelector />\n      {isBatch && <ExecSystemQueueOptions />}\n      {/* <MPIOptions /> */}\n      {/* <ExecSystemDirs /> */}\n    </div>\n  );\n};\n\nexport const ExecOptionsSummary: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const { isMpi, mpiCmd, cmdPrefix } = job;\n\n  const { computedSystem, computedQueue, computedJobType } = useMemo(() => {\n    const { execSystemLogicalQueue, execSystemId, jobType } = job;\n    const computedSystem = execSystemId ?? computeDefaultSystem(app)?.systemId;\n    const computedQueue =\n      execSystemLogicalQueue ?? computeDefaultQueue(job, app, systems)?.queue;\n    const computedJobType =\n      jobType ?? computeDefaultJobType(job, app, systems)?.jobType;\n    return {\n      computedSystem,\n      computedQueue,\n      computedJobType,\n    };\n  }, [job, app, systems]);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={computedSystem}\n        error=\"An execution system is required\"\n        key=\"execution-system-id-summary\"\n      />\n      {computedJobType === Apps.JobTypeEnum.Batch && (\n        <StepSummaryField\n          field={computedQueue}\n          error=\"A logical queue is required\"\n          key=\"execution-system-queue-summary\"\n        />\n      )}\n      <StepSummaryField\n        field={`${\n          isMpi\n            ? `MPI Command: ${mpiCmd ?? \"system default\"}`\n            : `Command Prefix: ${cmdPrefix ?? \"system default\"}`\n        }`}\n        key=\"execution-mpi-summary\"\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object({\n  execSystemId: Yup.string(),\n  execSystemLogicalQueue: Yup.string(),\n  execSystemExecDir: Yup.string(),\n  execSystemInputDir: Yup.string(),\n  execSystemOutputDir: Yup.string(),\n  jobType: Yup.string(),\n  nodeCount: Yup.number(),\n  coresPerNode: Yup.number(),\n  memoryMB: Yup.number(),\n  maxMinutes: Yup.number(),\n  isMpi: Yup.boolean(),\n  mpiCmd: Yup.string(),\n  cmdPrefix: Yup.string(),\n});\n\ntype QueueErrors = {\n  nodeCount?: string;\n  coresPerNode?: string;\n  memoryMB?: string;\n  maxMinutes?: string;\n  execSystemId?: string;\n  execSystemLogicalQueue?: string;\n};\n\nconst validateThunk = ({ app, systems }: JobLauncherProviderParams) => {\n  return (values: Partial<Jobs.ReqSubmitJob>) => {\n    const {\n      execSystemId,\n      execSystemLogicalQueue,\n      nodeCount,\n      coresPerNode,\n      memoryMB,\n      maxMinutes,\n      jobType,\n    } = values;\n    const errors: QueueErrors = {};\n\n    const validation = validateExecSystem(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    if (validation === ValidateExecSystemResult.ErrorNoExecSystem) {\n      errors.execSystemId = `This app does not have a default execution system. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNotFound) {\n      errors.execSystemId = `The specified exec system cannot be found`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNoQueues) {\n      errors.execSystemId = `The specified exec system is not capable of batch jobs`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorNoQueue) {\n      errors.execSystemLogicalQueue = `Neither the application nor the selected system specifies a default queue. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorQueueNotFound) {\n      errors.execSystemLogicalQueue = `The specified queue cannot be found on the selected system`;\n    }\n\n    // Skip queue validation if the job is a FORK job\n    if (\n      jobType === Apps.JobTypeEnum.Fork ||\n      computeDefaultJobType(values as Partial<Jobs.ReqSubmitJob>, app, systems)\n        ?.jobType === Apps.JobTypeEnum.Fork\n    ) {\n      return errors;\n    }\n\n    const computedExecSystem = computeDefaultSystem(app);\n    const computedLogicalQueue = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const selectedSystem = systems.find(\n      (system) => system.id === (execSystemId ?? computedExecSystem.systemId)\n    );\n\n    if (!selectedSystem?.batchLogicalQueues?.length) {\n      errors.execSystemLogicalQueue = `The selected system does not have any batch logical queues`;\n      return errors;\n    }\n\n    const queue = selectedSystem?.batchLogicalQueues?.find(\n      (queue) =>\n        queue.name === (execSystemLogicalQueue ?? computedLogicalQueue?.queue)\n    );\n    if (!queue) {\n      errors.execSystemLogicalQueue = `The specified queue does not exist on the selected execution system`;\n      return errors;\n    }\n\n    if (!!nodeCount) {\n      if (queue?.maxNodeCount && nodeCount > queue?.maxNodeCount) {\n        errors.nodeCount = `The maximum number of nodes for this queue is ${queue?.maxNodeCount}`;\n      }\n      if (queue?.minNodeCount && nodeCount < queue?.minNodeCount) {\n        errors.nodeCount = `The minimum number of nodes for this queue is ${queue?.minNodeCount}`;\n      }\n    }\n    if (!!coresPerNode) {\n      if (queue?.maxCoresPerNode && coresPerNode > queue?.maxCoresPerNode) {\n        errors.coresPerNode = `The maximum number of cores per node for this queue is ${queue?.maxCoresPerNode}`;\n      }\n      if (queue?.minCoresPerNode && coresPerNode < queue?.minCoresPerNode) {\n        errors.coresPerNode = `The minimum number of cores per node for this queue is ${queue?.minCoresPerNode}`;\n      }\n    }\n    if (!!memoryMB) {\n      if (queue?.maxMemoryMB && memoryMB > queue?.maxMemoryMB) {\n        errors.memoryMB = `The maximum amount of memory for this queue is ${queue?.maxMemoryMB} megabytes`;\n      }\n      if (queue?.minMemoryMB && memoryMB < queue?.minMemoryMB) {\n        errors.memoryMB = `The minimum amount of memory for this queue is ${queue?.minMemoryMB} megabytes`;\n      }\n    }\n    if (!!maxMinutes) {\n      if (queue?.maxMinutes && maxMinutes > queue?.maxMinutes) {\n        errors.maxMinutes = `The maximum number of minutes for a job on this queue is ${queue?.maxMinutes}`;\n      }\n      if (queue?.minMinutes && maxMinutes < queue?.minMinutes) {\n        errors.maxMinutes = `The minimum number of minutes for a job on this queue is ${queue?.minMinutes}`;\n      }\n    }\n    return errors;\n  };\n};\n\nconst generateInitialValues = ({\n  job,\n  app,\n  systems,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  execSystemId: job.execSystemId,\n  execSystemLogicalQueue: job.execSystemLogicalQueue,\n  jobType: job.jobType,\n  execSystemExecDir: job.execSystemExecDir,\n  execSystemInputDir: job.execSystemInputDir,\n  execSystemOutputDir: job.execSystemOutputDir,\n  nodeCount: job.nodeCount,\n  coresPerNode: job.coresPerNode,\n  memoryMB: job.memoryMB,\n  maxMinutes: job.maxMinutes,\n  isMpi: job.isMpi,\n  mpiCmd: job.mpiCmd,\n  cmdPrefix: job.cmdPrefix,\n});\n\nconst step: JobStep = {\n  id: \"execution\",\n  name: \"Execution Options\",\n  render: <ExecOptions />,\n  summary: <ExecOptionsSummary />,\n  generateInitialValues,\n  validateThunk,\n  validationSchema,\n};\n\nexport default step;\n","import React, { useMemo } from \"react\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, FieldArrayRenderProps } from \"formik\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { FormikCheck } from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { JobStep } from \"..\";\nimport * as Yup from \"yup\";\n\ntype ArgFieldProps = {\n  index: number;\n  name: string;\n  argType: string;\n  arrayHelpers: FieldArrayRenderProps;\n  inputMode?: Apps.ArgInputModeEnum;\n};\n\nexport const ArgField: React.FC<ArgFieldProps> = ({\n  index,\n  name,\n  argType,\n  arrayHelpers,\n  inputMode,\n}) => {\n  const [field] = useField(`${name}.name`);\n  const argName = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`${argType}.${index}`}\n      title={!!argName && argName.length ? argName : argType}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`${name}.name`}\n        required={true}\n        label=\"Name\"\n        disabled={!!inputMode}\n        description={`The name for this ${argType} ${\n          !!inputMode\n            ? \"is defined in the application and cannot be changed\"\n            : \"\"\n        }`}\n      />\n      <FormikInput\n        name={`${name}.arg`}\n        required={true}\n        label=\"Value\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A value for this ${argType}`}\n      />\n      <FormikInput\n        name={`${name}.description`}\n        required={false}\n        label=\"Description\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A description for this ${argType}`}\n      />\n      <FormikCheck\n        name={`${name}.include`}\n        required={false}\n        label=\"Include\"\n        disabled={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n        }\n        description={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n            ? `This ${argType} must be included`\n            : `If checked, this ${argType} will be included`\n        }\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\ntype ArgsFieldArrayProps = {\n  argSpecs: Array<Apps.AppArgSpec>;\n  name: string;\n  argType: string;\n};\n\nexport const ArgsFieldArray: React.FC<ArgsFieldArrayProps> = ({\n  argSpecs,\n  name,\n  argType,\n}) => {\n  const [field] = useField(name);\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className={fieldArrayStyles.array}>\n          <h3>{`${argType}s`}</h3>\n          <div className={fieldArrayStyles[\"array-group\"]}>\n            {args.map((arg, index) => {\n              const inputMode = arg.name\n                ? getArgMode(arg.name, argSpecs)\n                : undefined;\n              return (\n                <ArgField\n                  index={index}\n                  arrayHelpers={arrayHelpers}\n                  name={`${name}.${index}`}\n                  argType={argType}\n                  inputMode={inputMode}\n                />\n              );\n            })}\n          </div>\n          <Button\n            onClick={() =>\n              arrayHelpers.push({\n                include: true,\n              })\n            }\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const argsSchema = Yup.array(\n  Yup.object({\n    name: Yup.string(),\n    description: Yup.string(),\n    include: Yup.boolean(),\n    arg: Yup.string().min(1).required(\"The argument cannot be blank\"),\n  })\n);\n\nexport const Args: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const appArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.appArgs ?? [],\n    [app]\n  );\n  const containerArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.containerArgs ?? [],\n    [app]\n  );\n\n  return (\n    <div>\n      <h2>Arguments</h2>\n      <ArgsFieldArray\n        name=\"parameterSet.appArgs\"\n        argType=\"App Argument\"\n        argSpecs={appArgSpecs}\n      />\n      <ArgsFieldArray\n        name=\"parameterSet.containerArgs\"\n        argType=\"Container Argument\"\n        argSpecs={containerArgSpecs}\n      />\n    </div>\n  );\n};\n\nexport const assembleArgSpec = (argSpecs: Array<Jobs.JobArgSpec>) =>\n  argSpecs.reduce(\n    (previous, current) =>\n      `${previous}${current.include ? ` ${current.arg}` : ``}`,\n    \"\"\n  );\n\nexport const ArgsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const appArgs = job.parameterSet?.appArgs ?? [];\n  // if (!job.parameterSet?.appArgs?.find((arg) => arg.name === \"arg2\")) {\n  //   job.parameterSet?.appArgs?.push({\n  //     name: \"arg2\",\n  //     arg: \"arg2\",\n  //     include: true,\n  //   });\n  // }\n\n  const containerArgs = job.parameterSet?.containerArgs ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`App: ${assembleArgSpec(appArgs)}`}\n        key={`app-args-summary`}\n      />\n      <StepSummaryField\n        field={`Container: ${assembleArgSpec(containerArgs)}`}\n        key={`container-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    appArgs: argsSchema,\n    containerArgs: argsSchema,\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"args\",\n  name: \"Arguments\",\n  render: <Args />,\n  summary: <ArgsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      appArgs: job.parameterSet?.appArgs,\n      containerArgs: job.parameterSet?.containerArgs,\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useCallback, useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, useFormikContext } from \"formik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { ArgField, argsSchema, assembleArgSpec } from \"./AppArgs\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport styles from \"./SchedulerOptions.module.scss\";\nimport { JobStep } from \"..\";\n\nconst findSchedulerProfile = (values: Partial<Jobs.ReqSubmitJob>) => {\n  // Look at current schedulerOptions\n  const argSpecs = values.parameterSet?.schedulerOptions ?? [];\n  // Add chargeProject\n  if (!argSpecs.find((argSpec) => argSpec.name === \"chargeProject\")) {\n    values.parameterSet?.schedulerOptions?.push({\n      name: \"chargeProject\",\n      description: \"Charge project\",\n      include: true,\n      arg: `-A BCS23003`,\n    });\n  }\n  // Find any scheduler option that has --tapis-profile set\n  if (!argSpecs.find((argSpec) => argSpec.name === \"profile\")) {\n    values.parameterSet?.schedulerOptions?.push({\n      name: \"profile\",\n      description: \"Tapis profile\",\n      include: true,\n      arg: `--tapis-profile tacc`,\n    });\n  }\n\n  // Find any scheduler option that has --tapis-profile set\n  const profile = argSpecs.find((argSpec) =>\n    argSpec.arg?.includes(\"--tapis-profile\")\n  );\n  if (profile) {\n    // Return the name of the profile after --tapis-profile\n    const args = profile.arg?.split(\" \");\n    if (args && args.length >= 2) {\n      return args[1];\n    }\n  }\n  return undefined;\n};\n\nconst SchedulerProfiles: React.FC = () => {\n  const { schedulerProfiles } = useJobLauncher();\n  const { values, setValues } = useFormikContext();\n  const setSchedulerProfile = useCallback(\n    (newProfile: Jobs.JobArgSpec) => {\n      const argSpecs =\n        (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.schedulerOptions ??\n        [];\n      setValues({\n        parameterSet: {\n          schedulerOptions: [\n            newProfile,\n            ...argSpecs.filter(\n              (existing) => !existing.arg?.includes(\"--tapis-profile\")\n            ),\n          ],\n        },\n      });\n    },\n    [values, setValues]\n  );\n  const currentProfile = useMemo(\n    () => findSchedulerProfile(values as Partial<Jobs.ReqSubmitJob>),\n    [values]\n  );\n\n  return (\n    <div className={fieldArrayStyles.array}>\n      <h3>Scheduler Profiles</h3>\n      {schedulerProfiles.map(\n        ({\n          name,\n          description,\n          moduleLoadCommand,\n          hiddenOptions,\n          modulesToLoad,\n          owner,\n          tenant,\n        }) => (\n          <Collapse\n            key={`scheduler-profiles-${name}`}\n            className={fieldArrayStyles[\"array-group\"]}\n            title={`${name} ${name === currentProfile ? \"(selected)\" : \"\"}`}\n          >\n            <div className={styles[\"scheduler-option\"]}>\n              <div>{description}</div>\n              <DescriptionList\n                data={{\n                  moduleLoadCommand,\n                  modulesToLoad,\n                  hiddenOptions,\n                  owner,\n                  tenant,\n                }}\n                className={styles[\"scheduler-option-list\"]}\n              />\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() =>\n                setSchedulerProfile({\n                  name: `${name} Scheduler Profile`,\n                  description,\n                  include: true,\n                  arg: `--tapis-profile ${name}`,\n                })\n              }\n              disabled={name === currentProfile}\n            >\n              Use This Profile\n            </Button>\n          </Collapse>\n        )\n      )}\n    </div>\n  );\n};\n\nconst SchedulerOptionArray: React.FC = () => {\n  const { app } = useJobLauncher();\n  const [field] = useField(\"parameterSet.schedulerOptions\");\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n\n  const schedulerOptionSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.schedulerOptions ?? [],\n    [app]\n  );\n  return (\n    <FieldArray\n      name=\"parameterSet.schedulerOptions\"\n      render={(arrayHelpers) => (\n        <>\n          <div className={fieldArrayStyles.array}>\n            <h3>{`Scheduler Arguments`}</h3>\n            <div className={fieldArrayStyles[\"array-group\"]}>\n              {args.map((arg, index) => {\n                const inputMode = arg.name\n                  ? getArgMode(arg.name, schedulerOptionSpecs)\n                  : undefined;\n                return (\n                  <ArgField\n                    index={index}\n                    arrayHelpers={arrayHelpers}\n                    name={`parameterSet.schedulerOptions.${index}`}\n                    argType={\"scheduler option\"}\n                    inputMode={inputMode}\n                  />\n                );\n              })}\n            </div>\n            <Button\n              onClick={() =>\n                arrayHelpers.push({\n                  name: \"\",\n                  description: \"\",\n                  include: true,\n                  arg: \"\",\n                })\n              }\n              size=\"sm\"\n            >\n              + Add\n            </Button>\n          </div>\n          <SchedulerProfiles />\n        </>\n      )}\n    />\n  );\n};\n\nexport const SchedulerOptions: React.FC = () => {\n  return (\n    <div>\n      <h2>Scheduler Options</h2>\n      <SchedulerOptionArray />\n    </div>\n  );\n};\n\nexport const SchedulerOptionsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const schedulerOptions = job.parameterSet?.schedulerOptions ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`Scheduler Profile: ${\n          findSchedulerProfile(job) ?? \"none selected\"\n        }`}\n        key={`scheduler-profile-summary`}\n      />\n      <StepSummaryField\n        field={`Scheduler Args: ${assembleArgSpec(schedulerOptions)}`}\n        key={`scheduler-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"schedulerOptions\",\n  name: \"Scheduler Options\",\n  render: <SchedulerOptions />,\n  summary: <SchedulerOptionsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import { Jobs } from '@tapis/tapis-typescript';\n\nexport const jobRequiredFieldsComplete = (job: Partial<Jobs.ReqSubmitJob>) => {\n  return !!job.name && !!job.appId && !!job.appVersion;\n};\n","import { useCallback } from \"react\";\nimport { useJobLauncher } from \"../components\";\nimport { JSONDisplay } from \"cookbooks-ui/_common\";\nimport { fileInputsComplete } from \"tapis-api/utils/jobFileInputs\";\nimport { fileInputArraysComplete } from \"tapis-api/utils/jobFileInputArrays\";\nimport { jobRequiredFieldsComplete } from \"tapis-api/utils/jobRequiredFields\";\nimport {\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from \"tapis-api/utils/jobExecSystem\";\nimport { StepSummaryField } from \"../components\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { useSubmit } from \"tapis-hooks/jobs\";\nimport { JobStep } from \"..\";\nimport { Button } from \"reactstrap\";\nimport arrayStyles from \"../FieldArray.module.scss\";\n\nexport const JobSubmit: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const isComplete =\n    validateExecSystem(job, app, systems) ===\n      ValidateExecSystemResult.Complete &&\n    jobRequiredFieldsComplete(job) &&\n    fileInputsComplete(app, job.fileInputs ?? []) &&\n    fileInputArraysComplete(app, job.fileInputArrays ?? []);\n\n  const { isLoading, error, isSuccess, submit, data } = useSubmit(\n    app.id!,\n    app.version!\n  );\n  const onSubmit = useCallback(() => {\n    submit(job as Jobs.ReqSubmitJob);\n  }, [submit, job]);\n  const summary = isComplete\n    ? isSuccess\n      ? `Successfully submitted job ${data?.result?.uuid ?? \"\"}`\n      : `The job is ready for submission`\n    : undefined;\n  return (\n    <div>\n      <h2>Job Submission</h2>\n      <div className={arrayStyles.array}>\n        <StepSummaryField\n          field={summary}\n          error=\"All required fields must be completed before the job can be submitted\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? ` ` : \"\"}\n          reverse={true}\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || !isComplete || isSuccess}\n            onClick={onSubmit}\n          >\n            Submit Job\n          </Button>\n        </SubmitWrapper>\n      </div>\n      <div>\n        This is a preview of the json job submission data. You may copy it for\n        future reference.\n      </div>\n      <JSONDisplay json={job} />\n    </div>\n  );\n};\n\nexport const JobSubmitSummary: React.FC = () => {\n  const { app, job, systems } = useJobLauncher();\n  const isComplete =\n    validateExecSystem(job, app, systems) &&\n    jobRequiredFieldsComplete(job) &&\n    fileInputsComplete(app, job.fileInputs ?? []) &&\n    fileInputArraysComplete(app, job.fileInputArrays ?? []);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={isComplete ? \"The job is ready for submission\" : undefined}\n        error=\"All required fields must be completed before the job can be submitted\"\n        key=\"job-submit-summary\"\n      />\n    </div>\n  );\n};\n\nconst step: JobStep = {\n  id: \"jobSubmit\",\n  name: \"Job Submission\",\n  render: <JobSubmit />,\n  summary: <JobSubmitSummary />,\n  validationSchema: {},\n  generateInitialValues: () => ({}),\n};\n\nexport default step;\n","import JobStart from \"./JobStart\";\nimport ExecOptions from \"./ExecOptions\";\nimport AppArgs from \"./AppArgs\";\nimport SchedulerOptions from \"./SchedulerOptions\";\nimport JobSubmit from \"./JobSubmit\";\n\nconst jobSteps = [\n  JobStart,\n  ExecOptions,\n  // FileInputs,\n  // FileInputArrays,\n  AppArgs,\n  // EnvVariables,\n  SchedulerOptions,\n  // Archive,\n  JobSubmit,\n];\n\nexport default jobSteps;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useQuery } from \"react-query\";\n\ntype ReadmeLink = {\n  gitUrl: string;\n  gitRef: string;\n  rawReadmeUrl: string;\n};\n\ntype ReadmeViewerProps = {\n  id: string | undefined;\n  version: string | undefined;\n  notes: object | undefined;\n};\n\nconst ReadmeViewer = ({ id, version, notes }: ReadmeViewerProps) => {\n  const { gitUrl, gitRef, rawReadmeUrl } = notes as ReadmeLink;\n  const { data, isLoading, error } = useQuery(\n    [\"readme\", gitUrl, gitRef, rawReadmeUrl],\n    async () => {\n      const response = await fetch(rawReadmeUrl);\n      return response.text();\n    }\n  );\n  if (isLoading) return <div>Loading...</div>;\n  if (!data) return <div>No readme found</div>;\n\n  return (\n    <div style={{ maxWidth: \"800px\" }}>\n      <ReactMarkdown>{data}</ReactMarkdown>;\n    </div>\n  );\n};\n\nexport default ReadmeViewer;\n","import React, { useCallback } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { WizardStep } from \"cookbooks-ui/_wrappers/Wizard\";\nimport { Jobs, Systems } from \"@tapis/tapis-typescript\";\nimport { useJobLauncher } from \"./components\";\nimport { useSubmit } from \"tapis-hooks/jobs\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport arrayStyles from \"./FieldArray.module.scss\";\nimport { Button } from \"reactstrap\";\nimport ReadmeViewer from \"tapis-app/Cookbook/Readme\";\nimport { LayoutHeader } from \"cookbooks-ui/_common\";\n\nconst SignupSchema = Yup.object().shape({});\n\ntype WizardProps<T> = {\n  steps: Array<WizardStep<T>>;\n  memo?: any;\n  formSubmit: (values: Partial<T>) => void;\n};\n\nexport function JupyterNotebookLauncher<T>({\n  steps,\n  memo,\n  formSubmit,\n}: WizardProps<T>) {\n  const { job, app, systems } = useJobLauncher();\n  const { isLoading, error, isSuccess, submit } = useSubmit(\n    app.id!,\n    app.version!\n  );\n\n  const system = systems.find(\n    (sys) => sys.systemType === Systems.SystemTypeEnum.Linux\n  );\n  job.execSystemId = system?.id;\n  if (job.parameterSet?.schedulerOptions?.length === 0) {\n    job.parameterSet?.schedulerOptions?.push({\n      arg: \"-A BCS23003\",\n      name: \"chargeProject\",\n      include: true,\n      description: \"Project to charge\",\n    });\n    job.parameterSet?.schedulerOptions?.push({\n      arg: \"--tapis-profile tacc\",\n      name: \"profile\",\n      include: true,\n      description: \"The tapis-profile value set in execution system.\",\n    });\n  }\n\n  const onSubmit = useCallback(\n    (values) => {\n      submit(job as Jobs.ReqSubmitJob);\n    },\n    [submit, job]\n  );\n\n  return system ? (\n    <div>\n      <LayoutHeader type={\"sub-header\"}>\n        {app.id} v{app.version}\n      </LayoutHeader>\n      <LayoutHeader type={\"sub-header\"}>\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? ` ` : \"\"}\n        >\n          <Formik\n            initialValues={\n              {\n                // url: \"\",\n              }\n            }\n            validationSchema={SignupSchema}\n            onSubmit={(values) => {\n              onSubmit(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                {/* <Field name=\"url\" fullWidth label=\"Photo URL\" style={mystyle} />\n                {errors.url && touched.url ? <div>{errors.url}</div> : null} */}\n                <Button color=\"primary\" type=\"submit\">\n                  Run\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </SubmitWrapper>\n      </LayoutHeader>\n      <ReadmeViewer id={app.id} version={app.version} notes={app.notes} />\n    </div>\n  ) : (\n    <>\n      <p> No Linux system found. Please add a Linux System</p>\n    </>\n  );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { WizardStep } from \"cookbooks-ui/_wrappers/Wizard\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { useDetail as useAppDetail } from \"tapis-hooks/apps\";\nimport generateJobDefaults from \"tapis-api/utils/jobDefaults\";\nimport {\n  useList as useSystemsList,\n  useSchedulerProfiles,\n} from \"tapis-hooks/systems\";\nimport { useJobLauncher, JobLauncherProvider } from \"./components\";\nimport { JobStep } from \".\";\nimport jobSteps from \"./steps\";\nimport { JupyterNotebookLauncher } from \"./JupyterNotebookLauncher\";\n\ntype JobLauncherWizardProps = {\n  appId: string;\n  appVersion: string;\n};\n\nexport const JobLauncherWizardRender: React.FC<{ jobSteps: Array<JobStep> }> =\n  ({ jobSteps }) => {\n    const { add, job, app, systems } = useJobLauncher();\n\n    const formSubmit = useCallback(\n      (value: Partial<Jobs.ReqSubmitJob>) => {\n        if (value.jobType === Apps.JobTypeEnum.Fork) {\n          value.execSystemLogicalQueue = undefined;\n        }\n        if (value.isMpi) {\n          value.cmdPrefix = undefined;\n        } else {\n          value.mpiCmd = undefined;\n        }\n        if (value.parameterSet) {\n          value.parameterSet = {\n            ...job.parameterSet,\n            ...value.parameterSet,\n          };\n        }\n        add(value);\n      },\n      [add, job]\n    );\n\n    // Map Array of JobSteps into an array of WizardSteps\n    const steps: Array<WizardStep<Jobs.ReqSubmitJob>> = useMemo(() => {\n      return jobSteps.map((jobStep) => {\n        const { generateInitialValues, validateThunk, ...stepProps } = jobStep;\n        return {\n          initialValues: generateInitialValues({ job, app, systems }),\n          // generate a validation function from the JobStep's validateThunk, given the current hook values\n          validate: validateThunk\n            ? validateThunk({ job, app, systems })\n            : undefined,\n          ...stepProps,\n        };\n      });\n    }, [app, job, systems, jobSteps]);\n\n    return (\n      <JupyterNotebookLauncher\n        steps={steps}\n        memo={`${app.id}${app.version}`}\n        formSubmit={formSubmit}\n      />\n    );\n  };\n\nconst JobLauncherWizard: React.FC<JobLauncherWizardProps> = ({\n  appId,\n  appVersion,\n}) => {\n  const { data, isLoading, error } = useAppDetail(\n    { appId, appVersion },\n    { refetchOnWindowFocus: false }\n  );\n  const {\n    data: systemsData,\n    isLoading: systemsIsLoading,\n    error: systemsError,\n  } = useSystemsList(\n    { select: \"allAttributes\" },\n    { refetchOnWindowFocus: false }\n  );\n  const {\n    data: schedulerProfilesData,\n    isLoading: schedulerProfilesIsLoading,\n    error: schedulerProfilesError,\n  } = useSchedulerProfiles({ refetchOnWindowFocus: false });\n  const app = data?.result;\n  const systems = useMemo(() => systemsData?.result ?? [], [systemsData]);\n  const schedulerProfiles = useMemo(\n    () => schedulerProfilesData?.result ?? [],\n    [schedulerProfilesData]\n  );\n  const defaultValues = useMemo(\n    () => generateJobDefaults({ app, systems }),\n    [app, systems]\n  );\n\n  return (\n    <QueryWrapper\n      isLoading={isLoading || systemsIsLoading || schedulerProfilesIsLoading}\n      error={error || systemsError || schedulerProfilesError}\n    >\n      {app && (\n        <JobLauncherProvider\n          value={{ app, systems, defaultValues, schedulerProfiles }}\n        >\n          <JobLauncherWizardRender jobSteps={jobSteps} />\n        </JobLauncherProvider>\n      )}\n    </QueryWrapper>\n  );\n};\n\nexport default JobLauncherWizard;\n","import React from \"react\";\nimport { JobLauncher } from \"stories-ui/components/jobs\";\nimport { PageLayout, LayoutHeader } from \"cookbooks-ui/_common\";\n\nconst Layout: React.FC<{ appId: string; appVersion: string }> = ({\n  appId,\n  appVersion,\n}) => {\n  const body = (\n    <div style={{ flex: 1 }}>\n      <JobLauncher appId={appId} appVersion={appVersion} />\n    </div>\n  );\n\n  return <PageLayout right={body} />;\n};\n\nexport default React.memo(Layout);\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport JobLauncher from \"../JobLauncher\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select an cookbook template from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:appId/:appVersion`}\n        render={({\n          match: {\n            params: { appVersion, appId },\n          },\n        }: RouteComponentProps<{\n          appId: string;\n          appVersion: string;\n        }>) => <JobLauncher appId={appId} appVersion={appVersion} />}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { AppsNav } from \"../_components\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\n\nimport { Router } from \"../_Router\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Apps</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <AppsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import Login from './Login';\n\nexport default Login;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { useLogin } from \"tapis-hooks/authenticator\";\nimport { useTapisConfig } from \"tapis-hooks/context\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst Login: React.FC = () => {\n  const { login, isLoading, error } = useLogin();\n  const { accessToken } = useTapisConfig();\n\n  const onSubmit = ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => login(username, password);\n\n  const loginSchema = Yup.object({\n    username: Yup.string().required(),\n    password: Yup.string().required(),\n  });\n\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormikInput\n          name=\"username\"\n          label=\"Username\"\n          required={true}\n          description=\"Your TAPIS username\"\n        />\n        <FormikInput\n          name=\"password\"\n          label=\"Password\"\n          required={true}\n          description=\"Your TAPIS password\"\n          type=\"password\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={accessToken && \"Successfully logged in\"}\n        >\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading || accessToken != null}\n          >\n            Log In\n          </Button>\n        </SubmitWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport { Login as TapisLogin } from \"../_components\";\nimport { SectionHeader } from \"cookbooks-ui/_common\";\nimport { useTapisConfig } from \"tapis-hooks\";\n\nconst Layout: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  let location = useLocation<{ from: Location }>();\n  let { from } = location.state || { from: { pathname: \"/\" } };\n\n  if (accessToken?.access_token) {\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <>\n      <SectionHeader>Login</SectionHeader>\n      <div className=\"container\">\n        <TapisLogin />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import { Apps } from \"@tapis/tapis-typescript\";\nimport { apiGenerator, errorDecoder } from \"tapis-api/utils\";\n\nconst create = (request: Apps.ReqPostApp, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespResourceUrl>(() =>\n    api.createAppVersion({ reqPostApp: request })\n  );\n};\n\nexport default create;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { submit } from \"tapis-api/jobs\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport QueryKeys from \"./queryKeys\";\nimport create from \"tapis-api/apps/create\";\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || \"\";\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Apps.RespResourceUrl, Error, Apps.ReqPostApp>(\n      [QueryKeys, basePath, jwt],\n      (request: Apps.ReqPostApp) => create(request, basePath, jwt)\n    );\n  //   useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n  //   [QueryKeys.submit, appId, appVersion, basePath, jwt],\n  //   (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n  // );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Apps.ReqPostApp) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useCreate;\n","import { Apps } from \"@tapis/tapis-typescript\";\n\nconst llamaNotebookApp: Apps.ReqPostApp = {\n  id: \"llama-index-environment\",\n  version: \"1.0.0\",\n  description:\n    \"Run an interactive Jupyter Lab session on an HPC compute node. For the LLama Index Environment\",\n  owner: \"${apiUserId}\",\n  enabled: true,\n  runtime: Apps.RuntimeEnum.Singularity,\n  runtimeOptions: [Apps.RuntimeOptionEnum.SingularityRun],\n  containerImage: \"docker://ghcr.io/mosoriob/llmrepository-docker:sha-013877\",\n  jobType: Apps.JobTypeEnum.Batch,\n  maxJobs: -1,\n  maxJobsPerUser: -1,\n  strictFileInputs: true,\n  jobAttributes: {\n    execSystemExecDir: \"${JobWorkingDir}/jobs/${JobUUID}\",\n    execSystemInputDir: \"${JobWorkingDir}/jobs/${JobUUID}/input\",\n    execSystemOutputDir: \"${JobWorkingDir}/jobs/${JobUUID}/output\",\n    maxMinutes: 100,\n    parameterSet: {\n      containerArgs: [\n        {\n          name: \"mount\",\n          description: \"Mount a directory from the host into the container\",\n          inputMode: Apps.ArgInputModeEnum.Fixed,\n          arg: \"--bind /share\",\n        },\n      ],\n      envVariables: [\n        {\n          key: \"email\",\n        },\n      ],\n    },\n  },\n  tags: [\"portalName: ALL\"],\n  notes: {\n    label: \"Jupyter Lab HPC (Frontera)\",\n    helpUrl: \"https://jupyterlab.readthedocs.io/en/stable/\",\n    hideNodeCountAndCoresPerNode: false,\n    isInteractive: true,\n    gitUrl: \"https://github.com/In-For-Disaster-Analytics/cookbooks-ui\",\n    gitRef: \"main\",\n    rawReadmeUrl:\n      \"https://raw.githubusercontent.com/In-For-Disaster-Analytics/sites-and-stories-nlp/jupyterenv/README.md\",\n    icon: \"jupyter\",\n    category: \"Data Processing\",\n  },\n};\n\nexport default llamaNotebookApp;\n","import React, { useCallback, useEffect } from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./Creator.module.scss\";\nimport useCreate from \"tapis-hooks/apps/useCreate\";\nimport llamaNotebookApp from \"catalog/apps/llama-notebook\";\n\nconst CookbookCreator: React.FC = () => {\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n\n  useEffect(() => {\n    llamaNotebookApp.id = `${llamaNotebookApp.id}-${Date.now()}`;\n    submit(llamaNotebookApp);\n  }, []);\n\n  if (isLoading) {\n    return <div> Creating coookbooks</div>;\n  }\n\n  if (isSuccess) {\n    return <div> Successfully created cookbooks</div>;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className={styles[\"card-header\"]}>\n          <div>\n            <Icon name=\"applications\" className=\"dashboard__card-icon\" />\n          </div>\n          <div>No apps available</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          <div>0 apps</div>\n        </CardTitle>\n        <CardText>\n          You do not have access to any apps. Please contact your TAPIS\n          administrator.\n        </CardText>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default CookbookCreator;\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { SectionHeader, LoadingSpinner, Icon } from \"cookbooks-ui/_common\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardText,\n} from \"reactstrap\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useList as useSystemsList } from \"tapis-hooks/systems\";\nimport { useList as useJobsList } from \"tapis-hooks/jobs\";\nimport { useList as useAppsList } from \"tapis-hooks/apps\";\nimport styles from \"./Dashboard.module.scss\";\nimport \"./Dashboard.scss\";\nimport CookbookCreator from \"tapis-app/Cookbook/Creator\";\nimport Apps from \"tapis-app/Apps\";\n\ntype DashboardCardProps = {\n  icon: string;\n  link: string;\n  counter: string;\n  name: string;\n  text: string;\n  loading: boolean;\n};\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  icon,\n  link,\n  counter,\n  name,\n  text,\n  loading,\n}) => {\n  return (\n    <Card className={styles.card}>\n      <CardHeader>\n        <div className={styles[\"card-header\"]}>\n          <div>\n            <Icon name={icon} className=\"dashboard__card-icon\" />\n          </div>\n          <div>{name}</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          {loading ? (\n            <LoadingSpinner placement=\"inline\" />\n          ) : (\n            <div>{counter}</div>\n          )}\n        </CardTitle>\n        <CardText>{text}</CardText>\n      </CardBody>\n      <CardFooter className={styles[\"card-footer\"]}>\n        <Link to={link}>Go to {name}</Link>\n        <Icon name=\"push-right\" />\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const { accessToken, claims } = useTapisConfig();\n  const systems = useSystemsList({});\n  const jobs = useJobsList({});\n  const apps = useAppsList({ select: \"jobAttributes,version\" });\n\n  const renderNoApps = () => {\n    return <CookbookCreator />;\n  };\n\n  const renderNoSystems = () => {\n    return (\n      <Card>\n        <CardHeader>\n          <div className={styles[\"card-header\"]}>\n            <div>\n              <Icon name=\"data-files\" className=\"dashboard__card-icon\" />\n            </div>\n            <div>No systems available</div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <CardTitle tag=\"h5\">\n            <div>0 systems</div>\n          </CardTitle>\n          <CardText>\n            You do not have access to any systems. Please contact your TAPIS\n            administrator.\n          </CardText>\n        </CardBody>\n      </Card>\n    );\n  };\n\n  if (apps?.isLoading || jobs?.isLoading || systems?.isLoading) {\n    return (\n      <div>\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  if (systems?.data?.result?.length === 0) {\n    return renderNoSystems();\n  }\n\n  if (apps?.data?.result?.length === 0) {\n    return renderNoApps();\n  }\n\n  return (\n    <div>\n      <div className={styles.cards}>\n        {accessToken ? (\n          <>\n            <Redirect to=\"/apps\" />\n          </>\n        ) : (\n          <Card>\n            <CardHeader>\n              <div className={styles[\"card-header\"]}>\n                <div>\n                  <Icon name=\"user\" className=\"dashboard__card-icon\" />\n                </div>\n                <div>You are not logged in</div>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle>Please log in to use TAPIS</CardTitle>\n            </CardBody>\n            <CardFooter className={styles[\"card-footer\"]}>\n              <Link to=\"/login\">Proceed to login</Link>\n              <Icon name=\"push-right\" />\n            </CardFooter>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import JobsNav from './JobsNav';\n\nexport default JobsNav;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/jobs\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst JobsNav: React.FC = () => {\n  const { data, isLoading, error } = useList();\n  const { url } = useRouteMatch();\n  const jobsList: Array<Jobs.JobListDTO> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {jobsList.length ? (\n          jobsList.map((job: Jobs.JobListDTO) => (\n            <NavItem to={`${url}/${job.uuid}`} icon=\"jobs\" key={job.uuid}>\n              {`${job.name} - (${job.status})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No jobs found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default JobsNav;\n","import React from \"react\";\nimport { useDetails } from \"tapis-hooks/jobs\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst JobDetail: React.FC<{ jobUuid: string }> = ({ jobUuid }) => {\n  const { data, isLoading, error } = useDetails(jobUuid);\n  const job: Jobs.Job | undefined = data?.result;\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{job?.name}</h3>\n      <h5>{job?.uuid}</h5>\n      {job && <DescriptionList data={job} />}\n    </QueryWrapper>\n  );\n};\n\nexport default JobDetail;\n","import React, { useContext } from \"react\";\nimport { Jobs, Apps, Systems } from \"@tapis/tapis-typescript\";\nimport withBuilder from \"cookbooks-ui/utils/withBuilder\";\n\ntype JobLauncherContextType = {\n  app: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n  schedulerProfiles: Array<Systems.SchedulerProfile>;\n};\n\nconst JobLauncherContext = React.createContext<JobLauncherContextType>({\n  app: {},\n  systems: [],\n  schedulerProfiles: [],\n});\n\nconst { useBuilderContext, Provider } = withBuilder<Jobs.ReqSubmitJob>();\n\nexport const useJobLauncher = () => {\n  const { data, add, set, clear } = useBuilderContext();\n  const { app, systems, schedulerProfiles } = useContext(JobLauncherContext);\n  return {\n    job: data,\n    add,\n    set,\n    clear,\n    app,\n    systems,\n    schedulerProfiles,\n  };\n};\n\ntype JobLauncherProviderProps = {\n  value: {\n    defaultValues: Partial<Jobs.ReqSubmitJob>;\n    app: Apps.TapisApp;\n    systems: Array<Systems.TapisSystem>;\n    schedulerProfiles: Array<Systems.SchedulerProfile>;\n  };\n};\n\nexport const JobLauncherProvider: React.FC<\n  React.PropsWithChildren<JobLauncherProviderProps>\n> = ({ value, children }) => {\n  const { app, systems, defaultValues, schedulerProfiles } = value;\n  return (\n    <JobLauncherContext.Provider value={{ app, systems, schedulerProfiles }}>\n      {Provider({ value: defaultValues, children })}\n    </JobLauncherContext.Provider>\n  );\n};\n\nexport default useJobLauncher;\n","import React, { useMemo } from \"react\";\nimport { Apps, Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, FieldArrayRenderProps } from \"formik\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { FormikCheck } from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { JobStep } from \"..\";\nimport * as Yup from \"yup\";\n\ntype ArgFieldProps = {\n  index: number;\n  name: string;\n  argType: string;\n  arrayHelpers: FieldArrayRenderProps;\n  inputMode?: Apps.ArgInputModeEnum;\n};\n\nexport const ArgField: React.FC<ArgFieldProps> = ({\n  index,\n  name,\n  argType,\n  arrayHelpers,\n  inputMode,\n}) => {\n  const [field] = useField(`${name}.name`);\n  const argName = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`${argType}.${index}`}\n      title={!!argName && argName.length ? argName : argType}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`${name}.name`}\n        required={true}\n        label=\"Name\"\n        disabled={!!inputMode}\n        description={`The name for this ${argType} ${\n          !!inputMode\n            ? \"is defined in the application and cannot be changed\"\n            : \"\"\n        }`}\n      />\n      <FormikInput\n        name={`${name}.arg`}\n        required={true}\n        label=\"Value\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A value for this ${argType}`}\n      />\n      <FormikInput\n        name={`${name}.description`}\n        required={false}\n        label=\"Description\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A description for this ${argType}`}\n      />\n      <FormikCheck\n        name={`${name}.include`}\n        required={false}\n        label=\"Include\"\n        disabled={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n        }\n        description={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n            ? `This ${argType} must be included`\n            : `If checked, this ${argType} will be included`\n        }\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\ntype ArgsFieldArrayProps = {\n  argSpecs: Array<Apps.AppArgSpec>;\n  name: string;\n  argType: string;\n};\n\nexport const ArgsFieldArray: React.FC<ArgsFieldArrayProps> = ({\n  argSpecs,\n  name,\n  argType,\n}) => {\n  const [field] = useField(name);\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className={fieldArrayStyles.array}>\n          <h3>{`${argType}s`}</h3>\n          <div className={fieldArrayStyles[\"array-group\"]}>\n            {args.map((arg, index) => {\n              const inputMode = arg.name\n                ? getArgMode(arg.name, argSpecs)\n                : undefined;\n              return (\n                <ArgField\n                  index={index}\n                  arrayHelpers={arrayHelpers}\n                  name={`${name}.${index}`}\n                  argType={argType}\n                  inputMode={inputMode}\n                />\n              );\n            })}\n          </div>\n          <Button\n            onClick={() =>\n              arrayHelpers.push({\n                include: true,\n              })\n            }\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const argsSchema = Yup.array(\n  Yup.object({\n    name: Yup.string(),\n    description: Yup.string(),\n    include: Yup.boolean(),\n    arg: Yup.string().min(1).required(\"The argument cannot be blank\"),\n  })\n);\n\nexport const Args: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const appArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.appArgs ?? [],\n    [app]\n  );\n  const containerArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.containerArgs ?? [],\n    [app]\n  );\n\n  return (\n    <div>\n      <h2>Arguments</h2>\n      <ArgsFieldArray\n        name=\"parameterSet.appArgs\"\n        argType=\"App Argument\"\n        argSpecs={appArgSpecs}\n      />\n      <ArgsFieldArray\n        name=\"parameterSet.containerArgs\"\n        argType=\"Container Argument\"\n        argSpecs={containerArgSpecs}\n      />\n    </div>\n  );\n};\n\nexport const assembleArgSpec = (argSpecs: Array<Jobs.JobArgSpec>) =>\n  argSpecs.reduce(\n    (previous, current) =>\n      `${previous}${current.include ? ` ${current.arg}` : ``}`,\n    \"\"\n  );\n\nexport const ArgsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const appArgs = job.parameterSet?.appArgs ?? [];\n  const containerArgs = job.parameterSet?.containerArgs ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`App: ${assembleArgSpec(appArgs)}`}\n        key={`app-args-summary`}\n      />\n      <StepSummaryField\n        field={`Container: ${assembleArgSpec(containerArgs)}`}\n        key={`container-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    appArgs: argsSchema,\n    containerArgs: argsSchema,\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"args\",\n  name: \"Arguments\",\n  render: <Args />,\n  summary: <ArgsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      appArgs: job.parameterSet?.appArgs,\n      containerArgs: job.parameterSet?.containerArgs,\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import { StepSummaryField, useJobLauncher } from \"../components\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport { JobStep, JobLauncherProviderParams } from \"..\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\n\nexport const JobStart: React.FC = () => {\n  const { app } = useJobLauncher();\n  return (\n    <div>\n      <h2>\n        Launching {app.id} v{app.version}\n      </h2>\n      <FormikInput\n        name=\"name\"\n        required={true}\n        label=\"Name\"\n        description=\"A name for this job\"\n      />\n      <FormikInput\n        name=\"description\"\n        required={false}\n        label=\"Description\"\n        description=\"A description of this job\"\n      />\n    </div>\n  );\n};\n\nexport const JobStartSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const { name, description, appId, appVersion } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={name}\n        error=\"A job name is required\"\n        key=\"job-start-name-summary\"\n      />\n      <StepSummaryField\n        field={description}\n        key=\"job-start-description-summary\"\n      />\n      <div>\n        <i>\n          Application: {appId} v{appVersion}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst generateInitialValues = ({\n  job,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  name: job.name,\n  description: job.description,\n});\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required().min(1).max(64),\n  description: Yup.string(),\n});\n\nconst step: JobStep = {\n  id: \"start\",\n  name: \"Job Name\",\n  render: <JobStart />,\n  summary: <JobStartSummary />,\n  generateInitialValues,\n  validationSchema,\n};\n\nexport default step;\n","import { useMemo, useEffect, useState } from \"react\";\nimport { Apps, Jobs, Systems } from \"@tapis/tapis-typescript\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport {\n  FormikInput,\n  // FormikCheck,\n  FormikSelect,\n  // FormikTapisFile,\n} from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport { useFormikContext } from \"formik\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  computeDefaultQueue,\n  computeDefaultSystem,\n  computeDefaultJobType,\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from \"tapis-api/utils/jobExecSystem\";\nimport { capitalize } from \"./utils\";\nimport * as Yup from \"yup\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { JobStep, JobLauncherProviderParams } from \"..\";\n\nconst getLogicalQueues = (system?: Systems.TapisSystem) =>\n  system?.batchLogicalQueues ?? [];\n\nconst getSystem = (systems: Array<Systems.TapisSystem>, systemId?: string) =>\n  !!systemId ? systems.find((system) => system.id === systemId) : undefined;\n\nconst SystemSelector: React.FC = () => {\n  const { setFieldValue, values } = useFormikContext();\n  const { job, app, systems } = useJobLauncher();\n\n  const [queues, setQueues] = useState<Array<Systems.LogicalQueue>>(\n    getLogicalQueues(getSystem(systems, job.execSystemId))\n  );\n\n  const [selectableSystems, setSelectableSystems] =\n    useState<Array<Systems.TapisSystem>>(systems);\n\n  const {\n    defaultSystemLabel,\n    defaultQueueLabel,\n    defaultJobTypeLabel,\n    isBatch,\n    selectedSystem,\n  } = useMemo(() => {\n    // Compute labels for when undefined values are selected for systems, queues or jobType\n    const { source: systemSource, systemId } = computeDefaultSystem(app);\n    const defaultSystemLabel = systemSource\n      ? `App default (${systemId})`\n      : \"Please select a system\";\n    const { source: queueSource, queue } = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultQueueLabel = queueSource\n      ? `${capitalize(queueSource)} default (${queue})`\n      : \"Please select a queue\";\n    const { source: jobTypeSource, jobType } = computeDefaultJobType(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultJobTypeLabel = `${capitalize(\n      jobTypeSource\n    )} default (${jobType})`;\n    const isBatch =\n      (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch ||\n      jobType === Apps.JobTypeEnum.Batch;\n    const selectedSystem = (values as Jobs.ReqSubmitJob)?.execSystemId;\n    return {\n      defaultSystemLabel,\n      defaultQueueLabel,\n      defaultJobTypeLabel,\n      isBatch,\n      selectedSystem,\n    };\n  }, [values, app, systems]);\n\n  useEffect(() => {\n    // Handle changes to selectable execSystems and execSystemLogicalQueues\n    const validSystems = isBatch\n      ? systems.filter((system) => !!system.batchLogicalQueues?.length)\n      : systems;\n    setSelectableSystems(validSystems);\n    if (!validSystems.some((system) => system.id === selectedSystem)) {\n      // If current system is invalid (like a system with no logical queues for a batch job)\n      // then use the application default\n      setFieldValue(\"execSystemId\", undefined);\n    }\n    if (!isBatch) {\n      setFieldValue(\"execSystemLogicalQueue\", undefined);\n    }\n    const system = getSystem(\n      validSystems,\n      selectedSystem ?? app.jobAttributes?.execSystemId\n    );\n    const queues = getLogicalQueues(system);\n    setQueues(queues);\n    setFieldValue(\"execSystemLogicalQueue\", undefined);\n  }, [\n    systems,\n    isBatch,\n    app,\n    selectedSystem,\n    setFieldValue,\n    setSelectableSystems,\n    setQueues,\n  ]);\n\n  return (\n    <div className={fieldArrayStyles.item}>\n      <FormikSelect\n        name=\"execSystemId\"\n        description=\"The execution system for this job\"\n        label=\"Execution System\"\n        required={true}\n        data-testid=\"execSystemId\"\n      >\n        <option value={undefined} label={defaultSystemLabel} />\n        {selectableSystems.map((system) => (\n          <option\n            value={system.id}\n            key={`execsystem-select-${system.id}`}\n            label={system.id}\n            data-testid={`execSystemId-${system.id}`}\n          />\n        ))}\n      </FormikSelect>\n      <FormikSelect\n        name=\"jobType\"\n        label=\"Job Type\"\n        description=\"Jobs can either be Batch or Fork\"\n        required={true}\n        data-testid=\"jobType\"\n      >\n        <option value={undefined} label={defaultJobTypeLabel} />\n        <option value={Apps.JobTypeEnum.Batch} label=\"Batch\" />\n        <option value={Apps.JobTypeEnum.Fork} label=\"Fork\" />\n      </FormikSelect>\n      {isBatch && (\n        <FormikSelect\n          name=\"execSystemLogicalQueue\"\n          description=\"The batch queue on this execution system\"\n          label=\"Batch Logical Queue\"\n          required={false}\n          disabled={queues.length === 0}\n          data-testid=\"execSystemLogicalQueue\"\n        >\n          <option value={undefined} label={defaultQueueLabel} />\n          {queues.map((queue) => (\n            <option\n              value={queue.name}\n              key={`queue-select-${queue.name}`}\n              label={queue.name}\n            />\n          ))}\n        </FormikSelect>\n      )}\n    </div>\n  );\n};\n\n// const ExecSystemDirs: React.FC = () => {\n//   const { values } = useFormikContext();\n//   const execSystemId = useMemo(\n//     () => (values as Partial<Jobs.ReqSubmitJob>).execSystemId,\n//     [values]\n//   );\n//   return (\n//     <Collapse title=\"Execution System Directories\">\n//       <FormikTapisFile\n//         allowSystemChange={false}\n//         systemId={execSystemId}\n//         disabled={!execSystemId}\n//         name=\"execSystemExecDir\"\n//         label=\"Execution System Execution Directory\"\n//         description=\"The directory on the selected selection system for execution files\"\n//         required={false}\n//         files={false}\n//         dirs={true}\n//       />\n//       <FormikTapisFile\n//         allowSystemChange={false}\n//         systemId={execSystemId}\n//         disabled={!execSystemId}\n//         name=\"execSystemInputDir\"\n//         label=\"Execution System Input Directory\"\n//         description=\"The directory on the selected selection system for input files\"\n//         required={false}\n//         files={false}\n//         dirs={true}\n//       />\n//       <FormikTapisFile\n//         allowSystemChange={false}\n//         systemId={execSystemId}\n//         disabled={!execSystemId}\n//         name=\"execSystemOutputDir\"\n//         label=\"Execution System Output Directory\"\n//         description=\"The directory on the selected selection system for output files\"\n//         required={false}\n//         files={false}\n//         dirs={true}\n//       />\n//     </Collapse>\n//   );\n// };\n\nconst ExecSystemQueueOptions: React.FC = () => {\n  const { errors } = useFormikContext();\n  const queueErrors = errors as QueueErrors;\n  const hasErrors =\n    queueErrors.coresPerNode ||\n    queueErrors.maxMinutes ||\n    queueErrors.memoryMB ||\n    queueErrors.nodeCount;\n  return (\n    <Collapse title=\"Queue Parameters\" isCollapsable={!hasErrors}>\n      <FormikInput\n        name=\"nodeCount\"\n        label=\"Node Count\"\n        description=\"The number of nodes to use for this job\"\n        required={false}\n      />\n      <FormikInput\n        name=\"coresPerNode\"\n        label=\"Cores Per Node\"\n        description=\"The number of cores to use per node\"\n        required={false}\n      />\n      <FormikInput\n        name=\"memoryMB\"\n        label=\"Memory, in Megabytes\"\n        description=\"The amount of memory to use per node in megabytes\"\n        required={false}\n      />\n      <FormikInput\n        name=\"maxMinutes\"\n        label=\"Maximum Minutes\"\n        description=\"The maximum amount of time in minutes for this job\"\n        required={false}\n      />\n    </Collapse>\n  );\n};\n\n// const MPIOptions: React.FC = () => {\n//   const { values } = useFormikContext();\n//   const isMpi = useMemo(\n//     () => (values as Partial<Jobs.ReqSubmitJob>).isMpi,\n//     [values]\n//   );\n//   return (\n//     <Collapse title=\"MPI Options\">\n//       <FormikCheck\n//         name=\"isMpi\"\n//         label=\"Is MPI?\"\n//         description=\"If checked, this job will be run as an MPI job\"\n//         required={false}\n//       />\n//       <FormikInput\n//         name=\"mpiCmd\"\n//         label=\"MPI Command\"\n//         description=\"If this is an MPI job, you may specify the MPI command\"\n//         required={false}\n//         disabled={!isMpi}\n//       />\n//       <FormikInput\n//         name=\"cmdPrefix\"\n//         label=\"Command Prefix\"\n//         description=\"If this is not an MPI job, you may specify a command prefix\"\n//         required={false}\n//         disabled={!!isMpi}\n//       />\n//     </Collapse>\n//   );\n// };\n\nexport const ExecOptions: React.FC = () => {\n  const { values } = useFormikContext();\n\n  const isBatch = useMemo(\n    () => (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch,\n    [values]\n  );\n\n  return (\n    <div>\n      <h2>Execution Options</h2>\n      <SystemSelector />\n      {isBatch && <ExecSystemQueueOptions />}\n      {/* <MPIOptions /> */}\n      {/* <ExecSystemDirs /> */}\n    </div>\n  );\n};\n\nexport const ExecOptionsSummary: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const { isMpi, mpiCmd, cmdPrefix } = job;\n\n  const { computedSystem, computedQueue, computedJobType } = useMemo(() => {\n    const { execSystemLogicalQueue, execSystemId, jobType } = job;\n    const computedSystem = execSystemId ?? computeDefaultSystem(app)?.systemId;\n    const computedQueue =\n      execSystemLogicalQueue ?? computeDefaultQueue(job, app, systems)?.queue;\n    const computedJobType =\n      jobType ?? computeDefaultJobType(job, app, systems)?.jobType;\n    return {\n      computedSystem,\n      computedQueue,\n      computedJobType,\n    };\n  }, [job, app, systems]);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={computedSystem}\n        error=\"An execution system is required\"\n        key=\"execution-system-id-summary\"\n      />\n      {computedJobType === Apps.JobTypeEnum.Batch && (\n        <StepSummaryField\n          field={computedQueue}\n          error=\"A logical queue is required\"\n          key=\"execution-system-queue-summary\"\n        />\n      )}\n      <StepSummaryField\n        field={`${\n          isMpi\n            ? `MPI Command: ${mpiCmd ?? \"system default\"}`\n            : `Command Prefix: ${cmdPrefix ?? \"system default\"}`\n        }`}\n        key=\"execution-mpi-summary\"\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object({\n  execSystemId: Yup.string(),\n  execSystemLogicalQueue: Yup.string(),\n  execSystemExecDir: Yup.string(),\n  execSystemInputDir: Yup.string(),\n  execSystemOutputDir: Yup.string(),\n  jobType: Yup.string(),\n  nodeCount: Yup.number(),\n  coresPerNode: Yup.number(),\n  memoryMB: Yup.number(),\n  maxMinutes: Yup.number(),\n  isMpi: Yup.boolean(),\n  mpiCmd: Yup.string(),\n  cmdPrefix: Yup.string(),\n});\n\ntype QueueErrors = {\n  nodeCount?: string;\n  coresPerNode?: string;\n  memoryMB?: string;\n  maxMinutes?: string;\n  execSystemId?: string;\n  execSystemLogicalQueue?: string;\n};\n\nconst validateThunk = ({ app, systems }: JobLauncherProviderParams) => {\n  return (values: Partial<Jobs.ReqSubmitJob>) => {\n    const {\n      execSystemId,\n      execSystemLogicalQueue,\n      nodeCount,\n      coresPerNode,\n      memoryMB,\n      maxMinutes,\n      jobType,\n    } = values;\n    const errors: QueueErrors = {};\n\n    const validation = validateExecSystem(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    if (validation === ValidateExecSystemResult.ErrorNoExecSystem) {\n      errors.execSystemId = `This app does not have a default execution system. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNotFound) {\n      errors.execSystemId = `The specified exec system cannot be found`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNoQueues) {\n      errors.execSystemId = `The specified exec system is not capable of batch jobs`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorNoQueue) {\n      errors.execSystemLogicalQueue = `Neither the application nor the selected system specifies a default queue. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorQueueNotFound) {\n      errors.execSystemLogicalQueue = `The specified queue cannot be found on the selected system`;\n    }\n\n    // Skip queue validation if the job is a FORK job\n    if (\n      jobType === Apps.JobTypeEnum.Fork ||\n      computeDefaultJobType(values as Partial<Jobs.ReqSubmitJob>, app, systems)\n        ?.jobType === Apps.JobTypeEnum.Fork\n    ) {\n      return errors;\n    }\n\n    const computedExecSystem = computeDefaultSystem(app);\n    const computedLogicalQueue = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const selectedSystem = systems.find(\n      (system) => system.id === (execSystemId ?? computedExecSystem.systemId)\n    );\n\n    if (!selectedSystem?.batchLogicalQueues?.length) {\n      errors.execSystemLogicalQueue = `The selected system does not have any batch logical queues`;\n      return errors;\n    }\n\n    const queue = selectedSystem?.batchLogicalQueues?.find(\n      (queue) =>\n        queue.name === (execSystemLogicalQueue ?? computedLogicalQueue?.queue)\n    );\n    if (!queue) {\n      errors.execSystemLogicalQueue = `The specified queue does not exist on the selected execution system`;\n      return errors;\n    }\n\n    if (!!nodeCount) {\n      if (queue?.maxNodeCount && nodeCount > queue?.maxNodeCount) {\n        errors.nodeCount = `The maximum number of nodes for this queue is ${queue?.maxNodeCount}`;\n      }\n      if (queue?.minNodeCount && nodeCount < queue?.minNodeCount) {\n        errors.nodeCount = `The minimum number of nodes for this queue is ${queue?.minNodeCount}`;\n      }\n    }\n    if (!!coresPerNode) {\n      if (queue?.maxCoresPerNode && coresPerNode > queue?.maxCoresPerNode) {\n        errors.coresPerNode = `The maximum number of cores per node for this queue is ${queue?.maxCoresPerNode}`;\n      }\n      if (queue?.minCoresPerNode && coresPerNode < queue?.minCoresPerNode) {\n        errors.coresPerNode = `The minimum number of cores per node for this queue is ${queue?.minCoresPerNode}`;\n      }\n    }\n    if (!!memoryMB) {\n      if (queue?.maxMemoryMB && memoryMB > queue?.maxMemoryMB) {\n        errors.memoryMB = `The maximum amount of memory for this queue is ${queue?.maxMemoryMB} megabytes`;\n      }\n      if (queue?.minMemoryMB && memoryMB < queue?.minMemoryMB) {\n        errors.memoryMB = `The minimum amount of memory for this queue is ${queue?.minMemoryMB} megabytes`;\n      }\n    }\n    if (!!maxMinutes) {\n      if (queue?.maxMinutes && maxMinutes > queue?.maxMinutes) {\n        errors.maxMinutes = `The maximum number of minutes for a job on this queue is ${queue?.maxMinutes}`;\n      }\n      if (queue?.minMinutes && maxMinutes < queue?.minMinutes) {\n        errors.maxMinutes = `The minimum number of minutes for a job on this queue is ${queue?.minMinutes}`;\n      }\n    }\n    return errors;\n  };\n};\n\nconst generateInitialValues = ({\n  job,\n  app,\n  systems,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  execSystemId: job.execSystemId,\n  execSystemLogicalQueue: job.execSystemLogicalQueue,\n  jobType: job.jobType,\n  execSystemExecDir: job.execSystemExecDir,\n  execSystemInputDir: job.execSystemInputDir,\n  execSystemOutputDir: job.execSystemOutputDir,\n  nodeCount: job.nodeCount,\n  coresPerNode: job.coresPerNode,\n  memoryMB: job.memoryMB,\n  maxMinutes: job.maxMinutes,\n  isMpi: job.isMpi,\n  mpiCmd: job.mpiCmd,\n  cmdPrefix: job.cmdPrefix,\n});\n\nconst step: JobStep = {\n  id: \"execution\",\n  name: \"Execution Options\",\n  render: <ExecOptions />,\n  summary: <ExecOptionsSummary />,\n  generateInitialValues,\n  validateThunk,\n  validationSchema,\n};\n\nexport default step;\n","import React from \"react\";\nimport { JobDetail } from \"cookbooks-ui/components/jobs\";\nimport { PageLayout, LayoutHeader } from \"cookbooks-ui/_common\";\n\ninterface JobDetailProps {\n  jobUuid: string;\n}\n\nconst Layout: React.FC<JobDetailProps> = ({ jobUuid }) => {\n  const header = <LayoutHeader type={\"sub-header\"}>Job Details</LayoutHeader>;\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <JobDetail jobUuid={jobUuid}></JobDetail>\n    </div>\n  );\n  return <PageLayout top={header} right={body}></PageLayout>;\n};\n\nexport default Layout;\n","import React, { useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  FieldArray,\n  useFormikContext,\n  useField,\n  FieldArrayRenderProps,\n} from \"formik\";\nimport { FormikInput } from \"cookbooks-ui/_common\";\nimport { JobStep } from \"..\";\nimport * as Yup from \"yup\";\n\ntype EnvVariableFieldProps = {\n  index: number;\n  arrayHelpers: FieldArrayRenderProps;\n};\n\nconst EnvVariableField: React.FC<EnvVariableFieldProps> = ({\n  index,\n  arrayHelpers,\n}) => {\n  const [field] = useField(`parameterSet.envVariables.${index}.key`);\n  const key = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`envVariables.${index}`}\n      title={!!key && key.length ? key : \"Environment Variable\"}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`parameterSet.envVariables.${index}.key`}\n        required={true}\n        label=\"Key\"\n        description=\"The key name for this environment variable\"\n      />\n      <FormikInput\n        name={`parameterSet.envVariables.${index}.value`}\n        required={true}\n        label=\"Value\"\n        description=\"A value for this environment variable\"\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\nconst EnvVariablesRender: React.FC = () => {\n  const { values } = useFormikContext();\n  const envVariables =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.envVariables ?? [];\n  return (\n    <FieldArray\n      name={\"parameterSet.envVariables\"}\n      render={(arrayHelpers) => (\n        <div>\n          <div className={fieldArrayStyles[\"array-group\"]}>\n            {envVariables.map((envVariable, index) => (\n              <EnvVariableField index={index} arrayHelpers={arrayHelpers} />\n            ))}\n          </div>\n          <Button\n            onClick={() => arrayHelpers.push({ key: \"\", value: \"\" })}\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const EnvVariables: React.FC = () => {\n  return (\n    <div>\n      <h2>Environment Variables</h2>\n      <EnvVariablesRender />\n    </div>\n  );\n};\n\nexport const EnvVariablesSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const envVariables = job.parameterSet?.envVariables ?? [];\n  return (\n    <div>\n      {envVariables.map((envVariable) => (\n        <StepSummaryField\n          field={`${envVariable.key} : ${envVariable.value}`}\n          key={`env-variables-summary-${envVariable.key}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    envVariables: Yup.array(\n      Yup.object({\n        key: Yup.string()\n          .min(1)\n          .required(\"A key name is required for this environment variable\"),\n        value: Yup.string().required(\n          \"A value is required for this environment variable\"\n        ),\n      })\n    ),\n  }),\n});\n\nconst step: JobStep = {\n  id: \"envVariables\",\n  name: \"Environment Variables\",\n  render: <EnvVariables />,\n  summary: <EnvVariablesSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      envVariables: job.parameterSet?.envVariables,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useCallback, useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport { FieldArray, useField, useFormikContext } from \"formik\";\nimport { getArgMode } from \"tapis-api/utils/jobArgs\";\nimport { ArgField, argsSchema, assembleArgSpec } from \"./AppArgs\";\nimport { DescriptionList } from \"cookbooks-ui/_common\";\nimport * as Yup from \"yup\";\nimport styles from \"./SchedulerOptions.module.scss\";\nimport { JobStep } from \"..\";\n\nconst findSchedulerProfile = (values: Partial<Jobs.ReqSubmitJob>) => {\n  // Look at current schedulerOptions\n  const argSpecs = values.parameterSet?.schedulerOptions ?? [];\n  // Find any scheduler option that has --tapis-profile set\n  const profile = argSpecs.find((argSpec) =>\n    argSpec.arg?.includes(\"--tapis-profile\")\n  );\n  if (profile) {\n    // Return the name of the profile after --tapis-profile\n    const args = profile.arg?.split(\" \");\n    if (args && args.length >= 2) {\n      return args[1];\n    }\n  }\n  return undefined;\n};\n\nconst SchedulerProfiles: React.FC = () => {\n  const { schedulerProfiles } = useJobLauncher();\n  const { values, setValues } = useFormikContext();\n  const setSchedulerProfile = useCallback(\n    (newProfile: Jobs.JobArgSpec) => {\n      const argSpecs =\n        (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.schedulerOptions ??\n        [];\n      setValues({\n        parameterSet: {\n          schedulerOptions: [\n            newProfile,\n            ...argSpecs.filter(\n              (existing) => !existing.arg?.includes(\"--tapis-profile\")\n            ),\n          ],\n        },\n      });\n    },\n    [values, setValues]\n  );\n  const currentProfile = useMemo(\n    () => findSchedulerProfile(values as Partial<Jobs.ReqSubmitJob>),\n    [values]\n  );\n\n  return (\n    <div className={fieldArrayStyles.array}>\n      <h3>Scheduler Profiles</h3>\n      {schedulerProfiles.map(\n        ({\n          name,\n          description,\n          moduleLoadCommand,\n          hiddenOptions,\n          modulesToLoad,\n          owner,\n          tenant,\n        }) => (\n          <Collapse\n            key={`scheduler-profiles-${name}`}\n            className={fieldArrayStyles[\"array-group\"]}\n            title={`${name} ${name === currentProfile ? \"(selected)\" : \"\"}`}\n          >\n            <div className={styles[\"scheduler-option\"]}>\n              <div>{description}</div>\n              <DescriptionList\n                data={{\n                  moduleLoadCommand,\n                  modulesToLoad,\n                  hiddenOptions,\n                  owner,\n                  tenant,\n                }}\n                className={styles[\"scheduler-option-list\"]}\n              />\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() =>\n                setSchedulerProfile({\n                  name: `${name} Scheduler Profile`,\n                  description,\n                  include: true,\n                  arg: `--tapis-profile ${name}`,\n                })\n              }\n              disabled={name === currentProfile}\n            >\n              Use This Profile\n            </Button>\n          </Collapse>\n        )\n      )}\n    </div>\n  );\n};\n\nconst SchedulerOptionArray: React.FC = () => {\n  const { app } = useJobLauncher();\n  const [field] = useField(\"parameterSet.schedulerOptions\");\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n\n  const schedulerOptionSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.schedulerOptions ?? [],\n    [app]\n  );\n  return (\n    <FieldArray\n      name=\"parameterSet.schedulerOptions\"\n      render={(arrayHelpers) => (\n        <>\n          <div className={fieldArrayStyles.array}>\n            <h3>{`Scheduler Arguments`}</h3>\n            <div className={fieldArrayStyles[\"array-group\"]}>\n              {args.map((arg, index) => {\n                const inputMode = arg.name\n                  ? getArgMode(arg.name, schedulerOptionSpecs)\n                  : undefined;\n                return (\n                  <ArgField\n                    index={index}\n                    arrayHelpers={arrayHelpers}\n                    name={`parameterSet.schedulerOptions.${index}`}\n                    argType={\"scheduler option\"}\n                    inputMode={inputMode}\n                  />\n                );\n              })}\n            </div>\n            <Button\n              onClick={() =>\n                arrayHelpers.push({\n                  name: \"\",\n                  description: \"\",\n                  include: true,\n                  arg: \"\",\n                })\n              }\n              size=\"sm\"\n            >\n              + Add\n            </Button>\n          </div>\n          <SchedulerProfiles />\n        </>\n      )}\n    />\n  );\n};\n\nexport const SchedulerOptions: React.FC = () => {\n  return (\n    <div>\n      <h2>Scheduler Options</h2>\n      <SchedulerOptionArray />\n    </div>\n  );\n};\n\nexport const SchedulerOptionsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const schedulerOptions = job.parameterSet?.schedulerOptions ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`Scheduler Profile: ${\n          findSchedulerProfile(job) ?? \"none selected\"\n        }`}\n        key={`scheduler-profile-summary`}\n      />\n      <StepSummaryField\n        field={`Scheduler Args: ${assembleArgSpec(schedulerOptions)}`}\n        key={`scheduler-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: \"schedulerOptions\",\n  name: \"Scheduler Options\",\n  render: <SchedulerOptions />,\n  summary: <SchedulerOptionsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useMemo } from \"react\";\nimport { Jobs } from \"@tapis/tapis-typescript\";\nimport FieldWrapper from \"cookbooks-ui/_common/FieldWrapper\";\nimport { Input } from \"reactstrap\";\nimport { Button } from \"reactstrap\";\nimport { useJobLauncher, StepSummaryField } from \"../components\";\nimport fieldArrayStyles from \"../FieldArray.module.scss\";\nimport { Collapse } from \"cookbooks-ui/_common\";\nimport {\n  FieldArray,\n  useFormikContext,\n  Field,\n  ErrorMessage,\n  FieldProps,\n} from \"formik\";\nimport { InputGroup, InputGroupAddon } from \"reactstrap\";\nimport {\n  FormikCheck,\n  FormikTapisFile,\n  FormikSelect,\n} from \"cookbooks-ui/_common/FieldWrapperFormik\";\nimport * as Yup from \"yup\";\nimport formStyles from \"cookbooks-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css\";\nimport { JobStep } from \"..\";\n\ntype ArrayGroupProps = {\n  values: Array<string>;\n  name: string;\n  label: string;\n  description: string;\n};\n\nconst ArrayGroup: React.FC<ArrayGroupProps> = ({\n  values,\n  name,\n  label,\n  description,\n}) => {\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <Collapse\n          open={values.length > 0}\n          title={label}\n          note={`${values.length} items`}\n          isCollapsable={true}\n          className={fieldArrayStyles.array}\n        >\n          <FieldWrapper\n            label={label}\n            required={false}\n            description={description}\n          >\n            <div className={fieldArrayStyles[\"array-group\"]}>\n              {values.map((value, index) => (\n                <>\n                  <Field name={`${name}.${index}`}>\n                    {({ field }: FieldProps) => (\n                      <InputGroup>\n                        <Input {...field} bsSize=\"sm\" />\n                        <InputGroupAddon addonType=\"append\">\n                          <Button\n                            size=\"sm\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            Remove\n                          </Button>\n                        </InputGroupAddon>\n                      </InputGroup>\n                    )}\n                  </Field>\n                  <ErrorMessage\n                    name={`${name}.${index}`}\n                    className=\"form-field__help\"\n                  >\n                    {(message) => (\n                      <div\n                        className={`${formStyles[\"form-field__help\"]} ${fieldArrayStyles.description}`}\n                      >\n                        {message}\n                      </div>\n                    )}\n                  </ErrorMessage>\n                </>\n              ))}\n            </div>\n            <Button onClick={() => arrayHelpers.push(\"\")} size=\"sm\">\n              + Add\n            </Button>\n          </FieldWrapper>\n        </Collapse>\n      )}\n    />\n  );\n};\n\nconst ArchiveFilterRender: React.FC = () => {\n  const { values } = useFormikContext();\n  const includes =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.archiveFilter\n      ?.includes ?? [];\n  const excludes =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.archiveFilter\n      ?.excludes ?? [];\n  return (\n    <div>\n      <h3>Archive Filters</h3>\n      <ArrayGroup\n        name=\"parameterSet.archiveFilter.includes\"\n        label=\"Includes\"\n        description=\"File patterns specified here will be included during job archiving\"\n        values={includes}\n      />\n      <ArrayGroup\n        name=\"parameterSet.archiveFilter.excludes\"\n        label=\"Excludes\"\n        description=\"File patterns specified here will be excluded from job archiving\"\n        values={excludes}\n      />\n      <FormikCheck\n        name=\"parameterSet.archiveFilter.includeLaunchFiles\"\n        label=\"Include Launch Files\"\n        description=\"If checked, launch files will be included during job archiving\"\n        required={false}\n      />\n    </div>\n  );\n};\n\nconst ArchiveOptions: React.FC = () => {\n  const { systems } = useJobLauncher();\n  const { values } = useFormikContext();\n  const archiveSystemId = useMemo(\n    () => (values as Partial<Jobs.ReqSubmitJob>).archiveSystemId,\n    [values]\n  );\n  return (\n    <>\n      <div className={fieldArrayStyles.item}>\n        <FormikSelect\n          name=\"archiveSystemId\"\n          label=\"Archive System ID\"\n          description=\"If selected, this system ID will be used for job archiving instead of the execution system default\"\n          required={false}\n        >\n          <option value={undefined}></option>\n          {systems.map((system) => (\n            <option\n              value={system.id}\n              key={`archive-system-select-${system.id}`}\n            >\n              {system.id}\n            </option>\n          ))}\n        </FormikSelect>\n        <FormikTapisFile\n          allowSystemChange={false}\n          systemId={archiveSystemId}\n          disabled={!archiveSystemId}\n          name=\"archiveSystemDir\"\n          label=\"Archive System Directory\"\n          description=\"The directory on the selected system in which to place archived files\"\n          required={false}\n          files={false}\n          dirs={true}\n        />\n        <FormikCheck\n          name=\"archiveOnAppError\"\n          label=\"Archive On App Error\"\n          description=\"If checked, the job will be archived even if there is an execution error\"\n          required={false}\n        />\n      </div>\n    </>\n  );\n};\n\nexport const Archive: React.FC = () => {\n  return (\n    <div>\n      <h2>Archive Options</h2>\n      <ArchiveOptions />\n      <ArchiveFilterRender />\n    </div>\n  );\n};\n\nexport const ArchiveSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const includes = job.parameterSet?.archiveFilter?.includes ?? [];\n  const excludes = job.parameterSet?.archiveFilter?.excludes ?? [];\n  const { archiveSystemId, archiveSystemDir, archiveOnAppError } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={`Archive System ID: ${archiveSystemId ?? \"default\"}`}\n        key={`archive-system-id-summary`}\n      />\n      <StepSummaryField\n        field={`Archive System Directory: ${archiveSystemDir ?? \"default\"}`}\n        key={`archive-system-dir-summary`}\n      />\n      <StepSummaryField\n        field={`Archive On App Error: ${archiveOnAppError}`}\n        key={`archive-on-app-error-summary`}\n      />\n      <StepSummaryField\n        field={`Includes: ${includes.length}`}\n        key={`archive-filter-includes-summary`}\n      />\n      <StepSummaryField\n        field={`Excludes: ${excludes.length}`}\n        key={`archive-filter-excludes-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  archiveOnAppError: Yup.boolean(),\n  archiveSystemId: Yup.string(),\n  archiveSystemDir: Yup.string(),\n  parameterSet: Yup.object({\n    archiveFilter: Yup.object({\n      includes: Yup.array(\n        Yup.string()\n          .min(1)\n          .required(\"A pattern must be specified for this include\")\n      ),\n      excludes: Yup.array(\n        Yup.string()\n          .min(1)\n          .required(\"A pattern must be specified for this exclude\")\n      ),\n      includeLaunchFiles: Yup.boolean(),\n    }),\n  }),\n});\n\nconst step: JobStep = {\n  id: \"archiving\",\n  name: \"Archiving\",\n  render: <Archive />,\n  summary: <ArchiveSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    archiveOnAppError: job.archiveOnAppError,\n    archiveSystemId: job.archiveSystemId,\n    archiveSystemDir: job.archiveSystemDir,\n    parameterSet: {\n      archiveFilter: job.parameterSet?.archiveFilter,\n    },\n  }),\n};\n\nexport default step;\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport JobDetail from \"../JobDetail\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">Select a job from the list.</SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:jobUuid`}\n        render={({\n          match: {\n            params: { jobUuid },\n          },\n        }: RouteComponentProps<{ jobUuid: string }>) => (\n          <JobDetail jobUuid={jobUuid} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { JobsNav } from \"../_components\";\nimport { Router } from \"../_Router\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Jobs</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <JobsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import SystemsNav from './SystemsNav';\n\nexport default SystemsNav;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/systems\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst SystemsNav: React.FC = () => {\n  const { url } = useRouteMatch();\n  // Get a systems listing with default request params\n  const { data, isLoading, error } = useList();\n  const definitions: Array<Systems.TapisSystem> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {definitions.length ? (\n          definitions.map((system) => (\n            <NavItem\n              to={`${url}/${system.id}`}\n              icon=\"data-files\"\n              key={system.id}\n            >\n              {`${system.id} (${system.host})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No systems found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default SystemsNav;\n","import { SystemDetail } from \"cookbooks-ui/components/systems\";\nimport { PageLayout, LayoutHeader } from \"cookbooks-ui/_common\";\n\nconst Layout: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const header = (\n    <LayoutHeader type={\"sub-header\"}>System Details</LayoutHeader>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <SystemDetail systemId={systemId}></SystemDetail>\n    </div>\n  );\n\n  return <PageLayout top={header} right={body}></PageLayout>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport SystemDetail from \"../SystemDetail\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select a system from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:systemId`}\n        render={({\n          match: {\n            params: { systemId },\n          },\n        }: RouteComponentProps<{ systemId: string }>) => (\n          <SystemDetail systemId={systemId} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\nimport { SystemsNav } from \"../_components\";\nimport { Router } from \"../_Router\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>System List</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <SystemsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import { fronteraSystem } from \"./frontera\";\nimport { ls6System } from \"./ls6\";\n\nconst systems = [\n  {\n    id: \"ls6\",\n    name: \"Lonestar 6\",\n    description:\n      \"Lonestar 6 is a Dell EMC PowerEdge cluster with Intel Xeon Platinum 8280M processors and NVIDIA A100 GPUs.\",\n    created: false,\n    spec: ls6System,\n  },\n  {\n    id: \"frontera\",\n    name: \"Frontera\",\n    description:\n      \"The primary computing system was provided by Dell EMC and powered by Intel processors, interconnected by a Mellanox Infiniband HDR and HDR-100 interconnect. The system has 8,008 available compute nodes\",\n    spec: fronteraSystem,\n    created: false,\n  },\n];\n\nexport default systems;\n","import { Systems } from \"@tapis/tapis-typescript\";\n\nexport const ls6System = {\n  id: \"ls6-gpu-a100-dev-v0.0.5\",\n  description: \"System for running jobs on the LS6 cluster\",\n  systemType: \"LINUX\",\n  host: \"ls6.tacc.utexas.edu\",\n  defaultAuthnMethod: \"PASSWORD\",\n  effectiveUserId: \"${apiUserId}\",\n  port: 22,\n  rootDir: \"/\",\n  canExec: true,\n  jobRuntimes: [{ runtimeType: \"SINGULARITY\" }],\n  jobWorkingDir: \"HOST_EVAL($WORK2)\",\n  canRunBatch: true,\n  batchScheduler: \"SLURM\",\n  batchSchedulerProfile: \"tacc\",\n  batchDefaultLogicalQueue: \"development\",\n  batchLogicalQueues: [\n    {\n      name: \"gpu-a100\",\n      hpcQueueName: \"gpu-a100\",\n      maxJobs: -1,\n      maxJobsPerUser: 40,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 128,\n      minMemoryMB: 1,\n      maxMemoryMB: 256000,\n      minMinutes: 1,\n      maxMinutes: 2880,\n    },\n    {\n      name: \"development\",\n      hpcQueueName: \"development\",\n      maxJobs: 50,\n      maxJobsPerUser: 10,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 68,\n      minMemoryMB: 1,\n      maxMemoryMB: 16384,\n      minMinutes: 1,\n      maxMinutes: 120,\n    },\n  ],\n} as Systems.ReqCreateSystem;\n","import { Systems } from \"@tapis/tapis-typescript\";\n\nexport const fronteraSystem = {\n  id: \"frontera\",\n  description: \"System for running jobs on the Frontera cluster\",\n  systemType: \"LINUX\",\n  host: \"frontera.tacc.utexas.edu\",\n  defaultAuthnMethod: \"PASSWORD\",\n  effectiveUserId: \"${apiUserId}\",\n  port: 22,\n  rootDir: \"/\",\n  canExec: true,\n  jobRuntimes: [{ runtimeType: \"SINGULARITY\" }],\n  jobWorkingDir: \"HOST_EVAL($WORK2)\",\n  canRunBatch: true,\n  batchScheduler: \"SLURM\",\n  batchSchedulerProfile: \"tacc\",\n  batchDefaultLogicalQueue: \"development\",\n  batchLogicalQueues: [\n    {\n      name: \"gpu-a100\",\n      hpcQueueName: \"gpu-a100\",\n      maxJobs: -1,\n      maxJobsPerUser: 40,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 128,\n      minMemoryMB: 1,\n      maxMemoryMB: 256000,\n      minMinutes: 1,\n      maxMinutes: 2880,\n    },\n    {\n      name: \"development\",\n      hpcQueueName: \"development\",\n      maxJobs: 50,\n      maxJobsPerUser: 10,\n      minNodeCount: 1,\n      maxNodeCount: 16,\n      minCoresPerNode: 1,\n      maxCoresPerNode: 68,\n      minMemoryMB: 1,\n      maxMemoryMB: 16384,\n      minMinutes: 1,\n      maxMinutes: 120,\n    },\n  ],\n} as Systems.ReqCreateSystem;\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { SectionHeader, LoadingSpinner, Icon } from \"cookbooks-ui/_common\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardText,\n} from \"reactstrap\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useList as useSystemsList } from \"tapis-hooks/systems\";\nimport styles from \"./Dashboard.module.scss\";\nimport \"./Dashboard.scss\";\nimport systemCookbooks from \"catalog/systems\";\n\ntype DashboardCardProps = {\n  icon: string;\n  link: string;\n  name: string;\n  text: string;\n  created: boolean;\n};\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  icon,\n  link,\n  name,\n  text,\n  created,\n}) => {\n  return (\n    <Card className={styles.card}>\n      <CardHeader>\n        <div className={styles[\"card-header\"]}>\n          <div>\n            <Icon name={icon} className=\"dashboard__card-icon\" />\n          </div>\n          <div>{name}</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          <div>{text}</div>\n        </CardTitle>\n        <CardText>{}</CardText>\n      </CardBody>\n      <CardFooter className={styles[\"card-footer\"]}>\n        {created ? (\n          <span>Installed</span>\n        ) : (\n          <Link to={link}>Create {name}</Link>\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const { accessToken, claims } = useTapisConfig();\n\n  const { isLoading, error, data: systems } = useSystemsList();\n\n  if (isLoading) return <LoadingSpinner />;\n\n  return (\n    <div>\n      {/* <SectionHeader className=\"dashboard__section-header\">\n        Systems installable on {claims[\"tapis/tenant_id\"]}\n      </SectionHeader> */}\n      <SectionHeader className=\"dashboard__section-header\">\n        Install a system using cookbooks\n      </SectionHeader>\n      <div className={styles.cards}>\n        {accessToken ? (\n          <>\n            {systemCookbooks\n              .filter((system) => system.spec.systemType === \"LINUX\")\n              .sort((a, b) =>\n                a.created === b.created ? 0 : a.created ? 1 : -1\n              )\n              .map((sys) => {\n                // sys.created = systems?.result?.find(\n                //   (s) => s.host === sys.spec.host\n                // )\n                //   ? true\n                //   : false;\n                return (\n                  <DashboardCard\n                    key={sys.id}\n                    icon=\"data-files\"\n                    name={sys.name}\n                    text={sys.description}\n                    link={`/cookbooks/systems/${sys.id}`}\n                    created={sys.created}\n                  />\n                );\n              })}\n          </>\n        ) : (\n          <Card>\n            <CardHeader>\n              <div className={styles[\"card-header\"]}>\n                <div>\n                  <Icon name=\"user\" className=\"dashboard__card-icon\" />\n                </div>\n                <div>You are not logged in</div>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle>Please log in to use TAPIS</CardTitle>\n            </CardBody>\n            <CardFooter className={styles[\"card-footer\"]}>\n              <Link to=\"/login\">Proceed to login</Link>\n              <Icon name=\"push-right\" />\n            </CardFooter>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { Systems } from \"@tapis/tapis-typescript\";\nimport { apiGenerator, errorDecoder } from \"tapis-api/utils\";\n\nconst create = (\n  request: Systems.ReqCreateSystem,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespResourceUrl>(() =>\n    api.createSystem({ reqCreateSystem: request })\n  );\n};\n\nexport default create;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport QueryKeys from \"./queryKeys\";\nimport create from \"tapis-api/systems/create\";\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || \"\";\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Systems.RespResourceUrl, Error, Systems.ReqCreateSystem>(\n      [QueryKeys, basePath, jwt],\n      (request: Systems.ReqCreateSystem) => create(request, basePath, jwt)\n    );\n  //   useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n  //   [QueryKeys.submit, appId, appVersion, basePath, jwt],\n  //   (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n  // );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Systems.ReqCreateSystem) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useCreate;\n","const QueryKeys = {\n  create: \"credentials/create\",\n};\n\nexport default QueryKeys;\n","import { Systems } from \"@tapis/tapis-typescript\";\nimport { apiGenerator, errorDecoder } from \"tapis-api/utils\";\n\nconst create = (\n  username: string,\n  systemId: string,\n  request: Systems.ReqCreateCredential,\n  basePath: string,\n  jwt: string\n) => {\n  console.log(username);\n  const api: Systems.CredentialsApi = apiGenerator<Systems.CredentialsApi>(\n    Systems,\n    Systems.CredentialsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespResourceUrl>(() =>\n    api.createUserCredential({\n      systemId: systemId,\n      userName: username,\n      reqCreateCredential: request,\n    })\n  );\n};\n\nexport default create;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Systems } from \"@tapis/tapis-typescript\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport QueryKeys from \"./queryKeys\";\nimport create from \"tapis-api/credentials/create\";\nimport { ReqCreateCredential } from \"./types\";\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || \"\";\n\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Systems.RespBasic, Error, ReqCreateCredential>(\n      [QueryKeys, basePath, jwt],\n      (request: ReqCreateCredential) =>\n        create(\n          request.username,\n          request.systemId,\n          request.request,\n          basePath,\n          jwt\n        )\n    );\n  useEffect(() => reset(), [reset]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: ReqCreateCredential) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useCreate;\n","import cookbooksSystems from \"catalog/systems\";\nimport { FormikInput, LoadingSpinner } from \"cookbooks-ui/_common\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport useCreate from \"tapis-hooks/systems/useCreate\";\nimport useCreateCredentials from \"tapis-hooks/credentials/useCreate\";\nimport * as Yup from \"yup\";\nimport { ReqCreateCredential } from \"tapis-hooks/credentials/types\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useList } from \"tapis-hooks/systems\";\n\nconst Layout: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const initialValues = {\n    password: \"\",\n  };\n\n  const { claims } = useTapisConfig();\n\n  const username = claims[\"tapis/username\"];\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n  const {\n    isLoading: isLoadingCredentials,\n    isSuccess: isSuccessCredentials,\n    error: errorCredentials,\n    submit: submitCredentials,\n    data: dataCredentials,\n  } = useCreateCredentials();\n\n  const { data: systems, isLoading: isLoadingSystems } = useList();\n\n  const onSubmit = async (values: any) => {\n    if (!cookbookSystem) return;\n    await submitCredentials({\n      username: username,\n      systemId: cookbookSystem.spec.id,\n      request: { password: values.password },\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required(\"Password is required.\"),\n  });\n\n  const cookbookSystem = cookbooksSystems.find(\n    (system) => system.id === systemId\n  );\n\n  useEffect(() => {\n    if (!cookbookSystem) return;\n    const systemCreated = systems?.result?.find(\n      (system) => system.id === cookbookSystem.spec.id\n    );\n    console.log(systemCreated);\n    if (!systemCreated) submit(cookbookSystem.spec);\n  }, [systems]);\n\n  const renderLoading = (\n    <>\n      <LoadingSpinner placement=\"inline\" />\n    </>\n  );\n\n  const renderform = (\n    <div>\n      <h1> Create system: {cookbookSystem?.id} </h1>\n      <p> {cookbookSystem?.description} </p>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form id=\"rename-form\">\n          <FormikInput\n            name=\"password\"\n            type=\"password\"\n            label={\"Password\"}\n            required={true}\n            description=\"The password for the user.\"\n          />\n          <SubmitWrapper\n            isLoading={isLoading || isLoadingCredentials}\n            error={error || errorCredentials}\n            success={isSuccessCredentials ? \"System created\" : undefined}\n          >\n            <Button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={\n                isLoadingCredentials || isSuccessCredentials ? true : false\n              }\n            >\n              Create\n            </Button>\n          </SubmitWrapper>\n        </Form>\n      </Formik>\n    </div>\n  );\n  if (isLoading) return renderLoading;\n  if (error) <div>{error?.message}</div>;\n  return renderform;\n};\n\nexport default Layout;\n","import llamaNotebookApp from \"catalog/apps/llama-notebook\";\nimport { useCallback, useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport create from \"tapis-api/apps/create\";\nimport useCreate from \"tapis-hooks/apps/useCreate\";\n\nexport const AppCreate: React.FC = () => {\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n  const onCreate = useCallback(() => {\n    llamaNotebookApp.id = `${llamaNotebookApp.id}-${Date.now()}`;\n    submit(llamaNotebookApp);\n  }, [submit]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      window.location.reload();\n    }\n  }, [isSuccess]);\n\n  return (\n    <div>\n      {error && <div>Error: {error.message}</div>}\n      <Button\n        color=\"primary\"\n        disabled={isLoading || isSuccess}\n        onClick={onCreate}\n      >\n        Create default template\n      </Button>\n    </div>\n  );\n};\n","import { Apps } from \"@tapis/tapis-typescript\";\n\nconst imgClassifyApp: Apps.ReqPostApp = {\n  id: \"img-classify\",\n  version: \"v1\",\n  description: \"Image classifier run using Singularity in batch mode\",\n  jobType: Apps.JobTypeEnum.Batch,\n  runtime: Apps.RuntimeEnum.Singularity,\n  runtimeOptions: [Apps.RuntimeOptionEnum.SingularityRun],\n  containerImage: \"docker://tapis/img-classify-sing:0.1\",\n  jobAttributes: {\n    parameterSet: {\n      appArgs: [\n        {\n          arg: \"--image_file\",\n          name: \"arg1\",\n        },\n      ],\n      archiveFilter: { includeLaunchFiles: false },\n    },\n    nodeCount: 1,\n    coresPerNode: 1,\n    memoryMB: 1,\n    maxMinutes: 10,\n  },\n};\n\nexport default imgClassifyApp;\n","import imgClassifyApp from \"./img-classify-mosorio\";\nimport llamaNotebookApp from \"./llama-notebook\";\n\nconst apps = [\n  {\n    name: \"LLama Index Environment\",\n    description:\n      \"Run an interactive Jupyter Lab session on an HPC compute node. For the LLama Index Environment\",\n    spec: llamaNotebookApp,\n  },\n  {\n    name: \"Image classification\",\n    description: \"Image classification using a pre-trained model\",\n    spec: imgClassifyApp,\n  },\n];\n\nexport default apps;\n","import AppsNav from './AppsNav';\nexport default AppsNav;\n","import React from \"react\";\nimport { Navbar, NavItem } from \"cookbooks-ui/_wrappers/Navbar\";\nimport { AppCreate } from \"./CreateApp\";\nimport appList from \"../../../../../catalog/apps\";\n\nconst AppsNav: React.FC = () => {\n  return (\n    <Navbar>\n      {appList.length ? (\n        appList.map((app) => (\n          <NavItem\n            to={`/cookbooks/apps/${app.spec.id}/${app.spec.version}`}\n            icon=\"applications\"\n            key={app.spec.id}\n          >\n            {`${app.name} v${app.spec.version}`}\n          </NavItem>\n        ))\n      ) : (\n        <>\n          <i>No templates found</i>\n          <AppCreate />\n        </>\n      )}\n    </Navbar>\n  );\n};\n\nexport default AppsNav;\n","import React, { useEffect } from \"react\";\nimport { JobLauncher } from \"stories-ui/components/jobs\";\nimport { PageLayout, LayoutHeader, LoadingSpinner } from \"cookbooks-ui/_common\";\nimport cookbookApps from \"../../../../../catalog/apps\";\nimport ReadmeViewer from \"tapis-app/Cookbook/Readme\";\nimport { Button } from \"reactstrap\";\nimport useCreate from \"tapis-hooks/apps/useCreate\";\nimport { useList } from \"tapis-hooks/apps\";\nimport { Link } from \"react-router-dom\";\nimport { SubmitWrapper } from \"cookbooks-ui/_wrappers\";\nimport { useQueryClient } from \"react-query\";\nimport queryKeys from \"tapis-hooks/systems/queryKeys\";\n\nconst Layout: React.FC<{ appId: string; appVersion: string }> = ({\n  appId,\n  appVersion,\n}) => {\n  const { isLoading, error, isSuccess, submit, data } = useCreate();\n  const { isLoading: isLoadingApps, error: errorApps, data: apps } = useList();\n\n  const cookbookApp = cookbookApps.find(\n    (app) => app.spec.id === appId && app.spec.version === appVersion\n  );\n  const existingApp = apps?.result?.find(\n    (app) =>\n      app.id === cookbookApp?.spec.id &&\n      app.version === cookbookApp?.spec.version\n  )\n    ? true\n    : false;\n\n  const successText = (\n    <div>\n      Successfully created {cookbookApp?.name} {cookbookApp?.spec.version}\n    </div>\n  );\n  const queryClient = useQueryClient();\n\n  const button = (\n    <SubmitWrapper\n      isLoading={isLoading}\n      error={error}\n      success={isSuccess ? \"App created\" : undefined}\n    >\n      <Button\n        color=\"primary\"\n        onClick={() => {\n          if (!cookbookApp) return;\n          submit(cookbookApp?.spec);\n\n          queryClient.invalidateQueries(queryKeys.list);\n        }}\n        disabled={\n          cookbookApp === undefined || isLoading || isLoadingApps || existingApp\n        }\n        successText={successText}\n      >\n        Add\n      </Button>\n    </SubmitWrapper>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <LayoutHeader type={\"sub-header\"}>{cookbookApp?.name}</LayoutHeader>\n      <LayoutHeader type={\"sub-header\"}>\n        {isLoading || isLoadingApps ? (\n          <LoadingSpinner placement=\"inplace\" />\n        ) : existingApp ? (\n          <Link to={`/apps/${appId}/${appVersion}`}>View</Link>\n        ) : (\n          button\n        )}\n      </LayoutHeader>\n      {cookbookApp && cookbookApp.spec && cookbookApp.spec.notes ? (\n        <ReadmeViewer\n          id={cookbookApp?.spec.id}\n          version={cookbookApp?.spec.version}\n          notes={cookbookApp?.spec.notes}\n        />\n      ) : (\n        <span> No README </span>\n      )}\n    </div>\n  );\n\n  return <PageLayout right={body} />;\n};\n\nexport default React.memo(Layout);\n","import React from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport AppDetail from \"../AppDetail\";\nimport { SectionMessage } from \"cookbooks-ui/_common\";\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select an cookbook template from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:appId/:appVersion`}\n        render={({\n          match: {\n            params: { appVersion, appId },\n          },\n        }: RouteComponentProps<{\n          appId: string;\n          appVersion: string;\n        }>) => <AppDetail appId={appId} appVersion={appVersion} />}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { AppsNav } from \"../_components\";\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from \"cookbooks-ui/_common\";\n\nimport { Router } from \"../_Router\";\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Cookbooks</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <AppsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { ProtectedRoute } from \"cookbooks-ui/_common\";\nimport { useLogin } from \"tapis-hooks/authenticator\";\n\nimport Apps from \"../Apps\";\nimport Login from \"../Login\";\nimport Dashboard from \"../Dashboard\";\nimport Jobs from \"tapis-app/Jobs\";\nimport Systems from \"tapis-app/Systems\";\nimport SystemsCookbooks from \"tapis-app/Cookbooks/Systems\";\nimport SystemDetail from \"cookbooks-ui/components/systems/SystemDetail\";\nimport SystemCreate from \"tapis-app/Cookbooks/Systems/SystemCreate\";\nimport CookbooksApps from \"tapis-app/Cookbooks/Apps\";\n\nconst Router: React.FC = () => {\n  const { logout } = useLogin();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          return <Redirect to=\"/login\" />;\n        }}\n      />\n      <ProtectedRoute path=\"/systems\">\n        <Systems />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/apps\">\n        <Apps />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/jobs\">\n        <Jobs />\n      </ProtectedRoute>\n\n      <Route\n        path={`/cookbooks/systems/:systemId`}\n        render={({\n          match: {\n            params: { systemId },\n          },\n        }: RouteComponentProps<{ systemId: string }>) => (\n          <SystemCreate systemId={systemId} />\n        )}\n      />\n\n      <Route path=\"/cookbooks/systems\">\n        <SystemsCookbooks />\n      </Route>\n\n      <ProtectedRoute path=\"/cookbooks/apps\">\n        <CookbooksApps />\n      </ProtectedRoute>\n\n      {/* <ProtectedRoute path=\"/files\">\n        <Files />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/workflows\">\n        <Workflows />\n      </ProtectedRoute>\n      <Route path=\"/uipatterns\">\n        <SectionHeader>UI Patterns</SectionHeader>\n        <UIPatterns />\n      </Route> */}\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React, { useState, useEffect } from \"react\";\nimport { useNotifications, NotificationRecord, Notification } from \".\";\nimport Snackbar, { SnackbarCloseReason } from \"@material-ui/core/Snackbar\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport { Icon } from \"cookbooks-ui/_common\";\nimport styles from \"./NotificationToast.module.scss\";\n\nconst NotificationToast = () => {\n  type TransitionType =\n    | React.ComponentType<\n        SlideProps & {\n          children?: React.ReactElement<any, any> | undefined;\n        }\n      >\n    | undefined;\n  const { notifications, markread } = useNotifications();\n  const [open, setOpen] = useState(false);\n  const [notificationRecord, setNotificationRecord] =\n    useState<NotificationRecord | null>(null);\n  const [transition, setTransition] = React.useState<TransitionType>(undefined);\n\n  useEffect(() => {\n    if (notifications.length && !notificationRecord) {\n      // Set a new toast when we don't have an active one\n      setNotificationRecord({ ...notifications[0] });\n      setTransition(() => (props: SlideProps) => (\n        <Slide {...props} direction=\"right\" />\n      ));\n      setOpen(true);\n    } else if (notifications.length && notificationRecord && open) {\n      // Close an active toast when a new one is added\n      setOpen(false);\n      markread(notificationRecord?.id!);\n      setNotificationRecord({ ...notifications[0] });\n      setTransition(() => (props: SlideProps) => (\n        <Slide {...props} direction=\"right\" />\n      ));\n      setOpen(true);\n    }\n    /* eslint-disable-next-line */\n  }, [notifications]);\n\n  const handleExited = () => {\n    setNotificationRecord(null);\n    markread(notificationRecord?.id!);\n  };\n\n  type HandleCloseType = (\n    event: React.SyntheticEvent<any, Event>,\n    reason: SnackbarCloseReason\n  ) => void;\n\n  const handleClose: HandleCloseType = (_event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return notificationRecord && !notificationRecord.read ? (\n    <Snackbar\n      key={notificationRecord ? notificationRecord.id : undefined}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      TransitionComponent={transition}\n      open={open}\n      autoHideDuration={3500}\n      onClose={handleClose}\n      TransitionProps={{\n        onExited: handleExited,\n      }}\n      classes={{\n        anchorOriginBottomLeft: styles[\"notification-toast-container\"],\n      }}\n      ContentProps={{\n        classes: {\n          root: styles[\"notification-toast\"],\n          message: styles[\"notification-toast-body\"],\n        },\n      }}\n      message={<ToastMessage notification={notificationRecord!.notification} />}\n    />\n  ) : null;\n};\n\nexport const ToastMessage: React.FC<{ notification: Notification }> = ({\n  notification,\n}) => {\n  return (\n    <>\n      <div className={styles[\"notification-toast-icon-wrapper\"]}>\n        <Icon\n          name={notification.icon}\n          className={\n            notification.status === \"ERROR\" ? styles[\"toast-is-error\"] : \"\"\n          }\n        />\n      </div>\n      <div className={styles[\"notification-toast-content\"]}>\n        <span>{notification.message}</span>\n      </div>\n    </>\n  );\n};\n\nexport default NotificationToast;\n","import React from \"react\";\nimport { NotificationsContextType } from \".\";\n\nexport const notificationsContext: NotificationsContextType = {\n  notifications: [],\n  dispatch: () => {},\n};\n\nconst NotificationsContext: React.Context<NotificationsContextType> =\n  React.createContext<NotificationsContextType>(notificationsContext);\n\nexport default NotificationsContext;\n","import { useContext } from 'react';\nimport NotificationsContext from './NotificationsContext';\nimport { Notification } from '.';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useNotifications = () => {\n  const { notifications, dispatch } = useContext(NotificationsContext);\n\n  const add = (notification: Notification) => {\n    const id = uuidv4();\n    dispatch({ operation: 'add', notification, id });\n    return id;\n  };\n\n  const markread = (id: string) => {\n    dispatch({ operation: 'markread', id });\n  };\n\n  const remove = (id: string) => {\n    dispatch({ operation: 'remove', id });\n  };\n\n  const set = (id: string, notification: Notification) => {\n    dispatch({ operation: 'set', id, notification });\n  };\n\n  return {\n    notifications,\n    add,\n    markread,\n    remove,\n    set,\n  };\n};\n\nexport default useNotifications;\n","import React, { useReducer } from \"react\";\nimport {\n  NotificationsContextType,\n  NotificationRecord,\n  Notification,\n  NotificationToast,\n} from \".\";\nimport NotificationsContext from \"./NotificationsContext\";\n\nexport const reducer = (\n  state: Array<NotificationRecord>,\n  action: {\n    operation: \"add\" | \"markread\" | \"remove\" | \"set\";\n    notification?: Notification;\n    id: string;\n  }\n): Array<NotificationRecord> => {\n  const { operation, notification, id } = action;\n  if (operation === \"add\") {\n    if (!notification) {\n      throw new Error(\"notification field missing\");\n    }\n    return [{ notification, id, read: false }, ...state];\n  }\n  const index = state.findIndex((existing) => existing.id === id);\n  if (index === -1) {\n    throw new Error(`Could not find notification with id ${id}`);\n  }\n  if (operation === \"markread\") {\n    state[index].read = true;\n    return [...state];\n  }\n  if (operation === \"set\") {\n    if (!notification) {\n      throw new Error(\"notification field missing\");\n    }\n    state[index].notification = { ...notification! };\n    return [...state];\n  }\n  if (operation === \"remove\") {\n    state.splice(index, 1);\n    return [...state];\n  }\n  return state;\n};\n\nconst NotificationsProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const [notifications, dispatch] = useReducer(\n    reducer,\n    [] as Array<NotificationRecord>\n  );\n\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: NotificationsContextType = {\n    notifications,\n    dispatch,\n  };\n\n  return (\n    <NotificationsContext.Provider value={contextValue}>\n      <NotificationToast />\n      {children}\n    </NotificationsContext.Provider>\n  );\n};\n\nexport default NotificationsProvider;\n","import { Tenants } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Tenants.ListTenantsRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Tenants.TenantsApi = apiGenerator<Tenants.TenantsApi>(\n    Tenants,\n    Tenants.TenantsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Tenants.RespListTenants>(() => api.listTenants(params));\n};\n\nexport default list;\n","const QueryKeys = {\n  list: 'tenants/list',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/tenants';\nimport { Tenants } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Tenants.ListTenantsRequest = {};\n\nconst useList = (\n  params: Tenants.ListTenantsRequest = defaultParams,\n  options: QueryObserverOptions<Tenants.RespListTenants, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Tenants.RespListTenants, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import App from './Layout';\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { Sidebar } from \"tapis-app/_components\";\nimport { Router } from \"tapis-app/_Router\";\nimport { PageLayout } from \"cookbooks-ui/_common\";\nimport { NotificationsProvider } from \"tapis-app/_components/Notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport { useList } from \"tapis-hooks/tenants\";\nimport \"./Layout.scss\";\nimport { useTapisConfig } from \"tapis-hooks\";\nimport { useLogin } from \"tapis-hooks/authenticator\";\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { QueryWrapper } from \"cookbooks-ui/_wrappers\";\n\nconst Layout: React.FC = () => {\n  const { claims } = useTapisConfig();\n  const { data, isLoading, error } = useList();\n  const tenants = data?.result ?? [];\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const { logout } = useLogin();\n\n  const header = (\n    <div className=\"cookbooks-ui__header\">\n      <div>Cookbooks UI</div>\n      <div></div>\n      <div>\n        {claims[\"sub\"] && (\n          <ButtonDropdown\n            size=\"sm\"\n            isOpen={isOpen}\n            toggle={() => setIsOpen(!isOpen)}\n            className=\"dropdown-button\"\n          >\n            <DropdownToggle caret>{claims[\"sub\"]}</DropdownToggle>\n            <DropdownMenu style={{ maxHeight: \"50vh\", overflowY: \"scroll\" }}>\n              <DropdownItem header>Tenants</DropdownItem>\n              <DropdownItem divider />\n              <QueryWrapper isLoading={isLoading} error={error}>\n                {tenants.map((tenant) => {\n                  return (\n                    <DropdownItem\n                      onClick={() => {\n                        logout();\n                        window.location.href =\n                          tenant.base_url + \"/cookbooks-ui/\";\n                      }}\n                    >\n                      {tenant.tenant_id}\n                    </DropdownItem>\n                  );\n                })}\n              </QueryWrapper>\n              <DropdownItem divider />\n              <DropdownItem onClick={() => history.push(\"/logout\")}>\n                Logout\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        )}\n      </div>\n    </div>\n  );\n\n  const workbenchContent = (\n    <div className=\"workbench-content\">\n      <Router />\n    </div>\n  );\n\n  return (\n    <NotificationsProvider>\n      <div style={{ display: \"flex\", flexGrow: 1, height: \"100vh\" }}>\n        <PageLayout top={header} left={<Sidebar />} right={workbenchContent} />\n      </div>\n    </NotificationsProvider>\n  );\n};\n\nexport default Layout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"tapis-app\";\nimport TapisProvider from \"tapis-hooks/provider\";\nimport \"cookbooks-ui/index.css\";\nimport { resolveBasePath } from \"utils/resloveBasePath\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TapisProvider basePath={resolveBasePath()}>\n      <Router>\n        <App />\n      </Router>\n    </TapisProvider>\n  </React.StrictMode>,\n  document.getElementById(\"react-root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const resolveBasePath = () => {\n  console.log(window.location.href);\n  let baseUrl = window.location.href\n    .replace(\"/cookbooks-ui/\", \"\")\n    .split(\"#\")[0];\n  // .replace(/^https:\\/\\/ui\\./, 'https://');\n  // Direct request from local dev env to dev.develop\n  if (/127\\.0\\.0\\.1|localhost|0\\.0\\.0\\.0/.test(baseUrl)) {\n    return \"https://tacc.tapis.io\";\n  }\n  return \"https://tacc.tapis.io\";\n  // return baseUrl;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Paginator_root__rzq-y\",\"endcap\":\"Paginator_endcap__XwdVQ\",\"page-root\":\"Paginator_page-root__3d8Z0\",\"page\":\"Paginator_page__DZrT3\",\"current\":\"Paginator_current__1Hi6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Dashboard_cards__2J5lT\",\"card\":\"Dashboard_card__2aPKw\",\"card-header\":\"Dashboard_card-header__3qbGZ\",\"card-footer\":\"Dashboard_card-footer___nhpg\",\"header\":\"Dashboard_header__2TsR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification-toast-container\":\"NotificationToast_notification-toast-container__3v4Cz\",\"MuiSnackbar-anchorOriginBottomLeft\":\"NotificationToast_MuiSnackbar-anchorOriginBottomLeft__gSrzM\",\"notification-toast\":\"NotificationToast_notification-toast__3Usjp\",\"MuiSnackbarContent-root\":\"NotificationToast_MuiSnackbarContent-root__3IttC\",\"toast-is-error\":\"NotificationToast_toast-is-error__1BIGF\",\"notification-toast-body\":\"NotificationToast_notification-toast-body__wL5Kk\",\"MuiSnackbarContent-message\":\"NotificationToast_MuiSnackbarContent-message__2I5ZD\",\"notification-toast-icon-wrapper\":\"NotificationToast_notification-toast-icon-wrapper__2KxSt\",\"notification-toast-content\":\"NotificationToast_notification-toast-content__YS-pU\"};"],"sourceRoot":""}